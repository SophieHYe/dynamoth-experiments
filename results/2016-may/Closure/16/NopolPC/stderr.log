Running ant (compile)...................................................... OK
Running ant (compile.tests)................................................ OK
mkdir: cannot create directory ‘lib/’: File exists
cp: cannot stat ‘/home/tdurieux/defects4j/framework/projects/Closure/lib/*’: No such file or directory
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8
May 16, 2016 7:12:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:12:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:12:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:00 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:12:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:12:00 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:12:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:12:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:12:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:12:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:12:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:12:01 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:12:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:12:01 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:12:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:01 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:12:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:12:01 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:12:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:01 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:12:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:01 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:12:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:12:02 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:12:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:02 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:12:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:12:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:12:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:03 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:12:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:12:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:12:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:12:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:12:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:12:03 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:12:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:12:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:12:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:12:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:12:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:12:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:12:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:12:15 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:12:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:12:15 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:12:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:12:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:12:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:12:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:12:15 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:12:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:12:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:12:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:12:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:12:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:12:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:12:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:12:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:12:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:12:15 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:12:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:12:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:12:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:12:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:12:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:12:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:12:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:12:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:12:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:12:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:12:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:12:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:12:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:12:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:12:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:12:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:12:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:12:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:17 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:12:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:12:17 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:12:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:12:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:12:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:12:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:17 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:12:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:12:18 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:12:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:12:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:12:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:12:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:12:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:12:18 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:12:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:12:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:12:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:18 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:12:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:12:19 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:12:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:19 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:12:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:19 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:12:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:12:19 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:12:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:19 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:12:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:12:19 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:12:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:19 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:12:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:12:19 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:12:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:19 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:12:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:12:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:12:19 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:12:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:12:19 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:12:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:12:19 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:12:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:12:19 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:12:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:12:19 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:12:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:12:19 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:12:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:12:19 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:12:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:19 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:12:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:12:19 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:12:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:12:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:12:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:12:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:12:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:12:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:12:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:12:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:12:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:12:20 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:12:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:12:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:12:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:12:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:12:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:12:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:12:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:12:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:12:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:12:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:12:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:12:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:12:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:12:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:12:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:12:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:12:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:12:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:12:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:12:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:12:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:12:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:12:22 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:12:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:22 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:12:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:12:23 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:12:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:12:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:12:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:12:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:12:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:12:24 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:12:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:12:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:12:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:24 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:12:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:12:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:12:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:12:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:24 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:12:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:12:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:12:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:12:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:12:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:12:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:24 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:12:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:12:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:12:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:12:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:12:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:12:24 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:12:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:12:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:12:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:12:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:12:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:12:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:12:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:12:24 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:12:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:12:24 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:12:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:12:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:12:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:12:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:12:24 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:12:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:12:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:12:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:12:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:12:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:12:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:12:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:12:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:12:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:12:25 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:12:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:12:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:12:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:12:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:12:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:12:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:12:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:12:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:12:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:12:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:12:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:12:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:12:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:12:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:12:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:12:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:12:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:12:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:26 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:12:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:12:26 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:12:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:12:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:12:28 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:12:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:28 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:12:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:12:28 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:12:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:12:28 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:12:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:28 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:12:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:12:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:12:28 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:12:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:12:28 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:12:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:28 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:12:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:12:28 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:12:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:28 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:12:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:28 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:12:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:12:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:12:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:12:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:12:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:12:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:29 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:12:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:12:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:12:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:12:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:12:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:12:30 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:12:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:12:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:12:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:12:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:12:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:12:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:12:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:12:30 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:12:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:12:30 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:12:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:12:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:12:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:12:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:12:30 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:12:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:12:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:12:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:12:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:12:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:12:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:12:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:12:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:12:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:12:30 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:12:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:12:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:12:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:31 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:12:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:12:31 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:12:31 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:12:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:12:31 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:12:31 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:12:31 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:12:31 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:12:31 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:12:31 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:12:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:12:31 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:12:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:31 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:12:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:31 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:12:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:31 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:12:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:12:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:12:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:12:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:33 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:12:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:12:33 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:12:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:12:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:12:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:12:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:12:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:12:34 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:12:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:12:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:12:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:34 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:12:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:12:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:12:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:12:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:34 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:12:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:12:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:12:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:12:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:12:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:12:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:35 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:12:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:12:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:12:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:12:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:12:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:12:35 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:12:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:12:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:12:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:12:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:12:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:12:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:12:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:12:35 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:12:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:12:35 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:12:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:12:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:12:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:12:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:12:35 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:12:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:12:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:12:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:12:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:12:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:12:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:12:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:12:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:12:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:12:35 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:12:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:12:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:12:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:12:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:12:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:12:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:12:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:12:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:12:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:12:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:12:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:12:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:12:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:12:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:12:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:12:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:12:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:12:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:36 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:12:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:12:36 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:12:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:12:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:12:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:12:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:38 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:12:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:12:38 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:12:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:12:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:12:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:12:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:12:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:12:38 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:12:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:12:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:12:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:38 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:12:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:12:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:12:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:12:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:38 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:12:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:12:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:12:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:12:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:12:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:12:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:40 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:12:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:12:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:12:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:12:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:12:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:12:40 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:12:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:12:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:12:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:12:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:12:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:12:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:12:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:12:40 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:12:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:12:40 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:12:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:12:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:12:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:12:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:12:40 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:12:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:12:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:12:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:12:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:12:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:12:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:12:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:12:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:12:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:12:41 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:12:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:12:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:12:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:12:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:12:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:12:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:12:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:12:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:12:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:12:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:12:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:12:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:12:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:12:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:12:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:12:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:12:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:12:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:41 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:12:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:12:41 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:12:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:12:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:12:43 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:12:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:43 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:12:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:12:43 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:12:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:12:43 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:12:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:43 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:12:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:12:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:12:43 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:12:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:12:43 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:12:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:43 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:12:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:12:43 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:12:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:43 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:12:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:44 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:12:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:12:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:12:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:12:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:12:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:12:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:44 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:12:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:12:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:12:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:12:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:12:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:12:44 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:12:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:12:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:12:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:12:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:12:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:12:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:12:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:12:45 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:12:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:12:45 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:12:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:12:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:12:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:12:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:12:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:12:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:12:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:12:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:12:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:12:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:12:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:12:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:12:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:12:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:12:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:12:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:12:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:12:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:12:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:12:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:12:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:12:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:12:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:12:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:12:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:12:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:12:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:12:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:12:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:12:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:12:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:12:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:12:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:47 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:12:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:12:47 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:12:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:12:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:12:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:12:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:48 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:12:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:12:48 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:12:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:12:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:12:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:12:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:12:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:12:48 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:12:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:12:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:12:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:48 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:12:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:12:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:12:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:12:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:49 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:12:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:12:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:12:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:12:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:12:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:12:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:49 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:12:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:12:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:12:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:12:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:12:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:12:49 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:12:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:12:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:12:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:12:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:12:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:12:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:12:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:12:49 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:12:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:12:49 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:12:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:12:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:12:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:12:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:12:49 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:12:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:12:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:12:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:12:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:12:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:12:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:12:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:12:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:12:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:12:50 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:12:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:12:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:12:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:12:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:12:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:12:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:12:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:12:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:12:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:12:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:12:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:12:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:12:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:12:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:12:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:12:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:12:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:12:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:51 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:12:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:12:51 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:12:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
java.lang.ClassCastException: spoon.support.reflect.code.CtIfImpl cannot be cast to spoon.reflect.code.CtExpression
	at spoon.support.visitor.replace.ReplacementVisitor$CtTargetedExpressionTargetReplaceListener.set(ReplacementVisitor.java:808)
	at spoon.support.visitor.replace.ReplacementVisitor.replaceElementIfExist(ReplacementVisitor.java:1173)
	at spoon.support.visitor.replace.ReplacementVisitor.visitCtInvocation(ReplacementVisitor.java:1428)
	at spoon.support.reflect.code.CtInvocationImpl.accept(CtInvocationImpl.java:48)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:147)
	at spoon.support.visitor.replace.ReplacementVisitor.replace(ReplacementVisitor.java:1096)
	at spoon.support.reflect.declaration.CtElementImpl.replace(CtElementImpl.java:386)
	at spoon.support.reflect.code.CtInvocationImpl.replace(CtInvocationImpl.java:144)
	at spoon.support.reflect.code.CtInvocationImpl.replace(CtInvocationImpl.java:136)
	at fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder.processCondition(ConditionalAdder.java:24)
	at fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter.process(ConditionalLoggingInstrumenter.java:46)
	at fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter.process(ConditionalLoggingInstrumenter.java:21)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:92)
	at spoon.reflect.visitor.CtScanner.visitCtInvocation(CtScanner.java:489)
	at spoon.support.reflect.code.CtInvocationImpl.accept(CtInvocationImpl.java:48)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:147)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:88)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:64)
	at spoon.reflect.visitor.CtScanner.visitCtBlock(CtScanner.java:286)
	at spoon.support.reflect.code.CtBlockImpl.accept(CtBlockImpl.java:47)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:147)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:88)
	at spoon.reflect.visitor.CtScanner.visitCtMethod(CtScanner.java:545)
	at spoon.support.reflect.declaration.CtMethodImpl.accept(CtMethodImpl.java:60)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:147)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:88)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:64)
	at spoon.reflect.visitor.CtScanner.visitCtClass(CtScanner.java:326)
	at spoon.support.reflect.declaration.CtClassImpl.accept(CtClassImpl.java:58)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:147)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:88)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:64)
	at spoon.reflect.visitor.CtScanner.visitCtClass(CtScanner.java:323)
	at spoon.support.reflect.declaration.CtClassImpl.accept(CtClassImpl.java:58)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:147)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:88)
	at spoon.support.RuntimeProcessingManager.process(RuntimeProcessingManager.java:145)
	at spoon.support.RuntimeProcessingManager.process(RuntimeProcessingManager.java:133)
	at fr.inria.lille.commons.spoon.SpoonedFile.processModelledClasses(SpoonedFile.java:136)
	at fr.inria.lille.commons.spoon.SpoonedFile.process(SpoonedFile.java:128)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:119)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:115)
	at fr.inria.lille.repair.nopol.synth.ConstraintModelBuilder.<init>(ConstraintModelBuilder.java:57)
	at fr.inria.lille.repair.nopol.synth.SynthesizerFactory.getFor(SynthesizerFactory.java:122)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:164)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:119)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:89)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:84)
	at fr.inria.lille.repair.Main.main(Main.java:61)
May 16, 2016 7:12:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:12:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:12:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:54 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:12:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:12:54 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:12:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:12:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:12:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:12:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:12:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:12:54 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:12:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:12:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:12:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:54 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:12:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:12:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:12:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:12:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:54 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:12:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:12:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:12:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:12:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:12:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:12:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:55 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:12:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:12:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:12:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:12:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:12:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:12:55 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:12:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:12:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:12:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:12:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:12:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:12:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:12:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:12:55 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:12:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:12:55 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:12:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:12:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:12:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:12:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:12:56 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:12:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:12:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:12:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:12:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:12:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:12:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:12:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:12:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:12:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:12:56 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:12:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:12:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:12:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:12:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:12:57 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:12:57 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:12:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:12:57 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:12:57 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:12:57 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:12:57 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:12:57 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:12:57 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:12:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:12:57 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:12:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:57 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:12:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:57 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:12:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:57 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:12:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:12:57 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:12:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 86.7% typed
May 16, 2016 7:12:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:12:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:12:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:59 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:12:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:12:59 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:12:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:12:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:12:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:12:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:12:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:12:59 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:12:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:12:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:12:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:59 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:12:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:12:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:12:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:12:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:59 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:12:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:12:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:12:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:12:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:12:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:13:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:00 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:13:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:13:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:13:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:00 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:13:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:13:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:13:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:13:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:13:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:00 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:13:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:13:00 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:13:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:13:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:13:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:00 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:13:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:13:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:13:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:13:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:13:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:13:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:13:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:13:02 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:13:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:02 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:13:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:02 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:13:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:02 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:13:02 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:13:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:13:02 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:13:02 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:13:02 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:13:02 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:13:02 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:13:02 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:13:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:13:02 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:13:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:02 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:13:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:02 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:13:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:02 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:13:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:02 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:13:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:13:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:13:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:04 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:13:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:04 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:13:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:13:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:13:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:13:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:13:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:13:04 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:13:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:13:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:04 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:13:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:13:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:13:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:13:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:04 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:13:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:13:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:13:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:13:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:13:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:05 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:13:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:13:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:13:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:05 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:13:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:13:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:13:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:13:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:13:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:05 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:13:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:13:05 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:13:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:13:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:13:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:05 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:13:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:13:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:13:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:13:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:13:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:13:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:13:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:13:06 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:13:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:13:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:13:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:13:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:13:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:13:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:13:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:13:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:13:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:13:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:13:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:13:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:13:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:13:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:13:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:13:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:07 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:13:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:07 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:13:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:13:09 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:13:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:09 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:13:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:09 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:13:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:13:09 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:13:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:09 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:13:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:13:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:13:10 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:13:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:13:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:10 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:13:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:13:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:13:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:13:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:10 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:13:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:13:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:13:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:13:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:13:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:10 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:13:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:13:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:13:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:10 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:13:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:13:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:13:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:13:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:13:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:11 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:13:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:13:11 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:13:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:11 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:13:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:11 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:13:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:11 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:13:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:11 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:13:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:11 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:13:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:11 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:13:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:11 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:13:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:11 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:13:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:13:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:13:11 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:13:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:11 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:13:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:11 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:13:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:12 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:13:12 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:13:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:13:12 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:13:12 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:13:12 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:13:12 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:13:12 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:13:12 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:13:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:13:12 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:13:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:12 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:13:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:12 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:13:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 86.7% typed
May 16, 2016 7:13:13 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:13:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
java.lang.ClassCastException: spoon.support.reflect.code.CtIfImpl cannot be cast to spoon.reflect.code.CtExpression
	at spoon.support.visitor.replace.ReplacementVisitor$CtTargetedExpressionTargetReplaceListener.set(ReplacementVisitor.java:808)
	at spoon.support.visitor.replace.ReplacementVisitor.replaceElementIfExist(ReplacementVisitor.java:1173)
	at spoon.support.visitor.replace.ReplacementVisitor.visitCtInvocation(ReplacementVisitor.java:1428)
	at spoon.support.reflect.code.CtInvocationImpl.accept(CtInvocationImpl.java:48)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:147)
	at spoon.support.visitor.replace.ReplacementVisitor.replace(ReplacementVisitor.java:1096)
	at spoon.support.reflect.declaration.CtElementImpl.replace(CtElementImpl.java:386)
	at spoon.support.reflect.code.CtInvocationImpl.replace(CtInvocationImpl.java:144)
	at spoon.support.reflect.code.CtInvocationImpl.replace(CtInvocationImpl.java:136)
	at fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder.processCondition(ConditionalAdder.java:24)
	at fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter.process(ConditionalLoggingInstrumenter.java:46)
	at fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter.process(ConditionalLoggingInstrumenter.java:21)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:92)
	at spoon.reflect.visitor.CtScanner.visitCtInvocation(CtScanner.java:489)
	at spoon.support.reflect.code.CtInvocationImpl.accept(CtInvocationImpl.java:48)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:147)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:88)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:64)
	at spoon.reflect.visitor.CtScanner.visitCtBlock(CtScanner.java:286)
	at spoon.support.reflect.code.CtBlockImpl.accept(CtBlockImpl.java:47)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:147)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:88)
	at spoon.reflect.visitor.CtScanner.visitCtIf(CtScanner.java:467)
	at spoon.support.reflect.code.CtIfImpl.accept(CtIfImpl.java:37)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:147)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:88)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:64)
	at spoon.reflect.visitor.CtScanner.visitCtBlock(CtScanner.java:286)
	at spoon.support.reflect.code.CtBlockImpl.accept(CtBlockImpl.java:47)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:147)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:88)
	at spoon.reflect.visitor.CtScanner.visitCtForEach(CtScanner.java:458)
	at spoon.support.reflect.code.CtForEachImpl.accept(CtForEachImpl.java:33)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:147)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:88)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:64)
	at spoon.reflect.visitor.CtScanner.visitCtBlock(CtScanner.java:286)
	at spoon.support.reflect.code.CtBlockImpl.accept(CtBlockImpl.java:47)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:147)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:88)
	at spoon.reflect.visitor.CtScanner.visitCtIf(CtScanner.java:467)
	at spoon.support.reflect.code.CtIfImpl.accept(CtIfImpl.java:37)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:147)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:88)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:64)
	at spoon.reflect.visitor.CtScanner.visitCtBlock(CtScanner.java:286)
	at spoon.support.reflect.code.CtBlockImpl.accept(CtBlockImpl.java:47)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:147)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:88)
	at spoon.reflect.visitor.CtScanner.visitCtMethod(CtScanner.java:545)
	at spoon.support.reflect.declaration.CtMethodImpl.accept(CtMethodImpl.java:60)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:147)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:88)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:64)
	at spoon.reflect.visitor.CtScanner.visitCtClass(CtScanner.java:326)
	at spoon.support.reflect.declaration.CtClassImpl.accept(CtClassImpl.java:58)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:147)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:88)
	at spoon.support.RuntimeProcessingManager.process(RuntimeProcessingManager.java:145)
	at spoon.support.RuntimeProcessingManager.process(RuntimeProcessingManager.java:133)
	at fr.inria.lille.commons.spoon.SpoonedFile.processModelledClasses(SpoonedFile.java:136)
	at fr.inria.lille.commons.spoon.SpoonedFile.process(SpoonedFile.java:128)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:119)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:115)
	at fr.inria.lille.repair.nopol.synth.ConstraintModelBuilder.<init>(ConstraintModelBuilder.java:57)
	at fr.inria.lille.repair.nopol.synth.SynthesizerFactory.getFor(SynthesizerFactory.java:122)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:164)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:119)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:89)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:84)
	at fr.inria.lille.repair.Main.main(Main.java:61)
May 16, 2016 7:13:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:13:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:13:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:15 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:13:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:15 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:13:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:13:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:13:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:13:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:13:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:13:16 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:13:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:13:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:16 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:13:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:13:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:13:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:13:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:16 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:13:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:13:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:13:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:13:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:13:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:16 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:13:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:13:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:13:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:16 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:13:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:13:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:13:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:13:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:13:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:17 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:13:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:13:17 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:13:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:13:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:13:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:17 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:13:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:13:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:13:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:13:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:13:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:13:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:13:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:13:17 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:13:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:13:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:13:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:13:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:13:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:13:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:13:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:13:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:13:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:13:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:13:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:13:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:13:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:13:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:13:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:13:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:19 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:13:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:19 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:13:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:13:21 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:13:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:13:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:13:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:13:22 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:13:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:22 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:13:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:13:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:13:22 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:13:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:22 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:13:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:22 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:13:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:13:22 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:13:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:22 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:13:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:22 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:13:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:13:22 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:13:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:22 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:13:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:22 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:13:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:22 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:13:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:13:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:13:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:23 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:13:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:13:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:13:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:13:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:13:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:24 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:13:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:13:24 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:13:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:13:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:13:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:24 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:13:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:13:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:13:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:13:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:13:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:13:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:13:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:13:24 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:13:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:13:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:13:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:13:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:13:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:13:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:13:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:13:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:13:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:13:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:13:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:13:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:13:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:13:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:13:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:13:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:25 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:13:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:25 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:13:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:13:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:13:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:27 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:13:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:27 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:13:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:13:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:13:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:13:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:13:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:13:27 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:13:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:13:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:27 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:13:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:13:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:13:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:13:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:27 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:13:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:13:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:13:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:13:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:28 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:13:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:28 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:13:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:28 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:13:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:28 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:13:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:28 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:13:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:28 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:13:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:13:28 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:13:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:28 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:13:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:28 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:13:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:13:28 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:13:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:28 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:13:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:28 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:13:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:28 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:13:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:28 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:13:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:28 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:13:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:13:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:13:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:13:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:13:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:13:29 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:13:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:13:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:13:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:13:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:13:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:13:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:13:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:13:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:13:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:13:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:13:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:13:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:13:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:13:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:13:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:13:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:30 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:13:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:30 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:13:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
java.lang.ClassCastException: spoon.support.reflect.code.CtIfImpl cannot be cast to spoon.reflect.code.CtExpression
	at spoon.support.visitor.replace.ReplacementVisitor$CtTargetedExpressionTargetReplaceListener.set(ReplacementVisitor.java:808)
	at spoon.support.visitor.replace.ReplacementVisitor.replaceElementIfExist(ReplacementVisitor.java:1173)
	at spoon.support.visitor.replace.ReplacementVisitor.visitCtInvocation(ReplacementVisitor.java:1428)
	at spoon.support.reflect.code.CtInvocationImpl.accept(CtInvocationImpl.java:48)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:147)
	at spoon.support.visitor.replace.ReplacementVisitor.replace(ReplacementVisitor.java:1096)
	at spoon.support.reflect.declaration.CtElementImpl.replace(CtElementImpl.java:386)
	at spoon.support.reflect.code.CtInvocationImpl.replace(CtInvocationImpl.java:144)
	at spoon.support.reflect.code.CtInvocationImpl.replace(CtInvocationImpl.java:136)
	at fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder.processCondition(ConditionalAdder.java:24)
	at fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter.process(ConditionalLoggingInstrumenter.java:46)
	at fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter.process(ConditionalLoggingInstrumenter.java:21)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:92)
	at spoon.reflect.visitor.CtScanner.visitCtInvocation(CtScanner.java:489)
	at spoon.support.reflect.code.CtInvocationImpl.accept(CtInvocationImpl.java:48)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:147)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:88)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:64)
	at spoon.reflect.visitor.CtScanner.visitCtBlock(CtScanner.java:286)
	at spoon.support.reflect.code.CtBlockImpl.accept(CtBlockImpl.java:47)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:147)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:88)
	at spoon.reflect.visitor.CtScanner.visitCtForEach(CtScanner.java:458)
	at spoon.support.reflect.code.CtForEachImpl.accept(CtForEachImpl.java:33)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:147)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:88)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:64)
	at spoon.reflect.visitor.CtScanner.visitCtBlock(CtScanner.java:286)
	at spoon.support.reflect.code.CtBlockImpl.accept(CtBlockImpl.java:47)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:147)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:88)
	at spoon.reflect.visitor.CtScanner.visitCtIf(CtScanner.java:467)
	at spoon.support.reflect.code.CtIfImpl.accept(CtIfImpl.java:37)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:147)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:88)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:64)
	at spoon.reflect.visitor.CtScanner.visitCtBlock(CtScanner.java:286)
	at spoon.support.reflect.code.CtBlockImpl.accept(CtBlockImpl.java:47)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:147)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:88)
	at spoon.reflect.visitor.CtScanner.visitCtMethod(CtScanner.java:545)
	at spoon.support.reflect.declaration.CtMethodImpl.accept(CtMethodImpl.java:60)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:147)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:88)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:64)
	at spoon.reflect.visitor.CtScanner.visitCtClass(CtScanner.java:326)
	at spoon.support.reflect.declaration.CtClassImpl.accept(CtClassImpl.java:58)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:147)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:88)
	at spoon.support.RuntimeProcessingManager.process(RuntimeProcessingManager.java:145)
	at spoon.support.RuntimeProcessingManager.process(RuntimeProcessingManager.java:133)
	at fr.inria.lille.commons.spoon.SpoonedFile.processModelledClasses(SpoonedFile.java:136)
	at fr.inria.lille.commons.spoon.SpoonedFile.process(SpoonedFile.java:128)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:119)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:115)
	at fr.inria.lille.repair.nopol.synth.ConstraintModelBuilder.<init>(ConstraintModelBuilder.java:57)
	at fr.inria.lille.repair.nopol.synth.SynthesizerFactory.getFor(SynthesizerFactory.java:122)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:164)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:119)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:89)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:84)
	at fr.inria.lille.repair.Main.main(Main.java:61)
May 16, 2016 7:13:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:13:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:13:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:32 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:13:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:32 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:13:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:13:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:13:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:13:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:13:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:13:32 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:13:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:13:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:32 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:13:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:13:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:13:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:13:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:33 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:13:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:13:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:13:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:13:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:13:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:33 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:13:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:13:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:13:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:33 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:13:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:13:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:13:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:13:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:13:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:33 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:13:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:13:33 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:13:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:13:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:13:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:34 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:13:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:13:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:13:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:13:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:13:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:13:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:13:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:13:35 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:13:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:13:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:13:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:13:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:13:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:13:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:13:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:13:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:13:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:13:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:13:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:13:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:13:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:13:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:13:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:13:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:36 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:13:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:13:37 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:13:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:37 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:13:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:38 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:13:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:13:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:13:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:13:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:13:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:13:38 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:13:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:13:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:38 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:13:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:13:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:13:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:13:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:38 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:13:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:13:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:13:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:13:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:13:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:38 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:13:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:13:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:13:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:39 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:13:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:13:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:13:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:13:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:13:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:39 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:13:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:13:39 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:13:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:13:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:13:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:39 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:13:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:13:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:13:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:13:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:13:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:13:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:13:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:13:40 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:13:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:13:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:13:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:13:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:13:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:13:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:13:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:13:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:13:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:13:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:13:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:13:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:13:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:13:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:13:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:13:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:41 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:13:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:13:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:13:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:42 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:13:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:43 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:13:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:13:43 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:13:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:43 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:13:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:13:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:13:43 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:13:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:43 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:13:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:43 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:13:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:13:43 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:13:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:43 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:13:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:43 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:13:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:13:43 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:13:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:43 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:13:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:43 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:13:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:43 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:13:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:13:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:13:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:44 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:13:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:13:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:13:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:13:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:13:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:44 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:13:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:13:44 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:13:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:13:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:13:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:44 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:13:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:13:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:13:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:13:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:13:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:13:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:13:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:13:45 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:13:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:13:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:13:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:13:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:13:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:13:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:13:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:13:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:13:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:13:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:13:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:13:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:13:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:13:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:13:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:13:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:13:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:13:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:13:47 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:13:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:47 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:13:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:47 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:13:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:13:47 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:13:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:47 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:13:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:13:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:13:48 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:13:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:13:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:48 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:13:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:13:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:13:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:13:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:48 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:13:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:13:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:13:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:13:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:13:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:49 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:13:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:13:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:13:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:49 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:13:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:13:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:13:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:13:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:13:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:49 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:13:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:13:50 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:13:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:13:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:13:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:50 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:13:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:13:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:13:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:13:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:13:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:13:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:13:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:13:50 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:13:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:13:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:13:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:13:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:13:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:13:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:13:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:13:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:13:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:13:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:13:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:13:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:13:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:13:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:13:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:13:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:51 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:13:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:13:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:13:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:53 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:13:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:53 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:13:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:13:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:13:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:13:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:13:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:13:53 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:13:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:13:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:53 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:13:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:13:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:13:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:13:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:53 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:13:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:13:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:13:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:13:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:13:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:53 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:13:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:13:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:13:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:54 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:13:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:13:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:13:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:13:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:13:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:54 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:13:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:13:54 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:13:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:13:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:13:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:54 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:13:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:13:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:13:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:13:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:13:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:13:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:13:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:13:55 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:13:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:13:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:13:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:13:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:13:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:13:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:13:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:13:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:13:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:13:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:13:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:13:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:13:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:13:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:13:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:13:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:56 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:13:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:56 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:13:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:13:57 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:13:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:57 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:13:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:58 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:13:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:13:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:13:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:13:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:13:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:13:58 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:13:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:13:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:58 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:13:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:13:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:13:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:13:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:58 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:13:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:13:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:13:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:13:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:13:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:59 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:13:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:13:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:13:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:59 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:13:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:13:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:13:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:13:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:13:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:59 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:13:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:13:59 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:13:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:13:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:13:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:59 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:13:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:13:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:13:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:13:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:13:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:13:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:13:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:13:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:13:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:14:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:14:00 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:14:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:14:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:14:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:14:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:14:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:14:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:14:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:14:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:14:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:14:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:14:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:14:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:14:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:14:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:14:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:14:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:01 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:14:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:01 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:14:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:14:02 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:14:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:02 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:14:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:02 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:14:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:14:02 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:14:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:02 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:14:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:14:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:14:02 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:14:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:02 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:14:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:02 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:14:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:14:02 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:14:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:02 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:14:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:02 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:14:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:14:02 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:14:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:02 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:14:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:14:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:03 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:14:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:14:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:14:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:04 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:14:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:14:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:14:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:14:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:14:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:04 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:14:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:14:04 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:14:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:14:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:14:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:04 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:14:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:14:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:14:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:14:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:14:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:14:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:14:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:14:05 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:14:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:14:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:14:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:14:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:14:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:14:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:14:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:14:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:14:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:14:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:14:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:14:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:14:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:14:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:14:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:14:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:05 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:14:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:05 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:14:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:14:07 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:14:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:07 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:14:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:07 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:14:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:14:07 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:14:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:07 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:14:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:14:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:14:07 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:14:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:07 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:14:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:07 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:14:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:14:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:14:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:14:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:08 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:14:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:14:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:14:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:14:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:14:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:08 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:14:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:14:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:14:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:08 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:14:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:14:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:14:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:14:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:14:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:08 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:14:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:14:08 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:14:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:09 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:14:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:09 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:14:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:09 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:14:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:09 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:14:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:09 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:14:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:09 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:14:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:09 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:14:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:09 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:14:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:14:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:14:10 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:14:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:14:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:14:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:14:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:14:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:14:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:14:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:14:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:14:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:14:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:14:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:14:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:14:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:14:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:14:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:11 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:14:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:11 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:14:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:11 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:14:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:14:12 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:14:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:12 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:14:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:12 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:14:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:14:12 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:14:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:12 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:14:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:14:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:14:13 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:14:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:14:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:13 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:14:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:14:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:14:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:14:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:13 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:14:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:14:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:14:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:14:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:14:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:13 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:14:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:14:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:14:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:13 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:14:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:14:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:14:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:14:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:14:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:14 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:14:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:14:14 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:14:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:14:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:14:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:14 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:14:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:14:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:14:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:14:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:14:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:14:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:14:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:14:14 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:14:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:14:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:14:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:14:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:14:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:14:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:14:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:14:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:14:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:14:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:14:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:14:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:14:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:14:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:14:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:14:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:16 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:14:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:14:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:14:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:18 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:14:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:18 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:14:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:14:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:14:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:14:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:14:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:14:19 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:14:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:19 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:14:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:19 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:14:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:14:19 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:14:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:19 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:14:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:19 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:14:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:14:19 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:14:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:19 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:14:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:19 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:14:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:19 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:14:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:19 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:14:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:19 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:14:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:19 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:14:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:19 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:14:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:14:19 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:14:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:19 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:14:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:20 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:14:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:14:20 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:14:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:14:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:14:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:20 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:14:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:14:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:14:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:14:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:14:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:14:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:14:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:14:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:14:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:21 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:14:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:21 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:14:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:21 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:14:21 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:14:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:14:21 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:14:21 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:14:21 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:14:21 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:14:21 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:14:21 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:14:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:14:22 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:14:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:22 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:14:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:22 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:14:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:22 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:14:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:14:28 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:14:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:28 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:14:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:28 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:14:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:14:28 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:14:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:28 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:14:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:14:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:14:29 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:14:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:14:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:29 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:14:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:14:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:14:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:14:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:29 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:14:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:14:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:14:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:14:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:14:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:30 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:14:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:14:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:14:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:30 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:14:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:14:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:14:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:14:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:14:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:31 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:14:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:14:31 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:14:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:31 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:14:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:31 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:14:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:31 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:14:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:31 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:14:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:31 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:14:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:31 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:14:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:31 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:14:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:31 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:14:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:14:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:14:31 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:14:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:31 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:14:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:31 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:14:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:14:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:14:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:14:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:14:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:14:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:14:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:14:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:14:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:14:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:14:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:14:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:14:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:14:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:32 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:14:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:32 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:14:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:14:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:14:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:33 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:14:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:34 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:14:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:14:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:14:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:14:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:14:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:14:34 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:14:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:14:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:34 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:14:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:14:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:14:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:14:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:34 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:14:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:14:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:14:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:14:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:14:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:34 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:14:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:14:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:14:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:34 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:14:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:14:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:14:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:14:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:14:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:35 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:14:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:14:35 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:14:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:14:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:14:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:35 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:14:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:14:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:14:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:14:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:14:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:14:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:14:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:14:36 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:14:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:14:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:14:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:37 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:14:37 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:14:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:14:37 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:14:37 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:14:37 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:14:37 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:14:37 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:14:37 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:14:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:14:37 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:14:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:37 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:14:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:37 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:14:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:37 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:14:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:37 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:14:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 88.9% typed
May 16, 2016 7:14:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:14:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:14:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:39 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:14:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:39 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:14:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:14:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:14:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:14:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:14:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:14:39 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:14:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:14:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:39 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:14:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:14:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:14:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:14:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:39 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:14:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:14:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:14:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:14:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:14:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:40 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:14:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:14:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:14:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:40 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:14:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:14:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:14:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:14:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:14:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:40 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:14:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:14:40 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:14:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:14:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:14:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:40 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:14:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:14:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:14:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:14:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:14:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:14:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:14:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:14:41 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:14:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:14:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:14:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:14:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:14:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:14:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:14:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:14:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:14:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:14:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:14:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:14:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:14:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:14:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:14:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:14:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:42 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:14:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:42 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:14:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:14:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:14:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:44 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:14:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:44 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:14:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:14:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:14:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:14:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:14:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:14:44 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:14:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:14:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:44 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:14:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:14:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:14:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:14:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:44 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:14:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:14:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:14:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:14:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:14:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:45 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:14:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:14:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:14:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:45 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:14:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:14:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:14:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:14:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:14:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:45 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:14:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:14:45 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:14:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:14:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:14:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:45 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:14:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:14:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:14:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:14:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:14:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:14:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:14:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:14:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:14:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:14:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:14:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:14:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:14:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:14:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:14:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:14:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:14:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:14:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:14:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:14:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:14:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:14:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:14:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:14:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:48 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:14:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:48 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:14:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 86.7% typed
May 16, 2016 7:14:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:14:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:14:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:48 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:14:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:48 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:14:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:14:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:14:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:14:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:14:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:14:49 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:14:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:14:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:49 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:14:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:14:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:14:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:14:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:50 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:14:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:14:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:14:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:14:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:14:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:50 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:14:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:14:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:14:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:50 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:14:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:14:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:14:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:14:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:14:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:50 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:14:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:14:50 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:14:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:14:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:14:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:51 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:14:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:14:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:14:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:14:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:14:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:14:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:14:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:14:51 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:14:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:14:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:14:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:14:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:14:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:14:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:14:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:14:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:14:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:14:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:14:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:14:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:14:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:14:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:14:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:14:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 86.7% typed
May 16, 2016 7:14:51 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:14:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:14:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:14:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:53 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:14:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:53 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:14:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:14:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:14:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:14:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:14:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:14:53 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:14:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:14:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:53 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:14:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:14:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:14:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:14:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:53 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:14:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:14:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:14:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:14:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:14:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:54 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:14:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:14:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:14:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:54 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:14:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:14:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:14:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:14:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:14:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:54 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:14:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:14:54 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:14:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:14:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:14:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:55 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:14:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:14:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:14:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:14:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:14:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:14:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:14:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:14:56 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:14:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:14:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:14:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:14:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:14:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:14:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:14:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:14:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:14:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:14:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:14:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:14:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:14:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:14:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:14:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:14:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:56 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:14:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:56 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:14:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:14:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:14:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:58 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:14:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:58 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:14:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:14:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:14:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:14:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:14:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:14:58 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:14:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:14:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:58 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:14:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:14:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:14:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:14:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:58 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:14:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:14:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:14:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:14:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:14:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:59 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:14:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:14:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:14:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:59 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:14:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:14:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:14:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:14:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:14:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:59 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:14:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:14:59 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:14:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:14:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:14:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:14:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:14:59 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:14:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:14:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:14:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:15:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:15:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:15:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:15:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:15:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:15:00 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:15:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:15:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:15:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:15:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:15:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:15:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:15:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:15:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:15:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:15:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:15:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:15:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:15:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:15:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:15:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:15:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:02 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:15:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:02 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:15:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:15:02 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:15:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:02 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:15:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:02 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:15:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:15:02 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:15:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:02 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:15:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:15:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:15:03 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:15:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:15:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:03 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:15:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:15:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:15:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:15:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:04 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:15:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:15:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:15:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:15:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:15:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:04 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:15:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:15:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:15:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:04 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:15:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:15:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:15:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:15:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:15:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:04 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:15:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:15:04 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:15:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:15:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:15:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:05 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:15:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:15:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:15:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:15:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:15:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:15:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:15:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:15:05 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:15:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:15:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:15:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:15:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:15:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:15:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:15:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:15:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:15:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:15:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:15:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:15:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:15:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:15:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:15:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:15:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:06 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:15:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:06 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:15:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:15:07 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:15:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:07 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:15:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:07 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:15:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:15:07 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:15:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:07 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:15:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:15:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:15:07 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:15:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:07 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:15:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:07 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:15:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:15:07 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:15:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:07 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:15:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:08 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:15:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:15:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:15:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:15:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:09 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:15:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:09 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:15:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:09 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:15:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:09 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:15:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:09 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:15:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:09 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:15:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:15:09 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:15:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:09 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:15:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:09 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:15:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:15:09 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:15:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:09 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:15:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:09 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:15:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:09 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:15:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:09 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:15:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:09 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:15:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:09 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:15:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:09 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:15:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:09 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:15:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:15:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:15:09 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:15:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:09 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:15:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:09 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:15:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:15:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:15:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:15:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:15:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:15:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:15:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:15:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:15:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:15:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:15:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:15:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:15:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:15:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:10 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:15:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:15:11 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:15:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:11 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:15:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:12 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:15:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:15:12 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:15:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:12 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:15:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:15:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:15:12 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:15:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:12 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:15:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:12 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:15:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:15:12 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:15:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:12 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:15:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:12 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:15:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:15:12 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:15:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:12 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:15:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:12 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:15:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:12 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:15:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:12 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:15:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:12 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:15:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:12 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:15:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:12 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:15:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:15:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:15:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:15:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:13 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:15:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:15:13 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:15:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:15:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:15:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:14 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:15:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:15:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:15:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:15:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:15:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:15:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:15:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:15:14 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:15:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:15:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:15:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:15:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:15:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:15:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:15:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:15:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:15:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:15:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:15:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:15:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:15:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:15:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:15:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:15:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:15 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:15:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:15:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:15:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:16 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:15:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:16 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:15:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:15:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:15:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:15:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:15:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:15:16 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:15:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:15:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:16 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:15:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:15:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:15:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:15:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:17 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:15:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:15:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:15:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:15:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:15:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:17 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:15:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:15:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:15:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:17 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:15:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:15:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:15:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:15:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:15:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:17 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:15:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:15:17 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:15:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:15:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:15:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:18 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:15:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:15:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:15:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:15:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:15:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:15:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:15:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:15:18 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:15:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:15:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:15:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:19 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:15:19 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:15:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:15:19 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:15:19 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:15:19 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:15:19 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:15:19 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:15:19 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:15:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:15:19 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:15:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:19 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:15:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:19 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:15:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:20 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:15:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:20 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:15:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:15:21 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:15:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:22 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:15:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:22 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:15:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:15:22 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:15:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:22 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:15:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:15:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:15:22 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:15:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:22 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:15:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:22 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:15:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:15:22 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:15:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:22 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:15:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:22 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:15:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:15:22 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:15:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:22 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:15:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:22 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:15:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:22 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:15:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:15:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:15:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:23 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:15:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:15:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:15:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:15:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:15:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:23 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:15:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:15:23 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:15:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:15:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:15:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:23 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:15:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:15:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:15:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:15:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:15:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:15:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:15:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:15:23 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:15:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:15:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:15:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:15:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:15:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:15:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:15:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:15:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:15:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:15:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:15:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:15:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:15:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:15:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:15:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:15:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:25 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:15:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:25 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:15:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:15:26 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:15:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:26 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:15:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:27 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:15:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:15:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:15:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:15:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:15:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:15:28 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:15:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:28 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:15:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:28 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:15:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:15:28 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:15:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:28 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:15:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:28 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:15:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:15:28 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:15:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:28 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:15:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:28 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:15:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:28 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:15:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:28 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:15:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:28 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:15:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:28 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:15:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:28 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:15:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:15:28 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:15:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:28 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:15:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:29 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:15:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:15:29 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:15:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:15:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:15:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:29 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:15:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:15:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:15:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:15:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:15:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:15:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:15:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:15:29 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:15:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:15:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:15:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:15:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:15:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:15:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:15:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:15:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:15:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:15:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:15:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:15:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:15:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:15:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:15:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:15:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:31 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:15:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 88.9% typed
May 16, 2016 7:15:31 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:15:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:15:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:15:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:32 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:15:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:32 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:15:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:15:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:15:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:15:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:15:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:15:33 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:15:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:15:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:33 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:15:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:15:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:15:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:15:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:33 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:15:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:15:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:15:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:15:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:15:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:33 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:15:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:15:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:15:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:34 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:15:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:15:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:15:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:15:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:15:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:34 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:15:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:15:34 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:15:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:15:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:15:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:34 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:15:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:15:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:15:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:15:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:15:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:15:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:15:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:15:35 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:15:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:15:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:15:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:15:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:15:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:15:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:15:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:15:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:15:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:15:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:15:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:15:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:15:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:15:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:15:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:15:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:35 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:15:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:35 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:15:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 88.9% typed
May 16, 2016 7:15:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:15:37 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:15:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:37 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:15:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:37 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:15:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:15:37 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:15:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:37 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:15:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:15:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:15:38 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:15:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:15:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:38 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:15:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:15:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:15:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:15:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:38 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:15:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:15:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:15:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:15:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:15:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:38 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:15:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:15:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:15:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:38 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:15:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:15:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:15:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:15:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:15:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:39 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:15:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:15:39 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:15:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:15:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:15:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:40 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:15:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:15:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:15:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:15:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:15:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:15:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:15:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:15:40 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:15:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:15:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:15:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:15:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:15:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:15:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:15:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:15:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:15:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:15:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:15:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:15:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:15:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:15:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:15:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:15:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:41 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:15:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 88.9% typed
May 16, 2016 7:15:41 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:15:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:15:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:15:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:42 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:15:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:42 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:15:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:15:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:15:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:15:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:15:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:15:43 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:15:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:43 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:15:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:43 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:15:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:15:43 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:15:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:43 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:15:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:43 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:15:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:15:43 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:15:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:43 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:15:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:43 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:15:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:43 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:15:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:43 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:15:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:43 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:15:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:43 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:15:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:43 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:15:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:15:43 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:15:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:15:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:44 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:15:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:15:44 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:15:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:15:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:15:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:44 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:15:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:15:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:15:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:15:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:15:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:15:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:15:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:15:44 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:15:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:15:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:15:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:15:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:15:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:15:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:15:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:15:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:15:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:15:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:15:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:15:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:15:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:15:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:15:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:15:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:15:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:15:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:15:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:15:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:15:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:47 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:15:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:15:47 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:15:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:47 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:15:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:15:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:15:48 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:15:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:15:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:48 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:15:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:15:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:15:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:15:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:48 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:15:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:15:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:15:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:15:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:15:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:48 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:15:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:15:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:15:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:49 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:15:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:15:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:15:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:15:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:15:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:49 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:15:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:15:49 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:15:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:15:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:15:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:49 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:15:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:15:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:15:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:15:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:15:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:15:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:15:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:15:49 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:15:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:15:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:15:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:15:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:15:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:15:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:15:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:15:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:15:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:15:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:15:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:15:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:15:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:15:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:15:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:15:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:51 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:15:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:51 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:15:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:15:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:15:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:52 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:15:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:52 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:15:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:15:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:15:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:15:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:15:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:15:53 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:15:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:15:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:53 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:15:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:15:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:15:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:15:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:53 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:15:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:15:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:15:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:15:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:15:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:54 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:15:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:15:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:15:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:54 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:15:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:15:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:15:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:15:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:15:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:55 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:15:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:15:55 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:15:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:15:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:15:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:55 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:15:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:15:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:15:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:15:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:15:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:15:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:15:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:15:55 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:15:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:15:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:15:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:15:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:15:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:15:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:15:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:15:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:15:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:15:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:15:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:15:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:15:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:15:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:15:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:15:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:56 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:15:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:56 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:15:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:15:57 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:15:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:57 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:15:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:58 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:15:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:15:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:15:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:15:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:15:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:15:58 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:15:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:15:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:58 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:15:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:15:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:15:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:15:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:58 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:15:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:15:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:15:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:15:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:15:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:58 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:15:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:15:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:15:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:59 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:15:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:15:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:15:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:15:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:15:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:15:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:15:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:15:59 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:15:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:15:59 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:15:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:16:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:16:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:00 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:16:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:16:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:16:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:16:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:16:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:16:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:16:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:16:00 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:16:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:16:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:16:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:01 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:16:01 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:16:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:16:01 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:16:01 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:16:01 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:16:01 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:16:01 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:16:01 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:16:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:16:01 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:16:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:01 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:16:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:01 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:16:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:01 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:16:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:16:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:16:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:03 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:16:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:03 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:16:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:16:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:16:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:16:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:16:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:16:04 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:16:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:16:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:04 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:16:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:16:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:16:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:16:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:04 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:16:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:16:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:16:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:16:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:16:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:04 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:16:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:16:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:16:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:04 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:16:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:16:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:16:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:16:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:16:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:05 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:16:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:16:05 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:16:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:16:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:16:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:05 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:16:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:16:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:16:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:16:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:16:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:16:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:16:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:16:06 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:16:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:16:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:16:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:07 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:16:07 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:16:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:16:07 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:16:07 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:16:07 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:16:07 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:16:07 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:16:07 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:16:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:16:07 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:16:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:07 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:16:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:07 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:16:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:07 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:16:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:07 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:16:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:16:09 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:16:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:09 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:16:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:09 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:16:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:16:09 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:16:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:09 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:16:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:16:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:16:10 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:16:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:16:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:10 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:16:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:16:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:16:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:16:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:10 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:16:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:16:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:16:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:16:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:16:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:10 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:16:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:16:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:16:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:10 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:16:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:16:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:16:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:16:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:16:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:11 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:16:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:16:11 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:16:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:11 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:16:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:11 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:16:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:11 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:16:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:11 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:16:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:11 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:16:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:11 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:16:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:11 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:16:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:11 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:16:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:16:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:16:11 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:16:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:12 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:16:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:12 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:16:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:12 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:16:12 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:16:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:16:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:16:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:16:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:16:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:16:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:16:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:16:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:16:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:16:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:16:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:16:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:13 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:16:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:13 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:16:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:16:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:16:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:15 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:16:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:15 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:16:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:16:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:16:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:16:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:16:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:16:15 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:16:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:16:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:15 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:16:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:16:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:16:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:16:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:15 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:16:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:16:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:16:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:16:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:16:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:16 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:16:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:16:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:16:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:16 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:16:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:16:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:16:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:16:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:16:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:16 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:16:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:16:16 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:16:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:16:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:16:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:16 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:16:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:16:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:16:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:16:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:16:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:16:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:16:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:16:17 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:16:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:16:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:16:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:16:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:16:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:16:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:16:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:16:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:16:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:16:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:16:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:16:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:16:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:16:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:16:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:16:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:18 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:16:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:18 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:16:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:16:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:16:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:20 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:16:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:20 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:16:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:16:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:16:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:16:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:16:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:16:20 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:16:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:16:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:20 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:16:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:16:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:16:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:16:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:20 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:16:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:16:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:16:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:16:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:21 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:16:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:16:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:21 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:16:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:21 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:16:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:16:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:21 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:16:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:16:21 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:16:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:21 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:16:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:16:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:16:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:16:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:21 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:16:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:21 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:16:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:16:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:21 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:16:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:21 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:16:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:21 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:16:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:21 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:16:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:22 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:16:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:16:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:16:22 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:16:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:22 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:16:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:22 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:16:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:16:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:16:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:16:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:16:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:16:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:16:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:16:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:16:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:16:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:16:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:16:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:16:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:16:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:23 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:16:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:23 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:16:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:16:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:16:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:24 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:16:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:25 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:16:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:16:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:16:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:16:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:16:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:16:25 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:16:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:16:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:25 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:16:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:16:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:16:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:16:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:25 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:16:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:16:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:16:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:26 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:16:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:26 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:16:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:26 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:16:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:26 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:16:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:26 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:16:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:26 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:16:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:26 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:16:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:16:26 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:16:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:26 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:16:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:26 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:16:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:16:26 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:16:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:26 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:16:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:26 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:16:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:26 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:16:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:26 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:16:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:26 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:16:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:16:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:16:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:16:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:16:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:16:27 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:16:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:16:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:16:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:16:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:16:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:16:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:16:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:16:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:16:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:16:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:16:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:16:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:16:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:16:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:16:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:16:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:28 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:16:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:28 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:16:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:16:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:16:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:29 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:16:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:29 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:16:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:16:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:16:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:16:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:16:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:16:29 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:16:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:16:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:29 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:16:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:16:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:16:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:16:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:30 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:16:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:16:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:16:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:16:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:16:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:30 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:16:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:16:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:31 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:16:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:31 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:16:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:31 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:16:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:16:31 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:16:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:31 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:16:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:31 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:16:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:16:31 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:16:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:31 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:16:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:31 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:16:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:32 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:16:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:16:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:16:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:16:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:16:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:16:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:16:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:16:32 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:16:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:16:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:16:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:16:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:16:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:16:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:16:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:16:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:16:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:16:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:16:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:16:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:16:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:16:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:16:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:16:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:33 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:16:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:33 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:16:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:16:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:16:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:34 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:16:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:34 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:16:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:16:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:16:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:16:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:16:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:16:34 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:16:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:16:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:34 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:16:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:16:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:16:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:16:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:35 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:16:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:16:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:16:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:16:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:16:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:35 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:16:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:16:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:16:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:35 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:16:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:16:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:16:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:16:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:16:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:35 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:16:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:16:35 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:16:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:16:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:16:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:36 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:16:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:16:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:16:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:16:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:16:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:16:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:16:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:16:36 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:16:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:16:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:16:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:37 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:16:37 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:16:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:16:37 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:16:37 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:16:37 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:16:37 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:16:37 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:16:37 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:16:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:16:37 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:16:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:37 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:16:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:16:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:38 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:16:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:38 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:16:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:16:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:16:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:39 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:16:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:39 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:16:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:16:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:16:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:16:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:16:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:16:40 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:16:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:16:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:40 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:16:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:16:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:16:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:16:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:40 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:16:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:16:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:16:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:16:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:16:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:40 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:16:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:16:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:16:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:40 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:16:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:16:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:16:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:16:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:16:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:41 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:16:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:16:41 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:16:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:16:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:16:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:41 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:16:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:16:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:16:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:16:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:16:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:16:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:16:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:16:41 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:16:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:16:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:16:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:16:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:16:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:16:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:16:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:16:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:16:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:16:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:16:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:16:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:16:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:16:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:16:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:16:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:43 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:16:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:16:43 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:16:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:43 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:16:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:43 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:16:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:16:43 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:16:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:43 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:16:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:16:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:16:44 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:16:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:16:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:44 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:16:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:16:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:16:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:16:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:44 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:16:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:16:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:16:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:16:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:16:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:45 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:16:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:16:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:16:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:45 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:16:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:16:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:16:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:16:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:16:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:16:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:16:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:16:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:16:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:16:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:16:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:16:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:16:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:16:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:16:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:16:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:16:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:16:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:16:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:16:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:16:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:47 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:16:47 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:16:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:16:47 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:16:47 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:16:47 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:16:47 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:16:47 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:16:47 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:16:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:16:47 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:16:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:47 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:16:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:47 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:16:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:47 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:16:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:16:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:16:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:50 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:16:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:51 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:16:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:16:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:16:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:16:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:16:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:16:51 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:16:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:16:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:51 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:16:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:16:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:16:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:16:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:51 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:16:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:16:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:16:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:16:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:16:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:51 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:16:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:16:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:16:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:52 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:16:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:16:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:16:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:16:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:16:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:52 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:16:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:16:52 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:16:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:16:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:16:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:52 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:16:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:16:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:16:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:16:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:16:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:16:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:16:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:16:52 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:16:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:16:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:16:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:16:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:16:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:16:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:16:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:16:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:16:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:16:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:16:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:16:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:16:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:16:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:16:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:16:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:54 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:16:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:54 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:16:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:16:57 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:16:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:57 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:16:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:57 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:16:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:16:57 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:16:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:57 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:16:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:16:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:16:57 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:16:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:57 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:16:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:57 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:16:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:16:57 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:16:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:57 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:16:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:57 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:16:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:16:57 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:16:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:57 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:16:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:57 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:16:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:57 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:16:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:16:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:16:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:58 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:16:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:16:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:16:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:16:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:16:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:58 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:16:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:16:58 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:16:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:16:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:16:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:58 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:16:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:16:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:16:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:16:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:16:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:16:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:16:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:16:59 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:16:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:16:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:16:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:16:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:16:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:16:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:16:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:16:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:16:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:16:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:16:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:16:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:16:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:16:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:16:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:16:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:16:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:16:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:16:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:00 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:17:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:00 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:17:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:17:02 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:17:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:02 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:17:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:03 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:17:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:17:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:17:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:17:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:17:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:17:03 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:17:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:17:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:03 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:17:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:17:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:17:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:17:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:03 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:17:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:17:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:17:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:17:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:17:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:17:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:03 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:17:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:17:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:17:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:17:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:17:03 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:17:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:17:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:17:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:17:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:17:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:17:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:17:04 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:17:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:17:04 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:17:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:17:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:17:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:17:04 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:17:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:17:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:17:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:17:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:17:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:17:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:17:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:17:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:17:04 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:17:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:17:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:17:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:17:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:17:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:17:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:17:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:17:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:17:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:17:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:17:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:17:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:17:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:17:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:17:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:17:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:17:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:06 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:17:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:06 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:17:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:17:07 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:17:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:07 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:17:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:08 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:17:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:17:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:17:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:17:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:17:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:17:09 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:17:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:09 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:17:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:09 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:17:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:17:09 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:17:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:09 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:17:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:09 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:17:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:17:09 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:17:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:09 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:17:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:17:09 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:17:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:09 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:17:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:09 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:17:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:09 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:17:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:17:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:17:09 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:17:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:09 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:17:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:17:09 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:17:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:17:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:17:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:17:10 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:17:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:17:10 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:17:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:17:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:17:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:17:10 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:17:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:17:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:17:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:17:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:17:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:17:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:17:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:17:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:17:10 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:17:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:17:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:17:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:17:11 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:17:11 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:17:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:17:11 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:17:11 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:17:11 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:17:11 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:17:11 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:17:11 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:17:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:17:11 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:17:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:11 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:17:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:11 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:17:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:11 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:17:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:11 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:17:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:17:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:17:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:13 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:17:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:13 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:17:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:17:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:17:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:17:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:17:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:17:14 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:17:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:17:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:14 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:17:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:17:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:17:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:17:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:15 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:17:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:17:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:17:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:17:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:17:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:17:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:15 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:17:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:17:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:17:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:17:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:17:15 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:17:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:17:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:17:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:17:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:17:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:17:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:17:16 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:17:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:17:16 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:17:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:17:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:17:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:17:16 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:17:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:17:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:17:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:17:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:17:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:17:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:17:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:17:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:17:16 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:17:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:17:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:17:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:17:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:17:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:17:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:17:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:17:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:17:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:17:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:17:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:17:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:17:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:17:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:17:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:17:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:17:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:17 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:17:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:17 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:17:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:17:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:17:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:20 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:17:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:20 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:17:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:17:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:17:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:17:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:17:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:17:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:17:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:21 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:17:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:17:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:17:21 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:17:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:21 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:17:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:17:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:17:21 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:17:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:21 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:17:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:17:21 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:17:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:17:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:21 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:17:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:21 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:17:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:17:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:17:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:17:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:21 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:17:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:17:21 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:17:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:17:21 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:17:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:17:22 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:17:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:17:22 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:17:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:22 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:17:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:22 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:17:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:17:22 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:17:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:22 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:17:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:22 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:17:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:22 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:17:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:22 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:17:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:17:22 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:17:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:17:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:17:23 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:17:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:17:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:17:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:17:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:17:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:17:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:17:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:17:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:17:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:17:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:17:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:17:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:17:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:17:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:17:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:17:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:17:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:24 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:17:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:24 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:17:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:17:26 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:17:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:26 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:17:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:26 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:17:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:17:26 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:17:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:26 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:17:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:17:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:17:27 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:17:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:17:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:27 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:17:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:17:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:17:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:17:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:27 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:17:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:17:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:17:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:17:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:17:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:17:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:27 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:17:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:17:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:17:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:17:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:17:28 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:17:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:28 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:17:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:17:28 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:17:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:17:28 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:17:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:17:28 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:17:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:17:28 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:17:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:17:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:17:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:17:29 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:17:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:17:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:17:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:17:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:17:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:17:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:17:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:17:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:17:29 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:17:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:17:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:17:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:17:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:17:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:17:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:17:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:17:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:17:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:17:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:17:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:17:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:17:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:17:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:17:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:17:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:17:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:30 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:17:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:30 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:17:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:17:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:17:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:32 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:17:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:32 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:17:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:17:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:17:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:17:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:17:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:17:33 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:17:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:17:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:33 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:17:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:17:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:17:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:17:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:33 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:17:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:17:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:17:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:17:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:17:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:17:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:33 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:17:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:17:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:17:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:17:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:17:33 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:17:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:17:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:17:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:17:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:17:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:17:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:17:34 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:17:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:17:34 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:17:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:17:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:17:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:17:34 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:17:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:17:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:17:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:17:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:17:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:17:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:17:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:17:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:17:35 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:17:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:17:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:17:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:17:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:17:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:17:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:17:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:17:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:17:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:17:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:17:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:17:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:17:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:17:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:17:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:17:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:17:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:36 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:17:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:36 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:17:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:17:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:17:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:39 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:17:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:39 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:17:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:17:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:17:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:17:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:17:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:17:39 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:17:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:17:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:39 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:17:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:17:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:17:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:17:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:39 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:17:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:17:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:17:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:17:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:17:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:17:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:40 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:17:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:17:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:17:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:17:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:17:40 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:17:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:17:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:17:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:17:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:17:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:17:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:17:41 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:17:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:17:41 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:17:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:17:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:17:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:17:41 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:17:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:17:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:17:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:17:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:17:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:17:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:17:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:17:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:17:41 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:17:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:17:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:17:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:17:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:17:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:17:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:17:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:17:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:17:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:17:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:17:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:17:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:17:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:17:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:17:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:17:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:17:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:42 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:17:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:42 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:17:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:17:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:17:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:44 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:17:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:44 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:17:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:17:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:17:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:17:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:17:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:17:45 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:17:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:17:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:45 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:17:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:17:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:17:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:17:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:45 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:17:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:17:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:17:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:17:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:17:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:17:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:17:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:17:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:17:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:17:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:17:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:17:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:17:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:17:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:17:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:17:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:17:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:17:47 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:17:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:17:47 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:17:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:47 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:17:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:47 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:17:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:17:47 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:17:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:47 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:17:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:47 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:17:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:47 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:17:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:47 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:17:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:17:47 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:17:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:17:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:17:47 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:17:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:47 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:17:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:47 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:17:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:17:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:17:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:17:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:17:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:17:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:17:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:17:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:17:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:17:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:17:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:17:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:17:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:17:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:17:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:48 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:17:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:48 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:17:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:17:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:17:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:50 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:17:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:50 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:17:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:17:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:17:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:17:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:17:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:17:51 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:17:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:17:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:51 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:17:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:17:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:17:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:17:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:52 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:17:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:17:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:17:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:17:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:17:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:17:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:52 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:17:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:17:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:17:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:17:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:17:52 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:17:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:17:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:17:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:17:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:17:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:17:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:17:53 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:17:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:17:53 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:17:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:17:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:17:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:17:53 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:17:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:17:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:17:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:17:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:17:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:17:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:17:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:17:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:17:53 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:17:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:17:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:17:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:17:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:17:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:17:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:17:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:17:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:17:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:17:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:17:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:17:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:17:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:17:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:17:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:17:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:17:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:54 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:17:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:54 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:17:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:17:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:17:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:56 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:17:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:56 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:17:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:17:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:17:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:17:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:17:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:17:56 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:17:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:17:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:56 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:17:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:17:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:17:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:17:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:56 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:17:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:17:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:17:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:17:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:17:57 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:17:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:57 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:17:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:17:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:17:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:17:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:17:58 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:17:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:17:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:17:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:17:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:17:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:17:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:17:58 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:17:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:17:58 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:17:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:17:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:17:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:17:58 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:17:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:17:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:17:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:17:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:17:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:17:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:17:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:17:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:17:59 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:17:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:17:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:17:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:17:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:17:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:17:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:17:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:17:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:17:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:17:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:17:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:17:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:17:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:17:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:17:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:17:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:17:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:17:59 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:17:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:17:59 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:17:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:18:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:18:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:18:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:05 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:18:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:18:05 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:18:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:18:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:18:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:18:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:18:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:18:06 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:18:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:18:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:18:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:06 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:18:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:18:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:18:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:18:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:07 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:18:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:18:07 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:18:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:07 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:18:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:18:07 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:18:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:07 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:18:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:18:07 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:18:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:07 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:18:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:18:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:18:07 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:18:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:18:07 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:18:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:18:07 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:18:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:18:07 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:18:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:18:08 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:18:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:18:08 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:18:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:18:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:18:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:18:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:18:08 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:18:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:18:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:18:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:18:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:18:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:18:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:18:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:18:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:18:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:18:08 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:18:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:18:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:18:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:18:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:18:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:18:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:18:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:18:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:18:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:18:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:18:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:18:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:18:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:18:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:18:09 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:18:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:09 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:18:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:09 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:18:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:09 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:18:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:18:09 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:18:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:18:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:18:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:18:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:14 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:18:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:18:14 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:18:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:18:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:18:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:18:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:18:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:18:14 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:18:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:18:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:18:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:14 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:18:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:18:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:18:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:18:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:14 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:18:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:18:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:18:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:18:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:18:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:18:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:14 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:18:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:18:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:18:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:18:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:18:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:18:15 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:18:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:18:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:18:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:18:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:18:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:18:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:18:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:18:15 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:18:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:18:15 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:18:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:18:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:18:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:18:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:18:16 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:18:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:18:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:18:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:18:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:18:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:18:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:18:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:18:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:18:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:18:16 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:18:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:18:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:18:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:18:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:18:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:18:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:18:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:18:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:18:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:18:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:18:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:18:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:18:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:18:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:18:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:18:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:18:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:18:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:17 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:18:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:18:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:88)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:56)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:154)
	at fr.inria.lille.commons.spoon.SpoonedFile.processModelledClasses(SpoonedFile.java:138)
	at fr.inria.lille.commons.spoon.SpoonedFile.process(SpoonedFile.java:128)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:119)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:115)
	at fr.inria.lille.repair.nopol.synth.ConstraintModelBuilder.<init>(ConstraintModelBuilder.java:57)
	at fr.inria.lille.repair.nopol.synth.SynthesizerFactory.getFor(SynthesizerFactory.java:122)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:164)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:119)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:89)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:84)
	at fr.inria.lille.repair.Main.main(Main.java:61)
May 16, 2016 7:18:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:18:26 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:18:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:27 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:18:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:18:27 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:18:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:18:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:18:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:18:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:18:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:18:28 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:18:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:18:28 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:18:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:28 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:18:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:18:28 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:18:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:28 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:18:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:28 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:18:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:18:28 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:18:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:28 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:18:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:18:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:18:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:29 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:18:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:18:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:18:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:18:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:18:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:18:29 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:18:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:18:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:18:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:18:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:18:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:18:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:18:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:18:30 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:18:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:18:30 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:18:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:18:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:18:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:18:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:18:30 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:18:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:18:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:18:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:18:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:18:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:18:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:18:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:18:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:18:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:18:30 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:18:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:18:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:18:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:18:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:18:31 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:18:31 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:18:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:18:31 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:18:31 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:18:31 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:18:31 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:18:31 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:18:31 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:18:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:18:31 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:18:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:31 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:18:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:31 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:18:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:31 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:18:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:18:31 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:18:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:18:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:18:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:18:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:36 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:18:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:18:36 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:18:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:18:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:18:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:18:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:18:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:18:36 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:18:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:18:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:18:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:36 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:18:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:18:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:18:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:18:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:36 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:18:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:18:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:18:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:18:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:18:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:18:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:37 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:18:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:18:37 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:18:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:37 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:18:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:18:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:18:37 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:18:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:18:37 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:18:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:18:37 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:18:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:18:37 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:18:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:18:37 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:18:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:18:37 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:18:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:18:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:18:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:18:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:18:38 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:18:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:18:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:18:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:18:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:18:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:18:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:18:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:18:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:18:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:18:38 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:18:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:18:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:18:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:18:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:18:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:18:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:18:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:18:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:18:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:18:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:18:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:18:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:18:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:18:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:18:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:18:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:18:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:18:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:39 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:18:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:18:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:18:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:18:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:18:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:18:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:18:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:18:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:18:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:18:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:18:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:18:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:18:47 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:18:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:18:47 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:18:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:47 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:18:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:18:47 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:18:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:47 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:18:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:47 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:18:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:18:47 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:18:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:47 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:18:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:18:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:18:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:48 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:18:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:18:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:18:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:18:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:18:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:18:48 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:18:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:18:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:18:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:18:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:18:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:18:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:18:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:18:49 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:18:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:18:49 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:18:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:18:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:18:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:18:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:18:49 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:18:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:18:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:18:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:18:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:18:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:18:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:18:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:18:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:18:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:18:50 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:18:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:18:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:18:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:18:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:18:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:18:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:18:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:18:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:18:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:18:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:18:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:18:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:18:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:18:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:18:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:18:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:18:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:18:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:51 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:18:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:18:51 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:18:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:18:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:18:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:18:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:59 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:18:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:18:59 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:18:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:18:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:18:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:18:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:18:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:18:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:19:00 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:19:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:19:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:19:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:00 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:19:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:19:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:19:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:19:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:00 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:19:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:19:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:19:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:19:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:19:01 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:19:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:01 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:19:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:19:01 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:19:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:01 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:19:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:19:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:19:01 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:19:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:19:01 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:19:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:19:01 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:19:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:19:01 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:19:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:19:06 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:19:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:19:06 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:19:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:19:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:19:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:19:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:19:06 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:19:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:19:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:19:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:19:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:19:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:19:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:19:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:19:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:19:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:19:06 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:19:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:19:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:19:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:19:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:19:07 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:19:07 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:19:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:19:07 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:19:07 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:19:07 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:19:07 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:19:07 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:19:07 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:19:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:19:07 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:19:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:07 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:19:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:07 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:19:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:07 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:19:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:19:07 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:19:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
java.lang.IllegalArgumentException: should not happen
	at spoon.support.reflect.code.CtStatementImpl$InsertVisitor.visitCtIf(CtStatementImpl.java:119)
	at spoon.support.reflect.code.CtIfImpl.accept(CtIfImpl.java:37)
	at spoon.reflect.visitor.CtInheritanceScanner.scan(CtInheritanceScanner.java:169)
	at spoon.support.reflect.code.CtStatementImpl.insertBefore(CtStatementImpl.java:87)
	at spoon.support.reflect.code.CtStatementImpl.insertBefore(CtStatementImpl.java:68)
	at spoon.support.reflect.code.CtInvocationImpl.insertBefore(CtInvocationImpl.java:86)
	at fr.inria.lille.commons.spoon.util.SpoonStatementLibrary.insertBeforeUnderSameParent(SpoonStatementLibrary.java:37)
	at fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter.process(ConditionalLoggingInstrumenter.java:38)
	at fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter.process(ConditionalLoggingInstrumenter.java:21)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:92)
	at spoon.reflect.visitor.CtScanner.visitCtIf(CtScanner.java:466)
	at spoon.support.reflect.code.CtIfImpl.accept(CtIfImpl.java:37)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:147)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:88)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:64)
	at spoon.reflect.visitor.CtScanner.visitCtBlock(CtScanner.java:286)
	at spoon.support.reflect.code.CtBlockImpl.accept(CtBlockImpl.java:47)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:147)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:88)
	at spoon.reflect.visitor.CtScanner.visitCtMethod(CtScanner.java:545)
	at spoon.support.reflect.declaration.CtMethodImpl.accept(CtMethodImpl.java:60)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:147)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:88)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:64)
	at spoon.reflect.visitor.CtScanner.visitCtClass(CtScanner.java:326)
	at spoon.support.reflect.declaration.CtClassImpl.accept(CtClassImpl.java:58)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:147)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:88)
	at spoon.support.RuntimeProcessingManager.process(RuntimeProcessingManager.java:145)
	at spoon.support.RuntimeProcessingManager.process(RuntimeProcessingManager.java:133)
	at fr.inria.lille.commons.spoon.SpoonedFile.processModelledClasses(SpoonedFile.java:136)
	at fr.inria.lille.commons.spoon.SpoonedFile.process(SpoonedFile.java:128)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:119)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:115)
	at fr.inria.lille.repair.nopol.synth.ConstraintModelBuilder.<init>(ConstraintModelBuilder.java:57)
	at fr.inria.lille.repair.nopol.synth.SynthesizerFactory.getFor(SynthesizerFactory.java:122)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:164)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:119)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:89)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:84)
	at fr.inria.lille.repair.Main.main(Main.java:61)
May 16, 2016 7:19:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:19:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:19:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:17 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:19:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:19:17 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:19:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:19:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:19:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:19:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:19:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:19:18 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:19:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:19:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:19:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:18 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:19:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:19:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:19:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:19:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:18 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:19:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:19:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:19:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:19:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:19:19 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:19:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:19 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:19:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:19:19 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:19:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:19 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:19:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:19:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:19:19 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:19:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:19:19 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:19:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:19:19 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:19:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:19:19 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:19:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:19:20 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:19:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:19:20 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:19:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:19:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:19:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:19:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:19:20 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:19:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:19:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:19:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:19:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:19:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:19:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:19:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:19:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:19:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:19:20 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:19:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:19:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:19:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:19:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:19:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:19:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:19:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:19:21 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:19:21 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:19:21 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:19:21 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:19:21 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:19:21 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:19:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:19:21 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:19:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:21 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:19:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:21 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:19:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:19:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:19:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:19:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:19:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:19:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:19:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:29 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:19:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:19:29 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:19:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:19:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:19:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:19:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:19:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:19:30 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:19:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:19:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:19:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:30 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:19:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:19:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:19:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:19:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:30 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:19:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:19:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:19:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:19:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:19:31 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:19:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:31 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:19:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:19:31 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:19:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:31 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:19:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:19:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:19:31 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:19:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:19:31 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:19:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:19:31 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:19:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:19:31 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:19:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:19:32 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:19:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:19:32 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:19:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:19:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:19:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:19:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:19:32 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:19:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:19:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:19:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:19:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:19:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:19:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:19:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:19:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:19:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:19:33 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:19:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:19:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:19:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:19:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:19:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:19:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:19:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:19:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:19:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:19:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:19:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:19:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:19:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:19:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:19:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:19:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:19:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:19:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:34 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:19:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:19:34 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:19:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:19:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:19:37 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:19:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:37 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:19:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:19:37 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:19:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:19:37 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:19:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:37 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:19:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:19:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:19:38 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:19:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:19:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:19:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:38 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:19:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:19:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:19:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:19:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:38 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:19:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:19:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:19:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:19:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:19:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:19:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:39 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:19:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:19:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:19:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:19:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:19:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:19:39 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:19:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:19:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:19:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:19:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:19:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:19:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:19:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:19:40 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:19:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:19:40 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:19:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:19:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:19:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:19:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:19:40 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:19:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:19:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:19:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:19:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:19:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:19:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:19:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:19:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:19:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:19:40 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:19:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:19:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:19:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:19:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:19:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:19:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:19:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:19:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:19:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:19:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:19:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:19:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:19:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:19:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:19:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:19:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:19:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:19:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:41 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:19:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:19:41 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:19:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:19:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:19:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:19:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:42 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:19:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:19:42 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:19:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:19:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:19:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:19:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:19:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:19:43 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:19:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:19:43 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:19:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:43 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:19:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:19:43 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:19:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:43 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:19:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:43 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:19:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:19:43 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:19:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:43 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:19:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:19:43 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:19:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:43 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:19:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:19:43 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:19:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:43 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:19:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:19:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:19:43 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:19:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:19:43 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:19:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:19:43 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:19:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:19:43 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:19:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:19:44 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:19:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:19:44 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:19:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:19:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:19:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:19:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:19:44 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:19:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:19:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:19:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:19:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:19:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:19:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:19:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:19:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:19:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:19:44 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:19:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:19:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:19:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:19:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:19:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:19:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:19:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:19:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:19:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:19:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:19:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:19:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:19:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:19:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:19:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:19:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:19:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:19:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:19:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:19:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:19:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:19:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:19:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:19:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:48 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:19:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:19:48 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:19:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:19:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:19:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:19:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:19:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:19:49 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:19:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:19:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:19:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:49 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:19:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:19:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:19:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:19:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:49 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:19:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:19:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:19:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:19:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:19:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:19:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:49 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:19:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:19:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:19:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:19:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:19:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:19:49 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:19:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:19:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:19:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:19:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:19:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:19:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:19:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:19:50 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:19:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:19:50 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:19:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:19:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:19:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:19:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:19:50 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:19:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:19:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:19:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:19:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:19:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:19:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:19:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:19:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:19:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:19:51 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:19:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:19:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:19:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:19:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:19:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:19:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:19:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:19:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:19:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:19:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:19:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:19:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:19:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:19:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:19:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:19:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:19:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:19:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:52 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:19:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:19:52 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:19:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:19:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:19:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:19:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:53 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:19:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:19:54 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:19:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:19:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:19:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:19:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:19:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:19:54 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:19:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:19:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:19:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:54 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:19:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:19:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:19:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:19:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:54 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:19:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:19:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:19:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:19:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:19:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:19:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:54 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:19:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:19:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:19:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:19:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:19:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:19:55 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:19:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:19:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:19:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:19:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:19:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:19:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:19:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:19:55 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:19:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:19:55 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:19:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:19:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:19:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:19:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:19:55 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:19:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:19:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:19:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:19:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:19:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:19:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:19:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:19:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:19:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:19:55 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:19:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:19:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:19:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:19:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:19:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:19:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:19:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:19:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:19:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:19:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:19:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:19:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:19:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:19:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:19:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:19:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:19:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:19:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:57 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:19:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:19:57 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:19:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 88.9% typed
May 16, 2016 7:19:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:19:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:19:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:58 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:19:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:19:58 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:19:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:19:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:19:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:19:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:19:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:19:58 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:19:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:19:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:19:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:58 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:19:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:19:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:19:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:19:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:58 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:19:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:19:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:19:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:19:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:19:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:19:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:19:59 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:19:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:20:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:20:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:00 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:20:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:20:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:20:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:20:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:20:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:00 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:20:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:20:00 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:20:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:20:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:20:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:00 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:20:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:20:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:20:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:20:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:20:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:20:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:20:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:20:01 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:20:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:01 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:20:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:01 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:20:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:01 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:20:01 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:20:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:20:01 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:20:01 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:20:01 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:20:01 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:20:01 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:20:01 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:20:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:20:01 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:20:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:01 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:20:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:01 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:20:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:01 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:20:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:01 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:20:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:20:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:20:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:03 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:20:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:03 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:20:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:20:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:20:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:20:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:20:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:20:03 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:20:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:20:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:03 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:20:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:20:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:20:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:20:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:03 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:20:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:20:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:20:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:20:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:20:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:04 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:20:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:20:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:20:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:04 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:20:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:20:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:20:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:20:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:20:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:04 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:20:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:20:04 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:20:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:20:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:20:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:05 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:20:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:20:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:20:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:20:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:20:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:20:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:20:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:20:06 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:20:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:20:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:20:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:20:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:20:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:20:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:20:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:20:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:20:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:20:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:20:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:20:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:20:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:20:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:20:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:20:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:06 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:20:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 86.7% typed
May 16, 2016 7:20:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:20:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:20:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:08 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:20:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:08 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:20:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:20:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:20:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:20:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:20:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:20:08 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:20:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:20:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:08 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:20:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:20:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:20:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:20:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:08 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:20:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:20:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:20:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:20:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:20:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:09 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:20:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:09 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:20:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:09 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:20:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:09 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:20:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:09 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:20:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:20:09 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:20:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:09 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:20:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:09 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:20:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:20:09 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:20:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:09 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:20:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:09 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:20:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:09 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:20:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:09 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:20:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:09 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:20:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:09 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:20:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:09 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:20:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:20:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:20:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:20:11 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:20:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:11 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:20:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:11 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:20:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:11 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:20:11 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:20:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:20:11 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:20:11 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:20:11 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:20:11 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:20:11 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:20:11 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:20:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:20:11 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:20:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:11 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:20:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:11 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:20:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:11 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:20:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:11 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:20:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:20:12 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:20:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:12 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:20:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:12 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:20:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:20:12 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:20:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:12 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:20:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:20:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:20:13 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:20:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:20:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:13 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:20:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:20:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:20:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:20:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:13 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:20:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:20:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:20:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:20:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:20:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:13 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:20:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:20:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:20:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:14 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:20:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:20:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:20:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:20:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:20:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:14 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:20:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:20:14 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:20:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:20:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:20:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:14 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:20:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:20:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:20:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:20:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:20:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:20:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:20:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:20:15 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:20:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:20:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:20:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:20:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:20:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:20:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:20:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:20:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:20:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:20:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:20:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:20:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:20:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:20:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:20:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:20:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:16 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:20:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:16 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:20:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:20:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:20:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:17 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:20:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:17 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:20:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:20:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:20:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:20:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:20:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:20:17 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:20:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:20:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:17 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:20:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:20:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:20:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:20:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:17 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:20:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:20:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:20:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:20:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:20:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:17 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:20:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:20:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:20:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:18 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:20:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:20:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:20:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:20:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:20:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:19 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:20:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:20:19 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:20:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:19 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:20:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:19 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:20:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:19 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:20:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:19 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:20:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:19 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:20:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:19 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:20:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:19 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:20:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:19 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:20:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:20:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:20:19 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:20:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:20:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:20:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:20:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:20:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:20:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:20:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:20:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:20:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:20:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:20:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:20:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:20:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:20:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:20:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:20:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:20 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:20:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:20 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:20:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:20:21 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:20:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:20:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:22 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:20:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:20:22 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:20:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:22 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:20:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:20:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:20:22 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:20:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:22 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:20:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:22 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:20:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:20:22 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:20:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:22 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:20:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:22 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:20:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:20:22 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:20:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:22 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:20:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:22 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:20:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:22 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:20:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:22 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:20:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:22 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:20:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:22 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:20:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:20:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:20:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:20:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:20:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:23 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:20:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:20:23 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:20:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:20:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:20:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:23 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:20:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:20:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:20:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:20:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:20:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:20:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:20:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:20:23 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:20:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:20:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:20:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:20:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:20:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:20:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:20:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:20:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:20:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:20:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:20:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:20:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:20:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:20:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:20:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:20:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:25 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:20:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:25 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:20:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:20:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:20:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:25 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:20:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:25 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:20:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:20:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:20:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:20:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:20:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:20:27 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:20:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:20:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:27 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:20:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:20:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:20:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:20:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:27 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:20:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:20:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:20:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:20:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:20:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:27 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:20:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:20:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:20:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:27 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:20:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:20:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:20:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:20:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:28 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:20:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:28 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:20:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:20:28 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:20:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:28 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:20:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:28 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:20:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:28 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:20:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:28 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:20:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:28 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:20:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:28 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:20:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:28 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:20:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:28 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:20:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:20:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:20:28 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:20:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:28 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:20:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:28 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:20:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:20:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:20:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:20:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:20:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:20:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:20:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:20:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:20:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:20:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:20:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:20:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:20:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:20:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:30 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:20:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:30 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:20:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:20:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:20:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:30 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:20:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:31 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:20:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:20:31 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:20:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:31 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:20:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:20:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:20:31 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:20:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:31 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:20:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:31 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:20:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:20:31 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:20:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:31 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:20:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:32 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:20:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:20:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:20:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:20:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:20:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:32 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:20:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:20:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:20:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:33 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:20:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:20:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:20:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:20:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:20:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:33 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:20:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:20:33 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:20:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:20:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:20:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:33 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:20:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:20:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:20:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:20:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:20:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:20:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:20:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:20:33 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:20:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:20:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:20:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:20:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:20:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:20:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:20:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:20:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:20:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:20:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:20:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:20:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:20:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:20:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:20:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:20:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:34 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:20:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:34 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:20:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:20:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:20:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:36 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:20:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:36 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:20:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:20:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:20:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:20:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:20:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:20:36 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:20:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:20:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:36 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:20:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:20:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:20:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:20:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:36 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:20:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:20:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:20:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:20:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:20:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:36 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:20:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:37 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:20:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:37 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:20:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:37 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:20:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:37 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:20:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:20:37 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:20:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:37 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:20:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:37 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:20:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:20:37 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:20:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:37 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:20:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:37 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:20:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:37 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:20:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:37 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:20:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:20:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:20:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:20:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:20:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:20:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:20:39 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:20:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:20:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:20:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:20:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:20:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:20:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:20:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:20:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:20:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:20:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:20:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:20:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:20:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:20:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:20:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:20:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:39 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:20:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:39 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:20:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:20:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:20:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:41 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:20:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:41 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:20:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:20:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:20:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:20:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:20:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:20:41 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:20:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:20:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:41 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:20:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:20:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:20:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:20:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:41 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:20:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:20:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:20:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:20:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:20:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:42 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:20:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:20:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:20:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:42 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:20:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:20:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:20:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:20:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:20:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:42 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:20:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:20:42 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:20:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:20:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:20:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:42 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:20:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:20:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:20:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:20:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:20:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:20:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:20:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:20:43 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:20:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:20:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:20:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:20:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:20:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:20:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:20:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:20:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:20:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:20:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:20:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:20:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:20:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:20:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:20:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:20:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:44 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:20:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:44 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:20:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 88.9% typed
May 16, 2016 7:20:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:20:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:20:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:20:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:20:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:20:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:20:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:20:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:20:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:20:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:20:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:20:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:20:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:20:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:20:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:20:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:47 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:20:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:20:47 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:20:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:47 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:20:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:47 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:20:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:47 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:20:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:47 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:20:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:47 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:20:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:47 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:20:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:47 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:20:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:20:47 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:20:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:47 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:20:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:47 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:20:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:20:47 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:20:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:47 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:20:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:47 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:20:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:48 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:20:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:20:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:20:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:20:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:20:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:20:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:20:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:20:48 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:20:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:20:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:20:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:20:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:20:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:20:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:20:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:20:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:20:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:20:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:20:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:20:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:20:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:20:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:20:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:20:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:50 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:20:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:50 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:20:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:20:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:20:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:51 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:20:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:51 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:20:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:20:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:20:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:20:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:20:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:20:52 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:20:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:20:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:52 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:20:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:20:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:20:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:20:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:52 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:20:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:20:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:20:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:20:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:20:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:52 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:20:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:20:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:20:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:52 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:20:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:20:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:20:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:20:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:20:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:53 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:20:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:20:53 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:20:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:20:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:20:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:53 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:20:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:20:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:20:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:20:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:20:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:20:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:20:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:20:53 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:20:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:20:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:20:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:20:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:20:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:20:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:20:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:20:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:20:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:20:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:20:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:20:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:20:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:20:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:20:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:20:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:55 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:20:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:55 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:20:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:20:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:20:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:55 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:20:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:55 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:20:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:20:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:20:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:20:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:20:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:20:56 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:20:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:20:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:56 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:20:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:20:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:20:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:20:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:56 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:20:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:20:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:20:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:20:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:57 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:20:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:57 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:20:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:57 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:20:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:57 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:20:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:57 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:20:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:57 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:20:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:20:57 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:20:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:20:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:58 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:20:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:20:58 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:20:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:20:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:20:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:58 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:20:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:20:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:20:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:20:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:20:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:20:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:20:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:20:58 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:20:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:20:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:20:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:20:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:20:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:20:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:20:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:20:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:20:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:20:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:20:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:20:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:20:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:20:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:20:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:20:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:20:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:20:59 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:20:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:20:59 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:20:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:21:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:21:01 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:21:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:01 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:21:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:21:01 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:21:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:21:01 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:21:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:01 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:21:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:21:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:21:01 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:21:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:21:01 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:21:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:01 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:21:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:21:01 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:21:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:01 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:21:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:01 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:21:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:21:01 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:21:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:01 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:21:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:21:01 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:21:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:02 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:21:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:21:02 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:21:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:02 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:21:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:21:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:21:02 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:21:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:21:02 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:21:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:21:02 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:21:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:21:02 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:21:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:21:03 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:21:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:21:03 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:21:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:21:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:21:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:21:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:21:03 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:21:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:21:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:21:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:21:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:21:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:21:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:21:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:21:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:21:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:21:04 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:21:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:21:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:21:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:21:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:21:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:21:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:21:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:21:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:21:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:21:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:21:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:21:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:21:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:21:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:21:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:21:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:21:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:21:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:04 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:21:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:21:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:21:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:21:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:21:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:07 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:21:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:21:07 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:21:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:21:07 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:21:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:07 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:21:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:21:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:21:07 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:21:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:21:07 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:21:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:07 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:21:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:21:07 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:21:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:07 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:21:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:08 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:21:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:21:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:21:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:21:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:21:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:21:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:08 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:21:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:21:09 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:21:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:09 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:21:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:21:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:21:09 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:21:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:21:09 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:21:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:21:09 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:21:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:21:09 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:21:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:21:09 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:21:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:21:09 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:21:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:21:09 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:21:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:09 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:21:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:21:09 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:21:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:21:09 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:21:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:09 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:21:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:09 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:21:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:09 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:21:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:21:09 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:21:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:21:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:21:09 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:21:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:21:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:21:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:21:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:21:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:21:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:21:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:21:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:21:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:21:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:21:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:21:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:21:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:21:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:21:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:21:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:21:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:21:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:14 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:21:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 88% typed
May 16, 2016 7:21:14 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:21:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:21:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:21:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:21:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:15 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:21:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:21:16 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:21:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:21:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:21:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:21:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:21:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:21:16 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:21:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:21:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:21:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:16 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:21:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:21:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:21:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:21:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:16 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:21:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:21:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:21:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:21:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:21:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:21:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:16 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:21:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:21:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:21:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:21:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:21:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:21:16 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:21:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:21:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:21:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:21:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:21:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:21:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:21:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:21:17 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:21:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:21:17 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:21:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:21:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:21:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:21:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:21:17 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:21:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:21:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:21:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:21:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:21:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:21:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:21:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:21:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:21:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:21:18 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:21:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:21:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:21:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:21:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:21:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:21:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:21:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:21:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:21:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:21:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:21:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:21:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:21:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:21:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:21:19 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:21:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:19 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:21:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:19 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:21:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:19 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:21:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:21:19 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:21:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 88% typed
May 16, 2016 7:21:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:21:21 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:21:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:22 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:21:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:21:22 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:21:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:21:22 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:21:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:22 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:21:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:21:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:21:22 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:21:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:21:22 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:21:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:22 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:21:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:21:22 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:21:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:22 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:21:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:22 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:21:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:21:22 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:21:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:22 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:21:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:21:22 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:21:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:22 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:21:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:21:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:21:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:21:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:21:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:21:23 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:21:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:21:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:21:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:21:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:21:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:21:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:21:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:21:23 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:21:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:21:23 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:21:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:21:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:21:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:21:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:21:23 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:21:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:21:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:21:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:21:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:21:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:21:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:21:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:21:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:21:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:21:24 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:21:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:21:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:21:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:21:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:21:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:21:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:21:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:21:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:21:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:21:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:21:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:21:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:21:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:21:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:21:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:21:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:21:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:21:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:25 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:21:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 88% typed
May 16, 2016 7:21:25 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:21:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:21:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:21:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:21:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:29 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:21:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:21:29 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:21:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:21:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:21:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:21:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:21:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:21:29 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:21:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:21:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:21:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:29 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:21:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:21:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:21:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:21:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:30 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:21:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:21:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:21:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:21:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:21:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:21:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:30 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:21:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:21:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:21:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:21:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:21:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:21:30 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:21:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:21:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:21:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:21:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:21:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:21:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:21:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:21:30 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:21:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:21:30 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:21:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:21:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:21:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:21:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:21:31 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:21:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:21:31 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:21:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:31 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:21:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:31 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:21:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:31 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:21:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:21:31 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:21:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:21:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:21:32 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:21:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:21:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:21:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:21:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:21:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:21:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:21:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:21:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:21:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:21:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:21:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:21:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:21:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:21:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:21:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:21:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:21:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:21:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:33 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:21:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:21:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:21:37 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:21:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:37 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:21:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:21:37 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:21:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:21:37 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:21:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:37 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:21:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:21:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:21:38 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:21:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:21:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:21:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:38 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:21:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:21:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:21:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:21:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:38 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:21:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:21:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:21:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:21:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:21:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:21:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:38 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:21:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:21:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:21:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:21:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:21:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:21:38 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:21:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:21:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:21:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:21:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:21:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:21:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:21:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:21:39 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:21:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:21:39 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:21:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:21:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:21:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:21:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:21:39 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:21:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:21:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:21:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:21:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:21:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:21:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:21:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:21:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:21:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:21:39 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:21:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:21:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:21:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:21:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:21:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:21:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:21:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:21:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:21:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:21:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:21:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:21:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:21:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:21:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:21:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:21:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:21:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:21:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:41 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:21:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:21:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:21:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:21:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:49 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:21:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:21:49 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:21:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:21:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:21:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:21:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:21:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:21:50 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:21:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:21:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:21:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:50 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:21:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:21:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:21:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:21:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:50 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:21:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:21:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:21:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:21:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:21:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:21:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:51 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:21:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:21:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:21:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:21:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:21:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:21:52 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:21:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:21:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:21:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:21:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:21:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:21:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:21:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:21:52 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:21:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:21:52 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:21:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:21:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:21:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:21:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:21:53 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:21:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:21:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:21:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:21:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:21:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:21:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:21:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:21:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:21:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:21:53 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:21:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:21:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:21:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:21:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:21:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:21:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:21:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:21:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:21:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:21:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:21:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:21:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:21:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:21:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:21:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:21:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:21:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:21:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:54 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:21:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:21:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:21:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:21:57 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:21:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:58 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:21:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:21:58 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:21:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:21:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:21:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:21:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:21:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:21:59 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:21:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:21:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:21:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:59 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:21:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:21:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:21:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:21:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:59 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:21:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:21:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:21:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:21:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:21:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:21:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:21:59 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:21:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:22:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:22:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:22:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:22:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:22:00 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:22:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:22:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:22:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:22:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:22:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:22:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:22:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:22:00 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:22:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:22:00 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:22:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:22:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:22:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:22:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:22:00 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:22:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:22:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:22:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:22:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:22:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:22:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:22:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:22:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:22:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:22:01 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:22:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:22:01 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:22:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:01 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:22:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:22:01 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:22:01 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:22:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:22:01 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:22:01 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:22:01 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:22:01 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:22:01 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:22:01 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:22:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:22:01 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:22:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:01 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:22:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:01 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:22:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:02 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:22:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:22:02 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:22:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:88)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:56)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:154)
	at fr.inria.lille.commons.spoon.SpoonedFile.processModelledClasses(SpoonedFile.java:138)
	at fr.inria.lille.commons.spoon.SpoonedFile.process(SpoonedFile.java:128)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:119)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:115)
	at fr.inria.lille.repair.nopol.synth.ConstraintModelBuilder.<init>(ConstraintModelBuilder.java:57)
	at fr.inria.lille.repair.nopol.synth.SynthesizerFactory.getFor(SynthesizerFactory.java:122)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:164)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:119)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:89)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:84)
	at fr.inria.lille.repair.Main.main(Main.java:61)
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:88)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:56)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:154)
	at fr.inria.lille.commons.spoon.SpoonedFile.processModelledClasses(SpoonedFile.java:138)
	at fr.inria.lille.commons.spoon.SpoonedFile.process(SpoonedFile.java:128)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:119)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:115)
	at fr.inria.lille.repair.nopol.synth.ConstraintModelBuilder.<init>(ConstraintModelBuilder.java:57)
	at fr.inria.lille.repair.nopol.synth.SynthesizerFactory.getFor(SynthesizerFactory.java:122)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:164)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:119)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:89)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:84)
	at fr.inria.lille.repair.Main.main(Main.java:61)
May 16, 2016 7:22:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:22:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:22:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:08 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:22:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:22:08 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:22:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:22:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:22:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:22:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:22:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:22:08 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:22:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:22:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:22:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:08 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:22:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:22:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:22:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:22:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:08 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:22:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:22:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:22:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:22:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:22:09 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:22:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:09 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:22:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:22:09 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:22:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:09 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:22:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:22:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:22:09 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:22:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:22:09 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:22:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:22:09 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:22:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:22:09 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:22:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:22:09 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:22:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:22:09 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:22:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:22:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:22:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:22:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:22:10 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:22:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:22:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:22:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:22:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:22:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:22:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:22:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:22:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:22:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:22:10 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:22:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:22:11 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:22:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:11 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:22:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:22:11 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:22:11 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:22:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:22:11 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:22:11 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:22:11 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:22:11 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:22:11 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:22:11 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:22:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:22:11 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:22:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:12 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:22:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:12 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:22:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:12 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:22:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:22:12 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:22:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:22:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:22:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:22:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:16 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:22:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:22:16 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:22:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:22:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:22:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:22:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:22:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:22:16 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:22:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:22:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:22:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:16 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:22:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:22:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:22:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:22:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:17 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:22:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:22:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:22:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:22:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:22:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:22:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:17 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:22:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:22:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:22:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:22:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:22:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:22:17 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:22:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:22:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:22:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:22:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:22:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:22:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:22:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:22:17 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:22:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:22:17 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:22:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:22:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:22:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:22:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:22:18 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:22:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:22:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:22:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:22:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:22:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:22:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:22:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:22:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:22:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:22:18 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:22:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:22:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:22:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:22:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:22:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:22:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:22:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:22:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:22:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:22:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:22:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:22:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:22:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:22:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:22:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:22:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:22:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:19 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:22:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:20 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:22:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:22:20 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:22:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:22:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:22:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:22:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:23 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:22:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:22:23 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:22:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:22:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:22:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:22:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:22:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:22:23 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:22:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:22:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:22:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:23 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:22:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:22:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:22:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:22:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:23 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:22:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:22:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:22:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:22:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:22:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:22:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:24 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:22:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:22:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:22:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:22:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:22:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:22:24 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:22:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:22:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:22:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:22:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:22:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:22:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:22:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:22:25 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:22:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:22:25 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:22:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:22:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:22:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:22:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:22:25 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:22:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:22:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:22:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:22:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:22:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:22:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:22:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:22:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:22:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:22:26 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:22:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:22:26 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:22:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:26 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:22:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:22:26 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:22:26 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:22:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:22:26 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:22:26 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:22:26 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:22:26 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:22:26 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:22:26 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:22:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:22:26 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:22:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:26 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:22:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:26 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:22:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:26 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:22:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:22:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:22:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:22:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:22:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:32 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:22:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:22:32 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:22:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:22:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:22:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:22:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:22:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:22:33 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:22:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:22:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:22:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:33 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:22:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:22:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:22:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:22:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:34 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:22:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:22:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:22:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:22:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:22:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:22:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:34 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:22:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:22:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:22:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:22:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:22:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:22:34 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:22:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:22:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:22:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:22:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:22:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:22:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:22:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:22:35 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:22:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:22:35 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:22:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:22:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:22:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:22:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:22:35 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:22:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:22:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:22:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:22:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:22:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:22:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:22:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:22:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:22:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:22:35 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:22:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:22:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:22:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:22:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:22:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:22:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:22:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:22:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:22:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:22:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:22:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:22:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:22:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:22:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:22:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:22:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:22:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:22:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:22:36 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:22:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:22:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:22:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:22:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:41 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:22:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:22:42 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:22:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:22:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:22:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:22:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:22:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:22:42 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:22:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:22:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:22:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:42 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:22:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:22:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:22:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:22:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:42 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:22:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:22:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:22:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:22:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:22:43 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:22:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:43 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:22:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:22:43 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:22:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:22:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:22:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:22:44 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:22:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:22:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:22:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:22:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:22:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:22:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:22:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:22:44 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:22:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:22:44 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:22:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:22:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:22:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:22:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:22:44 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:22:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:22:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:22:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:22:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:22:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:22:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:22:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:22:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:22:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:22:44 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:22:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:22:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:22:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:22:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:22:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:22:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:22:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:22:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:22:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:22:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:22:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:22:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:22:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:22:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:22:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:22:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:22:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:22:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:22:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:22:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:22:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:22:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:50 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:22:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:22:50 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:22:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:22:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:22:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:22:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:22:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:22:50 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:22:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:22:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:22:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:50 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:22:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:22:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:22:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:22:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:50 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:22:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:22:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:22:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:22:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:22:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:22:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:51 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:22:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:22:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:22:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:22:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:22:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:22:51 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:22:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:22:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:22:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:22:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:22:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:22:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:22:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:22:51 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:22:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:22:51 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:22:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:22:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:22:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:22:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:22:51 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:22:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:22:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:22:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:22:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:22:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:22:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:22:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:22:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:22:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:22:52 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:22:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:22:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:22:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:22:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:22:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:22:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:22:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:22:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:22:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:22:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:22:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:22:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:22:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:22:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:22:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:22:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:22:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:22:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:53 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:22:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:22:53 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:22:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:22:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:22:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:22:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:56 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:22:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:22:56 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:22:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:22:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:22:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:22:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:22:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:22:57 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:22:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:22:57 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:22:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:57 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:22:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:22:57 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:22:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:57 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:22:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:57 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:22:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:22:57 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:22:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:57 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:22:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:22:57 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:22:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:57 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:22:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:22:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:22:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:22:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:22:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:22:58 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:22:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:22:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:22:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:22:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:22:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:22:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:22:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:22:59 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:22:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:22:59 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:22:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:22:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:22:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:22:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:22:59 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:22:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:22:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:22:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:22:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:22:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:22:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:22:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:22:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:22:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:22:59 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:22:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:22:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:22:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:22:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:22:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:23:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:23:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:23:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:23:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:23:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:23:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:23:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:23:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:23:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:23:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:23:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:23:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:23:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:23:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:00 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:23:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:23:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:23:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:23:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:04 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:23:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:23:04 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:23:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:23:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:23:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:23:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:23:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:23:04 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:23:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:23:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:23:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:04 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:23:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:23:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:23:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:23:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:05 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:23:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:23:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:23:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:23:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:23:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:23:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:05 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:23:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:23:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:23:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:23:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:23:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:23:05 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:23:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:23:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:23:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:23:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:23:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:23:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:23:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:23:05 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:23:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:23:05 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:23:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:23:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:23:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:23:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:23:06 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:23:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:23:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:23:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:23:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:23:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:23:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:23:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:23:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:23:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:23:06 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:23:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:23:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:23:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:23:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:23:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:23:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:23:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:23:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:23:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:23:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:23:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:23:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:23:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:23:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:23:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:23:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:23:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:07 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:23:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:08 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:23:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:23:08 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:23:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:23:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:23:12 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:23:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:13 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:23:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:23:13 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:23:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:23:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:23:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:23:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:23:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:23:14 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:23:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:23:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:23:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:14 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:23:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:23:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:23:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:23:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:14 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:23:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:23:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:23:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:23:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:23:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:23:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:14 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:23:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:23:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:23:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:23:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:23:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:23:15 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:23:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:23:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:23:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:23:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:23:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:23:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:23:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:23:15 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:23:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:23:15 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:23:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:23:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:23:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:23:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:23:15 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:23:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:23:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:23:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:23:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:23:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:23:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:23:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:23:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:23:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:23:16 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:23:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:23:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:23:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:23:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:23:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:23:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:23:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:23:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:23:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:23:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:23:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:23:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:23:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:23:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:23:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:23:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:23:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:23:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:17 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:23:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:23:17 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:23:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:23:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:23:21 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:23:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:23:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:23:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:23:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:23:22 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:23:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:22 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:23:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:23:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:23:22 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:23:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:23:22 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:23:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:22 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:23:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:23:22 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:23:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:22 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:23:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:22 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:23:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:23:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:23:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:23:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:23:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:23:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:23 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:23:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:23:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:23:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:23:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:23:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:23:24 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:23:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:23:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:23:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:23:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:23:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:23:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:23:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:23:24 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:23:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:23:24 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:23:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:23:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:23:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:23:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:23:24 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:23:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:23:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:23:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:23:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:23:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:23:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:23:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:23:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:23:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:23:24 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:23:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:23:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:23:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:23:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:23:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:23:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:23:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:23:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:23:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:23:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:23:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:23:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:23:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:23:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:23:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:23:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:23:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:23:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:25 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:23:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:23:25 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:23:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:88)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:56)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:154)
	at fr.inria.lille.commons.spoon.SpoonedFile.processModelledClasses(SpoonedFile.java:138)
	at fr.inria.lille.commons.spoon.SpoonedFile.process(SpoonedFile.java:128)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:119)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:115)
	at fr.inria.lille.repair.nopol.synth.ConstraintModelBuilder.<init>(ConstraintModelBuilder.java:57)
	at fr.inria.lille.repair.nopol.synth.SynthesizerFactory.getFor(SynthesizerFactory.java:122)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:164)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:119)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:89)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:84)
	at fr.inria.lille.repair.Main.main(Main.java:61)
May 16, 2016 7:23:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:23:31 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:23:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:32 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:23:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:23:32 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:23:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:23:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:23:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:23:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:23:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:23:32 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:23:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:23:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:23:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:32 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:23:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:23:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:23:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:23:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:32 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:23:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:23:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:23:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:23:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:23:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:23:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:33 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:23:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:23:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:23:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:23:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:23:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:23:33 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:23:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:23:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:23:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:23:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:23:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:23:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:23:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:23:34 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:23:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:23:34 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:23:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:23:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:23:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:23:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:23:34 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:23:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:23:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:23:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:23:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:23:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:23:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:23:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:23:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:23:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:23:35 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:23:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:23:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:23:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:23:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:23:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:23:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:23:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:23:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:23:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:23:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:23:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:23:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:23:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:23:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:23:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:23:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:23:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:23:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:35 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:23:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:23:35 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:23:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:23:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:23:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:23:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:39 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:23:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:23:39 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:23:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:23:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:23:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:23:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:23:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:23:40 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:23:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:23:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:23:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:40 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:23:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:23:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:23:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:23:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:40 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:23:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:23:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:23:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:23:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:23:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:23:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:40 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:23:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:23:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:23:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:23:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:23:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:23:40 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:23:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:23:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:23:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:23:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:23:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:23:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:23:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:23:41 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:23:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:23:41 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:23:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:23:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:23:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:23:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:23:41 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:23:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:23:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:23:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:23:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:23:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:23:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:23:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:23:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:23:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:23:41 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:23:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:23:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:23:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:23:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:23:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:23:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:23:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:23:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:23:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:23:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:23:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:23:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:23:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:23:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:23:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:23:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:23:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:23:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:23:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
java.lang.RuntimeException: java.util.concurrent.TimeoutException
	at xxl.java.junit.TestSuiteExecution.executionResult(TestSuiteExecution.java:97)
	at xxl.java.junit.TestSuiteExecution.runTestCase(TestSuiteExecution.java:36)
	at xxl.java.junit.TestSuiteExecution.runTestCases(TestSuiteExecution.java:81)
	at fr.inria.lille.repair.nopol.synth.ConstraintModelBuilder.buildFor(ConstraintModelBuilder.java:78)
	at fr.inria.lille.repair.nopol.synth.DefaultSynthesizer.buildPatch(DefaultSynthesizer.java:67)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:185)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:119)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:89)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:84)
	at fr.inria.lille.repair.Main.main(Main.java:61)
Caused by: java.util.concurrent.TimeoutException
	at java.util.concurrent.FutureTask.get(FutureTask.java:201)
	at xxl.java.junit.TestSuiteExecution.executionResult(TestSuiteExecution.java:90)
	... 9 more
May 16, 2016 7:28:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:28:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:28:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:28:49 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:28:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:28:49 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:28:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:28:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:28:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:28:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:28:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:28:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:28:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:28:50 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:28:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:28:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:28:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:28:50 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:28:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:28:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:28:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:28:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:28:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:28:50 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:28:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:28:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:28:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:28:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:28:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:28:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:28:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:28:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:28:50 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:28:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:28:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:28:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:28:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:28:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:28:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:28:51 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:28:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:28:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:28:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:28:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:28:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:28:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:28:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:28:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:28:51 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:28:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:28:51 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:28:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:28:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:28:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:28:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:28:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:28:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:28:52 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:28:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:28:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:28:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:28:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:28:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:28:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:28:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:28:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:28:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:28:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:28:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:28:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:28:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:28:52 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:28:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:28:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:28:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:28:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:28:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:28:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:28:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:28:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:28:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:28:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:28:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:28:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:28:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:28:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:28:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:28:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:28:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:28:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:28:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:28:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:28:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:28:56 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:28:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:28:56 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:28:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:28:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:28:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:28:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:28:59 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:28:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:29:00 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:29:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:29:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:29:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:29:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:29:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:29:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:29:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:29:01 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:29:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:29:01 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:29:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:29:01 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:29:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:29:01 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:29:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:29:01 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:29:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:29:01 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:29:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:29:01 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:29:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:29:01 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:29:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:29:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:29:01 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:29:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:29:01 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:29:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:29:01 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:29:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:29:01 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:29:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:29:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:29:01 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:29:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:29:01 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:29:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:29:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:29:02 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:29:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:29:02 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:29:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:29:02 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:29:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:29:02 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:29:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:29:02 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:29:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:29:02 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:29:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:29:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:29:02 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:29:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:29:02 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:29:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:29:02 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:29:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:29:02 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:29:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:29:02 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:29:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:29:02 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:29:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:29:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:29:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:29:02 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:29:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:29:02 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:29:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:29:02 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:29:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:29:02 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:29:02 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:29:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:29:02 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:29:02 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:29:02 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:29:02 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:29:02 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:29:02 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:29:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:29:02 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:29:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:29:02 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:29:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:29:02 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:29:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:29:03 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:29:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:29:03 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:29:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:29:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:29:07 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:29:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:29:07 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:29:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:29:07 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:29:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:29:07 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:29:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:29:07 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:29:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:29:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:29:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:29:08 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:29:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:29:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:29:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:29:08 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:29:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:29:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:29:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:29:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:29:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:29:08 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:29:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:29:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:29:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:29:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:29:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:29:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:29:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:29:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:29:08 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:29:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:29:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:29:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:29:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:29:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:29:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:29:08 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:29:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:29:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:29:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:29:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:29:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:29:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:29:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:29:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:29:09 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:29:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:29:09 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:29:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:29:09 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:29:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:29:09 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:29:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:29:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:29:09 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:29:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:29:09 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:29:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:29:09 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:29:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:29:09 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:29:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:29:09 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:29:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:29:09 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:29:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:29:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:29:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:29:10 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:29:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:29:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:29:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:29:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:29:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:29:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:29:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:29:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:29:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:29:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:29:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:29:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:29:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:29:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:29:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:29:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:29:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:29:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:29:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:29:11 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:29:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:29:11 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - parameter The does not appear in a.b.c.myFunc's parameter list
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                                                                        ^

May 16, 2016 7:29:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:29:11 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:29:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:29:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:29:11 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:29:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:29:12 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:29:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:29:12 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:29:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:29:12 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:29:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:29:12 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:29:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:29:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:29:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:29:12 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:29:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:29:12 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:29:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:29:13 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:29:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:29:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:29:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:29:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:29:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:29:13 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:29:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:29:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:29:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:29:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:29:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:29:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:29:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:29:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:29:13 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:29:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:29:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:29:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:29:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:29:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:29:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:29:14 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:29:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:29:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:29:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:29:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:29:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:29:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:29:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:29:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:29:14 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:29:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:29:14 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:29:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:29:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:29:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:29:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:29:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:29:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:29:14 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:29:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:29:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:29:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:29:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:29:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:29:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:29:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:29:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:29:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:29:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:29:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:29:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:29:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:29:15 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:29:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:29:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:29:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:29:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:29:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:29:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:29:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:29:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:29:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:29:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:29:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:29:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:29:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:29:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:29:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:29:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:29:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:29:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:29:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:29:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:29:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:29:15 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:29:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:29:15 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:29:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:29:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:29:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 7:29:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:29:17 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 7:29:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:29:17 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:29:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:29:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:29:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:29:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:29:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:29:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:29:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:29:17 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 7:29:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:29:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 7:29:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:29:17 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 7:29:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:29:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:29:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:29:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:29:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:29:17 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:29:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:29:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:29:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:29:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:29:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:29:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:29:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 7:29:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:29:18 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:29:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:29:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 7:29:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:29:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 7:29:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:29:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:29:18 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 7:29:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:29:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 7:29:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:29:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:29:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:29:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:29:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:29:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:29:18 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:29:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:29:19 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:29:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:29:19 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:29:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:29:19 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 7:29:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:29:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:29:19 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:29:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:29:19 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 7:29:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:29:19 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 7:29:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:29:19 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 7:29:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:29:19 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:29:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:29:19 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 7:29:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:29:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:29:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:29:20 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:29:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:29:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:29:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:29:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 7:29:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:29:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:29:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:29:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:29:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:29:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:29:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:29:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:29:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:29:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:29:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:29:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 7:29:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:29:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:29:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:29:21 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:29:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:29:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:29:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:29:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:29:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:29:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 7:29:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:29:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 7:29:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
Closure Compiler (http://code.google.com/closure/compiler)
Version: Unversioned directory
Built on: 2016/05/16 12:10
Closure Compiler (http://code.google.com/closure/compiler)
Version: Unversioned directory
Built on: 2016/05/16 12:10
May 16, 2016 7:29:33 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:4: WARNING - Unable to determine type of parameter InternalName for exported function b
 var InternalName = function(a,b,c) {  return 6;};goog.exportSymbol('ExternalName', InternalName)
                               ^

May 16, 2016 7:29:33 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:4: WARNING - Unable to determine type of parameter InternalName for exported function c
 var InternalName = function(a,b,c) {  return 6;};goog.exportSymbol('ExternalName', InternalName)
                                 ^

May 16, 2016 7:29:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 100% typed
May 16, 2016 7:29:33 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:5: WARNING - Unable to determine return type for exported function internalName
internalName = function(a) {  return 6;
               ^

May 16, 2016 7:29:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
## OAR [2016-05-16 22:09:41] Job 990791 KILLED ##
