Running ant (compile)...................................................... OK
Running ant (compile.tests)................................................ OK
mkdir: cannot create directory ‘lib/’: File exists
cp: cannot stat ‘/home/tdurieux/defects4j/framework/projects/Closure/lib/*’: No such file or directory
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8
java.lang.NullPointerException
	at spoon.support.compiler.jdt.JDTTreeBuilder.hasTypeInImports(JDTTreeBuilder.java:415)
	at spoon.support.compiler.jdt.JDTTreeBuilder.getQualifiedTypeReference(JDTTreeBuilder.java:530)
	at spoon.support.compiler.jdt.JDTTreeBuilder.visit(JDTTreeBuilder.java:2257)
	at org.eclipse.jdt.internal.compiler.ast.Argument.traverse(Argument.java:230)
	at spoon.support.compiler.jdt.JDTTreeBuilder.visit(JDTTreeBuilder.java:3058)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.traverse(MethodDeclaration.java:327)
	at spoon.support.compiler.jdt.JDTTreeBuilder.visit(JDTTreeBuilder.java:3800)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.traverse(TypeDeclaration.java:1319)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.traverse(CompilationUnitDeclaration.java:748)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.traverse(CompilationUnitDeclaration.java:709)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.buildSources(JDTBasedSpoonCompiler.java:436)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.build(JDTBasedSpoonCompiler.java:124)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.build(JDTBasedSpoonCompiler.java:107)
	at fr.inria.lille.commons.spoon.util.SpoonModelLibrary.modelFor(SpoonModelLibrary.java:44)
	at fr.inria.lille.commons.spoon.SpoonedFile.<init>(SpoonedFile.java:50)
	at fr.inria.lille.commons.spoon.SpoonedProject.<init>(SpoonedProject.java:17)
	at fr.inria.lille.repair.nopol.NoPol.<init>(NoPol.java:78)
	at fr.inria.lille.repair.nopol.NoPol.<init>(NoPol.java:84)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:78)
	at fr.inria.lille.repair.Main.main(Main.java:61)
May 16, 2016 6:24:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 6:24:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 6:24:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:24:36 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 6:24:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:24:36 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 6:24:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:24:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 6:24:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:24:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:24:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:24:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:24:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:24:39 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 6:24:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:24:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 6:24:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:24:39 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 6:24:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:24:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 6:24:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:24:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 6:24:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:24:39 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:24:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:24:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 6:24:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:24:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 6:24:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:24:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:24:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 6:24:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:24:39 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:24:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:24:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 6:24:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:24:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 6:24:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:24:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:24:39 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 6:24:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:24:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 6:24:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:24:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 6:24:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 6:24:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:24:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 6:24:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:24:42 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 6:24:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:24:42 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 6:24:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:24:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 6:24:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:24:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 6:24:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:24:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:24:42 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:24:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:24:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 6:24:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:24:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 6:24:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:24:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 6:24:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:24:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 6:24:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:24:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 6:24:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:24:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:24:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:24:42 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:24:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:24:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 6:24:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:24:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:24:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:24:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:24:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:24:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 6:24:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 6:24:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 6:24:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 6:24:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 6:24:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 6:24:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 6:24:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 6:24:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:24:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:24:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 6:24:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:24:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 6:24:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:24:56 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:24:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:25:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 6:25:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 6:25:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:00 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 6:25:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:25:00 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 6:25:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:25:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 6:25:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:25:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:25:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:25:00 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 6:25:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:25:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 6:25:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:00 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 6:25:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:25:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 6:25:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 6:25:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:00 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:25:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:25:01 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 6:25:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:01 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 6:25:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:25:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 6:25:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:03 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:25:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:25:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 6:25:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 6:25:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:25:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:25:03 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 6:25:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:25:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 6:25:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 6:25:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 6:25:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:25:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 6:25:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:25:03 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 6:25:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:25:03 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 6:25:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:25:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 6:25:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 6:25:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:25:03 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:25:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:25:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 6:25:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 6:25:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 6:25:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 6:25:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:25:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 6:25:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:25:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:25:06 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:25:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:25:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 6:25:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:25:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:25:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:25:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:25:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 6:25:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 6:25:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 6:25:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 6:25:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 6:25:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 6:25:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 6:25:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 6:25:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:25:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 6:25:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 6:25:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:06 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:25:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:25:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 6:25:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 6:25:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:10 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 6:25:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:25:10 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 6:25:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:25:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 6:25:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:25:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:25:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:25:12 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 6:25:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:25:12 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 6:25:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:12 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 6:25:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:25:12 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 6:25:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:12 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 6:25:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:12 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:25:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:25:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 6:25:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 6:25:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:25:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 6:25:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:13 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:25:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:25:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 6:25:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 6:25:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:25:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:25:13 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 6:25:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:25:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 6:25:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 6:25:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 6:25:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:25:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 6:25:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:25:13 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 6:25:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:25:13 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 6:25:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:25:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 6:25:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 6:25:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:25:13 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:25:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:25:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 6:25:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 6:25:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 6:25:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 6:25:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:25:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 6:25:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:25:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:25:15 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:25:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:25:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 6:25:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:25:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:25:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:25:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:25:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 6:25:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 6:25:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 6:25:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 6:25:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 6:25:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 6:25:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 6:25:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 6:25:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:25:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 6:25:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 6:25:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:16 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:25:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:25:16 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:25:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:25:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 6:25:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 6:25:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:24 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 6:25:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:25:24 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 6:25:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:25:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 6:25:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:25:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:25:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:25:27 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 6:25:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:25:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 6:25:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:27 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 6:25:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:25:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 6:25:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 6:25:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:27 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:25:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:25:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 6:25:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 6:25:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:25:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 6:25:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:27 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:25:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:25:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 6:25:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 6:25:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:25:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:25:27 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 6:25:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:25:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 6:25:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 6:25:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 6:25:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:25:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 6:25:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:25:29 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 6:25:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:25:29 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 6:25:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:25:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 6:25:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 6:25:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:25:30 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:25:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:25:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 6:25:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 6:25:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 6:25:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 6:25:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:25:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 6:25:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:25:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:25:30 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:25:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:25:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 6:25:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:25:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:25:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:25:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:25:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 6:25:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 6:25:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 6:25:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 6:25:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 6:25:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 6:25:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 6:25:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 6:25:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:25:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 6:25:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 6:25:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:33 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:25:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:25:33 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:25:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:25:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 6:25:37 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 6:25:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:37 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 6:25:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:25:37 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 6:25:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:25:37 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 6:25:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:37 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:25:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:25:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:25:40 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 6:25:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:25:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 6:25:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:40 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 6:25:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:25:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 6:25:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 6:25:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:40 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:25:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:25:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 6:25:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 6:25:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:25:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 6:25:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:40 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:25:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:25:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 6:25:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 6:25:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:25:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:25:40 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 6:25:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:25:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 6:25:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 6:25:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 6:25:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:25:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 6:25:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:25:42 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 6:25:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:25:42 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 6:25:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:25:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 6:25:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 6:25:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:25:42 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:25:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:25:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 6:25:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 6:25:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 6:25:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:43 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 6:25:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:25:43 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 6:25:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:25:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:25:43 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:25:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:25:43 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 6:25:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:43 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:25:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:25:43 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:25:43 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:25:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 6:25:43 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 6:25:43 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 6:25:43 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 6:25:43 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 6:25:43 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 6:25:43 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 6:25:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 6:25:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:25:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 6:25:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 6:25:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:45 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:25:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:25:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 6:25:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 6:25:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:53 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 6:25:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:25:53 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 6:25:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:25:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 6:25:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:25:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:25:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:25:53 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 6:25:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:25:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 6:25:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:53 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 6:25:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:25:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 6:25:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 6:25:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:53 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:25:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:25:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 6:25:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 6:25:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:25:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 6:25:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:56 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:25:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:25:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 6:25:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 6:25:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:25:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:25:56 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 6:25:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:25:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 6:25:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 6:25:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 6:25:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:25:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 6:25:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:25:56 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 6:25:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:25:56 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 6:25:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:25:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 6:25:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 6:25:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:25:56 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:25:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:25:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 6:25:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 6:25:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 6:25:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 6:25:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:25:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 6:25:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:25:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:25:58 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:25:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:25:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 6:25:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:25:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:25:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:25:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:25:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 6:25:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 6:25:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 6:25:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 6:25:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 6:25:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 6:25:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 6:25:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 6:25:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:25:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 6:25:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 6:25:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:25:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The alias b is assigned a value more than once.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                      ^

May 16, 2016 6:25:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The alias c is assigned a value more than once.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                    ^

May 16, 2016 6:25:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 6:25:59 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:25:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:26:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 6:26:02 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 6:26:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:02 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 6:26:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:26:03 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 6:26:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:26:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 6:26:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:26:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:26:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:26:03 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 6:26:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:26:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 6:26:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:03 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 6:26:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:26:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 6:26:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 6:26:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:05 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:26:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:26:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 6:26:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 6:26:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:26:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 6:26:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:05 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:26:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:26:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 6:26:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 6:26:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:26:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:26:05 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 6:26:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:26:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 6:26:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 6:26:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 6:26:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:26:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 6:26:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:26:06 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 6:26:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:26:06 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 6:26:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:26:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 6:26:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 6:26:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:26:08 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:26:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:26:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 6:26:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 6:26:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 6:26:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 6:26:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:26:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 6:26:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:26:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:26:08 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:26:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:26:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 6:26:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:26:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:26:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:26:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:26:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 6:26:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 6:26:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 6:26:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 6:26:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 6:26:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 6:26:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 6:26:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 6:26:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:26:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 6:26:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 6:26:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:11 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:26:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:26:11 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:26:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:26:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 6:26:12 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 6:26:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:12 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 6:26:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:26:12 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 6:26:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:26:12 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 6:26:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:12 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:26:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:26:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:26:14 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 6:26:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:26:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 6:26:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:14 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 6:26:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:26:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 6:26:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 6:26:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:14 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:26:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:26:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 6:26:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 6:26:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:26:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 6:26:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:15 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:26:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:26:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 6:26:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 6:26:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:26:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:26:15 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 6:26:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:26:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 6:26:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 6:26:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 6:26:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:26:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 6:26:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:26:15 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 6:26:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:26:15 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 6:26:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:26:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 6:26:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 6:26:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:26:17 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:26:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:26:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 6:26:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 6:26:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 6:26:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 6:26:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:26:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 6:26:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:26:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:26:18 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:26:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:26:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 6:26:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:26:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:26:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:26:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:26:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 6:26:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 6:26:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 6:26:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 6:26:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 6:26:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 6:26:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 6:26:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 6:26:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:26:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 6:26:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 6:26:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:20 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:26:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:26:20 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:26:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:26:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 6:26:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 6:26:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:27 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 6:26:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:26:27 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 6:26:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:26:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 6:26:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:26:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:26:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:26:28 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 6:26:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:26:28 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 6:26:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:28 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 6:26:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:26:28 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 6:26:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:28 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 6:26:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:28 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:26:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:26:28 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 6:26:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:28 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 6:26:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:26:28 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 6:26:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:28 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:26:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:26:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 6:26:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 6:26:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:26:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:26:30 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 6:26:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:26:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 6:26:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 6:26:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 6:26:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:26:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 6:26:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:26:30 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 6:26:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:26:30 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 6:26:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:26:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 6:26:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 6:26:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:26:30 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:26:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:26:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 6:26:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 6:26:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 6:26:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 6:26:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:26:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 6:26:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:26:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:26:31 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:26:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:26:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 6:26:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:26:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:26:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:26:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:26:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 6:26:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 6:26:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 6:26:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 6:26:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 6:26:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 6:26:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 6:26:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 6:26:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:26:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 6:26:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 6:26:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:33 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:26:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:26:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The local variable b is in a goog.scope and is not an alias.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                      ^

May 16, 2016 6:26:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The local variable c is in a goog.scope and is not an alias.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                    ^

May 16, 2016 6:26:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 6:26:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 6:26:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 6:26:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:40 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 6:26:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:26:40 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 6:26:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:26:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 6:26:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:26:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:26:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:26:41 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 6:26:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:26:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 6:26:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:41 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 6:26:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:26:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 6:26:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 6:26:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:41 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:26:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:26:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 6:26:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 6:26:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:26:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 6:26:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:41 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:26:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:26:43 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 6:26:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:43 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 6:26:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:26:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:26:43 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 6:26:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:26:43 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 6:26:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 6:26:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 6:26:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:26:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 6:26:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:26:44 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 6:26:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:26:44 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 6:26:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:26:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 6:26:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 6:26:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:26:44 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:26:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:26:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 6:26:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 6:26:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 6:26:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 6:26:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:26:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 6:26:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:26:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:26:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:26:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:26:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 6:26:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:26:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:26:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:26:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:26:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 6:26:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 6:26:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 6:26:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 6:26:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 6:26:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 6:26:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 6:26:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 6:26:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:26:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 6:26:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 6:26:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:47 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:26:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:26:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 6:26:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 6:26:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:51 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 6:26:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:26:51 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 6:26:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:26:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 6:26:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:26:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:26:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:26:53 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 6:26:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:26:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 6:26:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:53 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 6:26:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:26:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 6:26:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 6:26:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:53 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:26:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:26:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 6:26:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 6:26:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:26:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 6:26:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:54 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:26:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:26:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 6:26:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 6:26:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:26:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:26:54 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 6:26:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:26:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 6:26:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 6:26:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 6:26:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:26:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 6:26:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:26:56 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 6:26:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:26:56 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 6:26:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:26:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 6:26:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 6:26:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:26:56 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:26:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:26:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 6:26:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 6:26:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 6:26:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 6:26:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:26:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 6:26:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:26:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:26:56 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:26:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:26:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 6:26:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:26:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:26:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:26:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:26:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 6:26:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 6:26:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 6:26:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 6:26:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 6:26:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 6:26:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 6:26:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 6:26:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:26:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 6:26:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 6:26:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:26:59 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:26:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 86.7% typed
May 16, 2016 6:27:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 6:27:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 6:27:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:00 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 6:27:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:27:00 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 6:27:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:27:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 6:27:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:27:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:27:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:27:03 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 6:27:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:27:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 6:27:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:03 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 6:27:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:27:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 6:27:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 6:27:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:03 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:27:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:27:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 6:27:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 6:27:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:27:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 6:27:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:03 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:27:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:27:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 6:27:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 6:27:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:27:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:27:03 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 6:27:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:27:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 6:27:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 6:27:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 6:27:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:27:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 6:27:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:27:05 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 6:27:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:27:05 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 6:27:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:27:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 6:27:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 6:27:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:27:06 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:27:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:27:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 6:27:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 6:27:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 6:27:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 6:27:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:27:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 6:27:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:27:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:27:06 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:27:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:27:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 6:27:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:27:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:27:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:27:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:27:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 6:27:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 6:27:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 6:27:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 6:27:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 6:27:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 6:27:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 6:27:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 6:27:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:27:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 6:27:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 6:27:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 86.7% typed
May 16, 2016 6:27:09 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:27:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:27:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 6:27:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 6:27:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:12 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 6:27:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:27:12 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 6:27:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:27:12 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 6:27:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:12 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:27:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:27:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:27:12 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 6:27:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:27:12 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 6:27:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:12 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 6:27:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:27:12 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 6:27:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:12 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 6:27:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:12 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:27:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:27:12 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 6:27:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:12 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 6:27:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:27:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 6:27:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:13 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:27:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:27:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 6:27:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 6:27:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:27:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:27:15 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 6:27:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:27:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 6:27:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 6:27:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 6:27:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:27:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 6:27:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:27:15 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 6:27:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:27:15 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 6:27:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:27:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 6:27:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 6:27:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:27:15 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:27:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:27:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 6:27:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 6:27:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 6:27:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 6:27:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:27:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 6:27:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:27:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:27:15 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:27:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:27:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 6:27:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:27:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:27:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:27:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:27:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 6:27:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 6:27:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 6:27:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 6:27:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 6:27:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 6:27:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 6:27:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 6:27:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:27:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 6:27:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 6:27:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The body of a goog.scope function cannot use throw.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                            ^

May 16, 2016 6:27:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The body of a goog.scope function cannot use throw.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                               ^

May 16, 2016 6:27:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The body of a goog.scope function cannot use throw.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                  ^

May 16, 2016 6:27:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The body of a goog.scope function cannot use throw.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                          ^

May 16, 2016 6:27:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The body of a goog.scope function cannot use throw.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                            ^

May 16, 2016 6:27:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The body of a goog.scope function cannot use throw.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                ^

May 16, 2016 6:27:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The body of a goog.scope function cannot use throw.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                        ^

May 16, 2016 6:27:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The body of a goog.scope function cannot use throw.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                          ^

May 16, 2016 6:27:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The body of a goog.scope function cannot use throw.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                        ^

May 16, 2016 6:27:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The body of a goog.scope function cannot use throw.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                          ^

May 16, 2016 6:27:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The body of a goog.scope function cannot use throw.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                                                             ^

May 16, 2016 6:27:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The body of a goog.scope function cannot use throw.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                                                               ^

May 16, 2016 6:27:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The body of a goog.scope function cannot use throw.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                                                                        ^

May 16, 2016 6:27:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 13 error(s), 0 warning(s)
May 16, 2016 6:27:18 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:27:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:27:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 6:27:21 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 6:27:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 6:27:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:27:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 6:27:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:27:21 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 6:27:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:21 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:27:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:27:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:27:22 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 6:27:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:27:22 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 6:27:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:22 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 6:27:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:27:22 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 6:27:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:22 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 6:27:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:22 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:27:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:27:22 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 6:27:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:22 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 6:27:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:27:22 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 6:27:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:22 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:27:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:27:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 6:27:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 6:27:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:27:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:27:24 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 6:27:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:27:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 6:27:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 6:27:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 6:27:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:27:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 6:27:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:27:24 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 6:27:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:27:24 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 6:27:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:27:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 6:27:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 6:27:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:27:24 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:27:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:27:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 6:27:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 6:27:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 6:27:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 6:27:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:27:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 6:27:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:27:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:27:27 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:27:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:27:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 6:27:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:27:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:27:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:27:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:27:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 6:27:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 6:27:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 6:27:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 6:27:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 6:27:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 6:27:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 6:27:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 6:27:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:27:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 6:27:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 6:27:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:27 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:27:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:27:28 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The body of a goog.scope function cannot reference this.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                            ^

May 16, 2016 6:27:28 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The body of a goog.scope function cannot reference this.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                               ^

May 16, 2016 6:27:28 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The body of a goog.scope function cannot reference this.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                  ^

May 16, 2016 6:27:28 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The body of a goog.scope function cannot reference this.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                          ^

May 16, 2016 6:27:28 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The body of a goog.scope function cannot reference this.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                            ^

May 16, 2016 6:27:28 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The body of a goog.scope function cannot reference this.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                ^

May 16, 2016 6:27:28 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The body of a goog.scope function cannot reference this.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                        ^

May 16, 2016 6:27:28 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The body of a goog.scope function cannot reference this.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                          ^

May 16, 2016 6:27:28 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The body of a goog.scope function cannot reference this.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                        ^

May 16, 2016 6:27:28 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The body of a goog.scope function cannot reference this.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                          ^

May 16, 2016 6:27:28 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The body of a goog.scope function cannot reference this.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                                                             ^

May 16, 2016 6:27:28 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The body of a goog.scope function cannot reference this.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                                                               ^

May 16, 2016 6:27:28 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The body of a goog.scope function cannot reference this.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                                                                        ^

May 16, 2016 6:27:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 13 error(s), 0 warning(s)
May 16, 2016 6:27:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 6:27:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 6:27:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:31 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 6:27:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:27:31 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 6:27:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:27:31 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 6:27:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:31 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:27:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:27:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:27:31 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 6:27:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:27:31 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 6:27:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:31 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 6:27:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:27:31 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 6:27:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:31 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 6:27:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:31 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:27:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:27:31 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 6:27:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:31 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 6:27:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:27:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 6:27:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:34 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:27:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:27:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 6:27:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 6:27:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:27:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:27:34 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 6:27:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:27:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 6:27:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 6:27:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 6:27:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:27:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 6:27:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:27:34 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 6:27:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:27:34 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 6:27:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:27:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 6:27:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 6:27:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:27:34 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:27:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:27:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 6:27:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 6:27:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 6:27:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 6:27:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:27:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 6:27:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:27:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:27:36 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:27:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:27:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 6:27:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:27:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:27:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:27:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:27:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 6:27:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 6:27:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 6:27:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 6:27:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 6:27:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 6:27:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 6:27:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 6:27:37 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:27:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:37 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 6:27:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:37 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 6:27:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:37 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The body of a goog.scope function cannot use return.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                            ^

May 16, 2016 6:27:37 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The body of a goog.scope function cannot use return.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                               ^

May 16, 2016 6:27:37 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The body of a goog.scope function cannot use return.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                  ^

May 16, 2016 6:27:37 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The body of a goog.scope function cannot use return.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                          ^

May 16, 2016 6:27:37 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The body of a goog.scope function cannot use return.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                            ^

May 16, 2016 6:27:37 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The body of a goog.scope function cannot use return.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                ^

May 16, 2016 6:27:37 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The body of a goog.scope function cannot use return.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                        ^

May 16, 2016 6:27:37 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The body of a goog.scope function cannot use return.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                          ^

May 16, 2016 6:27:37 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The body of a goog.scope function cannot use return.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                        ^

May 16, 2016 6:27:37 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The body of a goog.scope function cannot use return.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                          ^

May 16, 2016 6:27:37 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The body of a goog.scope function cannot use return.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                                                             ^

May 16, 2016 6:27:37 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The body of a goog.scope function cannot use return.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                                                               ^

May 16, 2016 6:27:37 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The body of a goog.scope function cannot use return.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                                                                        ^

May 16, 2016 6:27:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 13 error(s), 0 warning(s)
May 16, 2016 6:27:37 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:27:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:27:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 6:27:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 6:27:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:40 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 6:27:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:27:40 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 6:27:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:27:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 6:27:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:27:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:27:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:27:40 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 6:27:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:27:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 6:27:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:40 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 6:27:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:27:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 6:27:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 6:27:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:41 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:27:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:27:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 6:27:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 6:27:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:27:43 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 6:27:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:43 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:27:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:27:43 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 6:27:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:43 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 6:27:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:27:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:27:43 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 6:27:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:27:43 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 6:27:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 6:27:43 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 6:27:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:27:43 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 6:27:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:27:43 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 6:27:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:27:43 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 6:27:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:27:43 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 6:27:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:43 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 6:27:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:27:43 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:27:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:27:43 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 6:27:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:43 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 6:27:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 6:27:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 6:27:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:27:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 6:27:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:27:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:27:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:27:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:27:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 6:27:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:27:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:27:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:27:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:27:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 6:27:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 6:27:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 6:27:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 6:27:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 6:27:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 6:27:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 6:27:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 6:27:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:27:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 6:27:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 6:27:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 6:27:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 6:27:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:49 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 6:27:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:27:49 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 6:27:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:27:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 6:27:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:27:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:27:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:27:50 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 6:27:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:27:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 6:27:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:50 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 6:27:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:27:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 6:27:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 6:27:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:52 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:27:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:27:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 6:27:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 6:27:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:27:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 6:27:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:52 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:27:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:27:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 6:27:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 6:27:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:27:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:27:52 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 6:27:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:27:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 6:27:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 6:27:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 6:27:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:27:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 6:27:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:27:53 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 6:27:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:27:53 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 6:27:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:27:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 6:27:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 6:27:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:27:55 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:27:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:27:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 6:27:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 6:27:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 6:27:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 6:27:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:27:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 6:27:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:27:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:27:55 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:27:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:27:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 6:27:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:27:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:27:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:27:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:27:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 6:27:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 6:27:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 6:27:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 6:27:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 6:27:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 6:27:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 6:27:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 6:27:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:27:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 6:27:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 6:27:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:58 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:27:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:27:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 6:27:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 6:27:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:59 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 6:27:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:27:59 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 6:27:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:27:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 6:27:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:27:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:27:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:27:59 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 6:27:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:27:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 6:27:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:27:59 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 6:27:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:28:01 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 6:28:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:01 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 6:28:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:01 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:28:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:28:01 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 6:28:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:01 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 6:28:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:28:02 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 6:28:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:02 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:28:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:28:02 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 6:28:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:02 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 6:28:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:28:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:28:02 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 6:28:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:28:02 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 6:28:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 6:28:02 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 6:28:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:28:02 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 6:28:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:28:02 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 6:28:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:28:02 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 6:28:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:28:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 6:28:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 6:28:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:28:04 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:28:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:28:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 6:28:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 6:28:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 6:28:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 6:28:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:28:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 6:28:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:28:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:28:04 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:28:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:28:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 6:28:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:28:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:28:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:28:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:28:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 6:28:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 6:28:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 6:28:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 6:28:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 6:28:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 6:28:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 6:28:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 6:28:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:28:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 6:28:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:07 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 6:28:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:07 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:28:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:28:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 6:28:09 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 6:28:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:11 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 6:28:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:28:11 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 6:28:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:28:11 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 6:28:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:11 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:28:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:28:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:28:11 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 6:28:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:28:11 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 6:28:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:11 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 6:28:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:28:11 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 6:28:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:11 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 6:28:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:11 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:28:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:28:11 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 6:28:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:11 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 6:28:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:28:11 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 6:28:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:11 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:28:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:28:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 6:28:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 6:28:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:28:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:28:14 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 6:28:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:28:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 6:28:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 6:28:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 6:28:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:28:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 6:28:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:28:14 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 6:28:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:28:14 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 6:28:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:28:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 6:28:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 6:28:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:28:14 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:28:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:28:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 6:28:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 6:28:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 6:28:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 6:28:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:28:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 6:28:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:28:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:28:14 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:28:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:28:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 6:28:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:28:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:28:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:28:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:28:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 6:28:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 6:28:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 6:28:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 6:28:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 6:28:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 6:28:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 6:28:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 6:28:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:28:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 6:28:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 6:28:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:17 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:28:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:28:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 6:28:21 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 6:28:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 6:28:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:28:23 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 6:28:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:28:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 6:28:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:28:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:28:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:28:23 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 6:28:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:28:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 6:28:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:23 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 6:28:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:28:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 6:28:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 6:28:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:23 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:28:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:28:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 6:28:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 6:28:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:28:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 6:28:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:24 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:28:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:28:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 6:28:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:26 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 6:28:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:28:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:28:26 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 6:28:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:28:26 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 6:28:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 6:28:26 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 6:28:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:28:26 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 6:28:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:28:26 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 6:28:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:28:26 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 6:28:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:28:26 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 6:28:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:26 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 6:28:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:28:26 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:28:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:28:26 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 6:28:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:26 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 6:28:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:26 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 6:28:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:26 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 6:28:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:28:26 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 6:28:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:28:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:28:26 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:28:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:28:26 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 6:28:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:28:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:28:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:28:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:28:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 6:28:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 6:28:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 6:28:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 6:28:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 6:28:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 6:28:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 6:28:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 6:28:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:28:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 6:28:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 6:28:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:29 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:28:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:28:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The call to goog.scope must take only a single parameter.  It must be an anonymous function that itself takes no parameters.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                    ^

May 16, 2016 6:28:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 6:28:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 6:28:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:33 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 6:28:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:28:33 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 6:28:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:28:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 6:28:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:28:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:28:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:28:36 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 6:28:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:28:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 6:28:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:36 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 6:28:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:28:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 6:28:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 6:28:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:36 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:28:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:28:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 6:28:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 6:28:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:28:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 6:28:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:36 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:28:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:28:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 6:28:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 6:28:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:28:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:28:36 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 6:28:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:28:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 6:28:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 6:28:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 6:28:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:28:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 6:28:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:28:38 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 6:28:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:28:38 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 6:28:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:28:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 6:28:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 6:28:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:28:39 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:28:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:28:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 6:28:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 6:28:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 6:28:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 6:28:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:28:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 6:28:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:28:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:28:39 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:28:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:28:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 6:28:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:28:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:28:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:28:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:28:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 6:28:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 6:28:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 6:28:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 6:28:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 6:28:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 6:28:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 6:28:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 6:28:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:28:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 6:28:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 6:28:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The call to goog.scope must take only a single parameter.  It must be an anonymous function that itself takes no parameters.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                         ^

May 16, 2016 6:28:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:42 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:28:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:28:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 6:28:43 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 6:28:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:43 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 6:28:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:28:43 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 6:28:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:28:43 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 6:28:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:43 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:28:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:28:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:28:45 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 6:28:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:28:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 6:28:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:45 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 6:28:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:28:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 6:28:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 6:28:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:45 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:28:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:28:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 6:28:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 6:28:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:28:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 6:28:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:45 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:28:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:28:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 6:28:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 6:28:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:28:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:28:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 6:28:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:28:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 6:28:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 6:28:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 6:28:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:28:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 6:28:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:28:48 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 6:28:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:28:48 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 6:28:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:28:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 6:28:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 6:28:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:28:48 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:28:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:28:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 6:28:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 6:28:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 6:28:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 6:28:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:28:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 6:28:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:28:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:28:48 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:28:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:28:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 6:28:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:28:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:28:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:28:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:28:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 6:28:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 6:28:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 6:28:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 6:28:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 6:28:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 6:28:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 6:28:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 6:28:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:28:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 6:28:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 6:28:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:51 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:28:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:28:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The call to goog.scope must be alone in a single statement.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                         ^

May 16, 2016 6:28:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 6:28:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 6:28:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:52 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 6:28:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:28:54 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 6:28:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:28:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 6:28:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:28:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:28:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:28:55 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 6:28:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:28:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 6:28:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:55 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 6:28:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:28:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 6:28:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 6:28:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:55 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:28:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:28:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 6:28:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 6:28:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:28:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 6:28:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:55 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:28:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:28:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 6:28:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 6:28:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:28:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:28:57 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 6:28:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:28:57 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 6:28:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 6:28:57 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 6:28:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:28:57 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 6:28:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:28:57 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 6:28:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:28:57 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 6:28:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:28:57 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 6:28:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:57 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 6:28:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:28:57 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:28:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:28:57 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 6:28:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:57 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 6:28:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 6:28:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 6:28:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:28:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 6:28:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:28:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:28:58 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:28:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:28:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 6:28:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:28:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:28:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:29:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:29:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:29:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 6:29:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 6:29:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 6:29:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 6:29:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 6:29:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 6:29:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 6:29:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 6:29:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:29:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:29:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 6:29:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:29:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 6:29:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:29:00 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:29:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:29:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 6:29:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 6:29:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:29:04 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 6:29:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:29:04 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 6:29:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:29:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 6:29:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:29:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:29:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:29:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:29:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:29:04 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 6:29:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:29:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 6:29:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:29:04 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 6:29:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:29:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 6:29:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:29:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 6:29:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:29:04 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:29:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:29:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 6:29:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:29:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 6:29:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:29:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:29:07 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 6:29:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:29:07 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:29:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:29:07 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 6:29:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:29:07 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 6:29:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:29:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:29:07 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 6:29:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:29:07 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 6:29:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:29:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 6:29:07 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 6:29:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:29:07 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 6:29:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:29:07 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 6:29:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:29:07 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 6:29:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:29:07 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 6:29:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:29:07 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 6:29:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:29:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:29:07 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:29:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:29:07 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 6:29:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:29:07 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 6:29:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:29:07 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 6:29:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:29:07 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 6:29:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:29:07 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 6:29:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:29:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:29:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:29:09 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:29:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:29:09 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 6:29:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:29:09 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:29:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:29:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:29:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:29:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 6:29:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 6:29:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 6:29:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 6:29:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 6:29:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 6:29:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 6:29:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 6:29:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:29:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:29:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 6:29:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:29:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 6:29:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:29:10 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:29:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:29:10 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:29:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:30:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 6:30:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 6:30:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:30:03 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 6:30:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:30:03 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 6:30:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:30:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 6:30:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:30:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:30:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:30:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:30:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:30:05 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 6:30:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:30:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 6:30:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:30:05 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 6:30:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:30:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 6:30:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:30:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 6:30:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:30:06 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:30:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:30:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 6:30:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:30:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 6:30:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:30:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:30:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 6:30:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:30:08 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:30:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:30:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 6:30:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:30:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 6:30:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:30:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:30:08 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 6:30:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:30:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 6:30:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:30:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 6:30:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 6:30:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:30:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 6:30:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:30:11 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 6:30:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:30:11 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 6:30:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:30:11 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 6:30:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:30:11 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 6:30:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:30:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:30:11 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:30:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:30:11 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 6:30:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:30:11 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 6:30:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:30:11 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 6:30:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:30:11 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 6:30:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:30:11 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 6:30:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:30:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:30:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:30:13 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:30:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:30:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 6:30:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:30:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:30:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:30:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:30:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:30:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 6:30:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 6:30:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 6:30:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 6:30:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 6:30:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 6:30:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 6:30:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 6:30:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:30:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:30:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 6:30:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:30:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 6:30:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:30:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:30:14 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:30:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:30:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 6:30:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 6:30:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:30:36 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 6:30:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:30:36 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 6:30:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:30:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 6:30:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:30:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:30:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:30:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:30:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:30:37 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 6:30:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:30:37 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 6:30:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:30:37 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 6:30:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:30:37 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 6:30:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:30:37 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 6:30:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:30:39 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:30:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:30:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 6:30:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:30:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 6:30:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:30:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:30:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 6:30:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:30:39 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:30:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:30:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 6:30:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:30:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 6:30:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:30:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:30:41 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 6:30:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:30:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 6:30:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:30:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 6:30:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 6:30:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:30:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 6:30:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:30:41 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 6:30:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:30:41 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 6:30:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:30:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 6:30:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:30:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 6:30:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:30:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:30:42 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:30:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:30:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 6:30:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:30:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 6:30:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:30:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 6:30:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:30:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 6:30:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:30:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 6:30:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:30:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:30:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:30:42 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:30:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:30:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 6:30:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:30:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:30:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:30:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:30:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:30:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 6:30:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 6:30:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 6:30:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 6:30:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 6:30:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 6:30:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 6:30:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 6:30:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:30:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:30:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 6:30:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:30:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 6:30:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:30:47 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:30:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:30:47 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:30:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:31:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 6:31:11 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 6:31:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:31:11 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 6:31:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:31:11 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 6:31:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:31:11 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 6:31:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:31:11 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:31:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:31:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:31:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:31:12 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 6:31:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:31:12 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 6:31:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:31:12 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 6:31:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:31:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 6:31:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:31:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 6:31:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:31:14 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:31:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:31:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 6:31:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:31:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 6:31:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:31:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:31:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 6:31:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:31:14 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:31:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:31:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 6:31:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:31:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 6:31:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:31:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:31:16 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 6:31:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:31:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 6:31:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:31:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 6:31:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 6:31:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:31:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 6:31:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:31:16 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 6:31:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:31:16 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 6:31:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:31:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 6:31:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:31:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 6:31:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:31:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:31:17 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:31:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:31:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 6:31:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:31:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 6:31:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:31:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 6:31:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:31:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 6:31:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:31:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 6:31:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:31:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:31:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:31:19 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:31:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:31:19 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 6:31:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:31:19 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:31:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:31:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:31:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:31:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 6:31:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 6:31:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 6:31:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 6:31:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 6:31:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 6:31:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 6:31:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 6:31:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:31:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:31:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 6:31:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:31:22 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 6:31:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:31:22 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:31:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:31:22 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:31:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:31:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 6:31:26 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 6:31:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:31:26 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 6:31:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:31:26 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 6:31:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:31:26 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 6:31:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:31:26 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:31:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:31:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:31:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:31:29 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 6:31:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:31:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 6:31:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:31:29 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 6:31:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:31:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 6:31:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:31:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 6:31:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:31:29 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:31:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:31:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 6:31:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:31:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 6:31:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:31:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:31:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 6:31:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:31:29 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:31:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:31:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 6:31:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:31:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 6:31:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:31:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:31:29 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 6:31:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:31:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 6:31:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:31:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 6:31:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 6:31:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:31:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 6:31:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:31:32 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 6:31:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:31:32 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 6:31:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:31:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 6:31:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:31:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 6:31:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:31:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:31:32 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:31:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:31:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 6:31:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:31:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 6:31:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:31:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 6:31:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:31:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 6:31:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:31:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 6:31:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:31:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:31:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:31:32 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:31:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:31:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 6:31:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:31:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:31:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:31:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:31:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:31:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 6:31:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 6:31:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 6:31:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 6:31:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 6:31:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 6:31:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 6:31:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 6:31:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:31:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:31:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 6:31:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:31:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 6:31:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:31:35 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:31:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:31:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:31:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 6:31:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 6:31:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:31:36 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 6:31:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:31:38 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 6:31:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:31:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 6:31:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:31:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:31:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:31:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:31:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:31:39 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 6:31:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:31:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 6:31:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:31:39 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 6:31:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:31:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 6:31:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:31:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 6:31:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:31:39 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:31:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:31:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 6:31:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:31:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 6:31:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:31:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:31:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 6:31:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:31:39 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:31:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:31:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 6:31:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:31:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 6:31:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:31:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:31:39 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 6:31:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:31:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 6:31:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:31:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 6:31:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 6:31:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:31:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 6:31:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:31:41 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 6:31:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:31:41 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 6:31:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:31:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 6:31:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:31:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 6:31:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:31:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:31:41 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:31:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:31:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 6:31:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:31:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 6:31:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:31:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 6:31:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:31:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 6:31:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:31:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 6:31:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:31:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:31:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:31:42 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:31:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:31:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 6:31:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:31:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:31:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:31:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:31:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:31:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 6:31:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 6:31:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 6:31:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 6:31:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 6:31:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 6:31:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 6:31:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 6:31:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:31:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:31:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 6:31:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:31:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 6:31:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:31:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0: ERROR - The call to goog.scope must be alone in a single statement.

May 16, 2016 6:31:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0: ERROR - The call to goog.scope must take only a single parameter.  It must be an anonymous function that itself takes no parameters.

May 16, 2016 6:31:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The call to goog.scope must be alone in a single statement.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
^

May 16, 2016 6:31:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The call to goog.scope must take only a single parameter.  It must be an anonymous function that itself takes no parameters.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
^

May 16, 2016 6:31:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The call to goog.scope must be alone in a single statement.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
              ^

May 16, 2016 6:31:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The call to goog.scope must take only a single parameter.  It must be an anonymous function that itself takes no parameters.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
              ^

May 16, 2016 6:31:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The call to goog.scope must be alone in a single statement.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                  ^

May 16, 2016 6:31:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The call to goog.scope must take only a single parameter.  It must be an anonymous function that itself takes no parameters.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                  ^

May 16, 2016 6:31:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The call to goog.scope must be alone in a single statement.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                      ^

May 16, 2016 6:31:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The call to goog.scope must take only a single parameter.  It must be an anonymous function that itself takes no parameters.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                      ^

May 16, 2016 6:31:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The call to goog.scope must be alone in a single statement.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                       ^

May 16, 2016 6:31:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The call to goog.scope must take only a single parameter.  It must be an anonymous function that itself takes no parameters.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                       ^

May 16, 2016 6:31:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The call to goog.scope must be alone in a single statement.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                         ^

May 16, 2016 6:31:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The call to goog.scope must take only a single parameter.  It must be an anonymous function that itself takes no parameters.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                         ^

May 16, 2016 6:31:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The call to goog.scope must be alone in a single statement.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                             ^

May 16, 2016 6:31:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The call to goog.scope must take only a single parameter.  It must be an anonymous function that itself takes no parameters.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                             ^

May 16, 2016 6:31:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The call to goog.scope must be alone in a single statement.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                              ^

May 16, 2016 6:31:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The call to goog.scope must take only a single parameter.  It must be an anonymous function that itself takes no parameters.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                              ^

May 16, 2016 6:31:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The call to goog.scope must be alone in a single statement.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                ^

May 16, 2016 6:31:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The call to goog.scope must take only a single parameter.  It must be an anonymous function that itself takes no parameters.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                ^

May 16, 2016 6:31:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The call to goog.scope must be alone in a single statement.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                  ^

May 16, 2016 6:31:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The call to goog.scope must take only a single parameter.  It must be an anonymous function that itself takes no parameters.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                  ^

May 16, 2016 6:31:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The call to goog.scope must be alone in a single statement.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                      ^

May 16, 2016 6:31:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The call to goog.scope must take only a single parameter.  It must be an anonymous function that itself takes no parameters.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                      ^

May 16, 2016 6:31:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The call to goog.scope must be alone in a single statement.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                         ^

May 16, 2016 6:31:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The call to goog.scope must take only a single parameter.  It must be an anonymous function that itself takes no parameters.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                         ^

May 16, 2016 6:31:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The call to goog.scope must be alone in a single statement.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                              ^

May 16, 2016 6:31:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The call to goog.scope must take only a single parameter.  It must be an anonymous function that itself takes no parameters.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                              ^

May 16, 2016 6:31:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The call to goog.scope must be alone in a single statement.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                    ^

May 16, 2016 6:31:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The call to goog.scope must take only a single parameter.  It must be an anonymous function that itself takes no parameters.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                    ^

May 16, 2016 6:31:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The call to goog.scope must be alone in a single statement.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                            ^

May 16, 2016 6:31:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The call to goog.scope must take only a single parameter.  It must be an anonymous function that itself takes no parameters.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                            ^

May 16, 2016 6:31:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The call to goog.scope must be alone in a single statement.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                               ^

May 16, 2016 6:31:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The call to goog.scope must take only a single parameter.  It must be an anonymous function that itself takes no parameters.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                               ^

May 16, 2016 6:31:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The call to goog.scope must be alone in a single statement.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                  ^

May 16, 2016 6:31:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The call to goog.scope must take only a single parameter.  It must be an anonymous function that itself takes no parameters.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                  ^

May 16, 2016 6:31:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The call to goog.scope must be alone in a single statement.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                      ^

May 16, 2016 6:31:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The call to goog.scope must take only a single parameter.  It must be an anonymous function that itself takes no parameters.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                      ^

May 16, 2016 6:31:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The call to goog.scope must be alone in a single statement.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                          ^

May 16, 2016 6:31:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The call to goog.scope must take only a single parameter.  It must be an anonymous function that itself takes no parameters.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                          ^

May 16, 2016 6:31:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The call to goog.scope must be alone in a single statement.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                            ^

May 16, 2016 6:31:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The call to goog.scope must take only a single parameter.  It must be an anonymous function that itself takes no parameters.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                            ^

May 16, 2016 6:31:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The call to goog.scope must be alone in a single statement.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                ^

May 16, 2016 6:31:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The call to goog.scope must take only a single parameter.  It must be an anonymous function that itself takes no parameters.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                ^

May 16, 2016 6:31:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The call to goog.scope must be alone in a single statement.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                    ^

May 16, 2016 6:31:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The call to goog.scope must take only a single parameter.  It must be an anonymous function that itself takes no parameters.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                    ^

May 16, 2016 6:31:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The call to goog.scope must be alone in a single statement.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                        ^

May 16, 2016 6:31:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The call to goog.scope must take only a single parameter.  It must be an anonymous function that itself takes no parameters.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                        ^

May 16, 2016 6:31:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The call to goog.scope must be alone in a single statement.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                          ^

May 16, 2016 6:31:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The call to goog.scope must take only a single parameter.  It must be an anonymous function that itself takes no parameters.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                          ^

May 16, 2016 6:31:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The call to goog.scope must be alone in a single statement.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                        ^

May 16, 2016 6:31:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The call to goog.scope must take only a single parameter.  It must be an anonymous function that itself takes no parameters.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                        ^

May 16, 2016 6:31:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The call to goog.scope must be alone in a single statement.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                          ^

May 16, 2016 6:31:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The call to goog.scope must take only a single parameter.  It must be an anonymous function that itself takes no parameters.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                          ^

May 16, 2016 6:31:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The call to goog.scope must be alone in a single statement.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                                                             ^

May 16, 2016 6:31:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The call to goog.scope must take only a single parameter.  It must be an anonymous function that itself takes no parameters.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                                                             ^

May 16, 2016 6:31:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The call to goog.scope must be alone in a single statement.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                                                               ^

May 16, 2016 6:31:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The call to goog.scope must take only a single parameter.  It must be an anonymous function that itself takes no parameters.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                                                               ^

May 16, 2016 6:31:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The call to goog.scope must be alone in a single statement.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                                                                        ^

May 16, 2016 6:31:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The call to goog.scope must take only a single parameter.  It must be an anonymous function that itself takes no parameters.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                                                                        ^

May 16, 2016 6:31:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The call to goog.scope must be alone in a single statement.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                                                                                ^

May 16, 2016 6:31:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The call to goog.scope must take only a single parameter.  It must be an anonymous function that itself takes no parameters.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                                                                                ^

May 16, 2016 6:31:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The call to goog.scope must be alone in a single statement.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                                                                                 ^

May 16, 2016 6:31:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The call to goog.scope must take only a single parameter.  It must be an anonymous function that itself takes no parameters.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                                                                                 ^

May 16, 2016 6:31:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The call to goog.scope must be alone in a single statement.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                                                                                    ^

May 16, 2016 6:31:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - The call to goog.scope must take only a single parameter.  It must be an anonymous function that itself takes no parameters.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                                                                                    ^

May 16, 2016 6:31:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 66 error(s), 0 warning(s)
May 16, 2016 6:31:44 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:31:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 88.9% typed
May 16, 2016 6:31:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 6:31:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 6:31:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:31:48 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 6:31:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:31:48 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 6:31:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:31:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 6:31:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:31:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:31:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:31:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:31:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:31:50 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 6:31:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:31:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 6:31:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:31:50 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 6:31:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:31:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 6:31:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:31:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 6:31:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:31:50 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:31:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:31:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 6:31:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:31:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 6:31:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:31:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:31:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 6:31:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:31:51 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:31:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:31:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 6:31:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:31:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 6:31:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:31:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:31:51 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 6:31:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:31:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 6:31:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:31:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 6:31:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 6:31:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:31:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 6:31:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:31:51 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 6:31:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:31:54 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 6:31:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:31:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 6:31:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:31:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 6:31:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:31:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:31:54 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:31:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:31:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 6:31:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:31:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 6:31:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:31:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 6:31:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:31:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 6:31:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:31:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 6:31:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:31:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:31:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:31:54 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:31:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:31:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 6:31:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:31:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:31:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:31:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:31:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:31:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 6:31:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 6:31:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 6:31:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 6:31:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 6:31:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 6:31:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 6:31:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 6:31:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:31:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:31:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 6:31:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:31:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 6:31:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:31:57 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:31:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:31:57 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:31:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 88% typed
May 16, 2016 6:31:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 6:31:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 6:31:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:31:58 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 6:31:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:32:00 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 6:32:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:32:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 6:32:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:32:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:32:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:32:00 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 6:32:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:32:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 6:32:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:00 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 6:32:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:32:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 6:32:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 6:32:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:01 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:32:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:32:01 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 6:32:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:01 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 6:32:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:32:01 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 6:32:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:01 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:32:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:32:01 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 6:32:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:01 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 6:32:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:32:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:32:03 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 6:32:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:32:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 6:32:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 6:32:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 6:32:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:32:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 6:32:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:32:03 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 6:32:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:32:03 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 6:32:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:32:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 6:32:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 6:32:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:32:03 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:32:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:32:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 6:32:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 6:32:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 6:32:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 6:32:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:32:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 6:32:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:32:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:32:04 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:32:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:32:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 6:32:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:04 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:32:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:32:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:32:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:32:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 6:32:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 6:32:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 6:32:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 6:32:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 6:32:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 6:32:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 6:32:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 6:32:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:32:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 6:32:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 6:32:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:07 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:32:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:32:07 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:32:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:32:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 6:32:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 6:32:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:10 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 6:32:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:32:10 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 6:32:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:32:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 6:32:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:32:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:32:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:32:11 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 6:32:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:32:11 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 6:32:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:11 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 6:32:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:32:11 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 6:32:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:11 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 6:32:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:11 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:32:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:32:11 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 6:32:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:11 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 6:32:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:32:11 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 6:32:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:11 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:32:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:32:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 6:32:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 6:32:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:32:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:32:13 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 6:32:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:32:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 6:32:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 6:32:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 6:32:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:32:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 6:32:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:32:13 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 6:32:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:32:13 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 6:32:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:32:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 6:32:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 6:32:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:32:13 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:32:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:32:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 6:32:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 6:32:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 6:32:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 6:32:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:32:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 6:32:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:32:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:32:16 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:32:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:32:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 6:32:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:32:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:32:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:32:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:32:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 6:32:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 6:32:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 6:32:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 6:32:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 6:32:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 6:32:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 6:32:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 6:32:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:32:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 6:32:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 6:32:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:16 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:32:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:32:16 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:32:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:32:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 6:32:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 6:32:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:20 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 6:32:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:32:20 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 6:32:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:32:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 6:32:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:32:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:32:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:32:20 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 6:32:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:32:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 6:32:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:20 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 6:32:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:32:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 6:32:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 6:32:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:20 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:32:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:32:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 6:32:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 6:32:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:32:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 6:32:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:23 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:32:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:32:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 6:32:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 6:32:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:32:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:32:23 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 6:32:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:32:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 6:32:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 6:32:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 6:32:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:32:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 6:32:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:32:23 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 6:32:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:32:23 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 6:32:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:32:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 6:32:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 6:32:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:32:23 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:32:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:32:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 6:32:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 6:32:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 6:32:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 6:32:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:32:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 6:32:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:32:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:32:25 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:32:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:32:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 6:32:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:32:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:32:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:32:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:32:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 6:32:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 6:32:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 6:32:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 6:32:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 6:32:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 6:32:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 6:32:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 6:32:26 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:32:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:26 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 6:32:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:26 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 6:32:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:26 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: :1: ERROR - The local variable a is in a goog.scope and is not an alias.

May 16, 2016 6:32:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:32:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 6:32:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 6:32:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:32 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 6:32:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:32:32 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 6:32:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:32:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 6:32:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:32:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:32:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:32:33 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 6:32:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:32:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 6:32:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:33 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 6:32:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:32:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 6:32:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 6:32:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:33 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:32:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:32:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 6:32:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 6:32:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:32:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 6:32:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:33 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:32:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:32:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 6:32:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 6:32:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:32:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:32:35 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 6:32:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:32:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 6:32:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 6:32:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 6:32:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:32:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 6:32:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:32:35 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 6:32:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:32:35 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 6:32:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:32:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 6:32:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 6:32:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:32:35 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:32:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:32:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 6:32:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 6:32:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 6:32:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 6:32:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:32:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 6:32:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:32:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:32:38 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:32:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:32:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 6:32:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:32:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:32:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:32:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:32:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 6:32:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 6:32:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 6:32:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 6:32:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 6:32:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 6:32:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 6:32:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 6:32:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:32:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 6:32:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 6:32:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:39 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:32:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 88% typed
May 16, 2016 6:32:39 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:32:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:32:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 6:32:43 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 6:32:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 6:32:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:32:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 6:32:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:32:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 6:32:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:32:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:32:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:32:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 6:32:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:32:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 6:32:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 6:32:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:32:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 6:32:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 6:32:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:32:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:32:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 6:32:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 6:32:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:32:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 6:32:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:32:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:32:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 6:32:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 6:32:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:32:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:32:48 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 6:32:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:32:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 6:32:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 6:32:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 6:32:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:32:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 6:32:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:32:48 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 6:32:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:32:49 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 6:32:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:32:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 6:32:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 6:32:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:32:49 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:32:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:32:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 6:32:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 6:32:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 6:32:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 6:32:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:32:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 6:32:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:32:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:32:52 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:32:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:32:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 6:32:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:32:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:32:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:32:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:32:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 6:32:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 6:32:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 6:32:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 6:32:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 6:32:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 6:32:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 6:32:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 6:32:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:32:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 6:32:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 6:32:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:32:52 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:32:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:33:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 6:33:02 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 6:33:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:33:02 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 6:33:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:33:02 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 6:33:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:33:02 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 6:33:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:33:02 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:33:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:33:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:33:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:33:05 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 6:33:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:33:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 6:33:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:33:05 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 6:33:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:33:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 6:33:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:33:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 6:33:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:33:05 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:33:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:33:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 6:33:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:33:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 6:33:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:33:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:33:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 6:33:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:33:05 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:33:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:33:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 6:33:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:33:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 6:33:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:33:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:33:05 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 6:33:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:33:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 6:33:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:33:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 6:33:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 6:33:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:33:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 6:33:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:33:08 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 6:33:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:33:08 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 6:33:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:33:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 6:33:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:33:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 6:33:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:33:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:33:08 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:33:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:33:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 6:33:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:33:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 6:33:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:33:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 6:33:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:33:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 6:33:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:33:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 6:33:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:33:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:33:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:33:08 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:33:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:33:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 6:33:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:33:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:33:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:33:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:33:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:33:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 6:33:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 6:33:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 6:33:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 6:33:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 6:33:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 6:33:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 6:33:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 6:33:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:33:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:33:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 6:33:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:33:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 6:33:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:33:11 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:33:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:33:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:33:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 6:33:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 6:33:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:33:24 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 6:33:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:33:25 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 6:33:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:33:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 6:33:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:33:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:33:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:33:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:33:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:33:27 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 6:33:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:33:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 6:33:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:33:27 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 6:33:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:33:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 6:33:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:33:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 6:33:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:33:27 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:33:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:33:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 6:33:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:33:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 6:33:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:33:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:33:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 6:33:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:33:27 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:33:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:33:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 6:33:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:33:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 6:33:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:33:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:33:27 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 6:33:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:33:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 6:33:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:33:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 6:33:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 6:33:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:33:28 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 6:33:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:33:30 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 6:33:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:33:30 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 6:33:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:33:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 6:33:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:33:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 6:33:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:33:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:33:30 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:33:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:33:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 6:33:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:33:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 6:33:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:33:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 6:33:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:33:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 6:33:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:33:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 6:33:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:33:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:33:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:33:30 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:33:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:33:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 6:33:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:33:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:33:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:33:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:33:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:33:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 6:33:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 6:33:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 6:33:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 6:33:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 6:33:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 6:33:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 6:33:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 6:33:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:33:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:33:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 6:33:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:33:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 6:33:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:33:33 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:33:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:33:33 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:33:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:33:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 6:33:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 6:33:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:33:36 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 6:33:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:33:37 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 6:33:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:33:37 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 6:33:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:33:37 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:33:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:33:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:33:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:33:39 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 6:33:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:33:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 6:33:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:33:39 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 6:33:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:33:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 6:33:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:33:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 6:33:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:33:39 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:33:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:33:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 6:33:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:33:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 6:33:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:33:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:33:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 6:33:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:33:40 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:33:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:33:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 6:33:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:33:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 6:33:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:33:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:33:40 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 6:33:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:33:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 6:33:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:33:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 6:33:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 6:33:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:33:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 6:33:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:33:42 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 6:33:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:33:42 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 6:33:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:33:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 6:33:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:33:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 6:33:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:33:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:33:42 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:33:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:33:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 6:33:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:33:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 6:33:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:33:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 6:33:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:33:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 6:33:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:33:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 6:33:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:33:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:33:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:33:42 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:33:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:33:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 6:33:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:33:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:33:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:33:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:33:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:33:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 6:33:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 6:33:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 6:33:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 6:33:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 6:33:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 6:33:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 6:33:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 6:33:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:33:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:33:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 6:33:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:33:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 6:33:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:33:45 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:33:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:34:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 6:34:09 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 6:34:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:34:09 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 6:34:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:34:09 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 6:34:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:34:09 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 6:34:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:34:09 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:34:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:34:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:34:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:34:11 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 6:34:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:34:11 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 6:34:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:34:11 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 6:34:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:34:11 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 6:34:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:34:11 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 6:34:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:34:11 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:34:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:34:11 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 6:34:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:34:11 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 6:34:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:34:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:34:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 6:34:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:34:14 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:34:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:34:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 6:34:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:34:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 6:34:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:34:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:34:14 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 6:34:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:34:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 6:34:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:34:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 6:34:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 6:34:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:34:14 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 6:34:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:34:14 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 6:34:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:34:16 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 6:34:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:34:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 6:34:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:34:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 6:34:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:34:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:34:16 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:34:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:34:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 6:34:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:34:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 6:34:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:34:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 6:34:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:34:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 6:34:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:34:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 6:34:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:34:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:34:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:34:17 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:34:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:34:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 6:34:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:34:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:34:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:34:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:34:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:34:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 6:34:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 6:34:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 6:34:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 6:34:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 6:34:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 6:34:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 6:34:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 6:34:19 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:34:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:34:19 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 6:34:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:34:19 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 6:34:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:34:19 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:34:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:34:19 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:34:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:34:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 6:34:26 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 6:34:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:34:26 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 6:34:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:34:26 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 6:34:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:34:26 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 6:34:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:34:26 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:34:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:34:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:34:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:34:29 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 6:34:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:34:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 6:34:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:34:29 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 6:34:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:34:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 6:34:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:34:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 6:34:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:34:29 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:34:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:34:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 6:34:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:34:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 6:34:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:34:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:34:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 6:34:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:34:29 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:34:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:34:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 6:34:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:34:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 6:34:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:34:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:34:29 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 6:34:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:34:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 6:34:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:34:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 6:34:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 6:34:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:34:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 6:34:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:34:31 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 6:34:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:34:31 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 6:34:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:34:31 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 6:34:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:34:31 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 6:34:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:34:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:34:31 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:34:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:34:31 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 6:34:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:34:31 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 6:34:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:34:31 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 6:34:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:34:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 6:34:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:34:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 6:34:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:34:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:34:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:34:32 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:34:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:34:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 6:34:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:34:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:34:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:34:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:34:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:34:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 6:34:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 6:34:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 6:34:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 6:34:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 6:34:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 6:34:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 6:34:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 6:34:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:34:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:34:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 6:34:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:34:34 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 6:34:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:34:34 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:34:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:34:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 6:34:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 6:34:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:34:48 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 6:34:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:34:48 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 6:34:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:34:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 6:34:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:34:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:34:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:34:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:34:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:34:48 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 6:34:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:34:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 6:34:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:34:48 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 6:34:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:34:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 6:34:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:34:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 6:34:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:34:48 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:34:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:34:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 6:34:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:34:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 6:34:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:34:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:34:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 6:34:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:34:51 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:34:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:34:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 6:34:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:34:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 6:34:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:34:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:34:51 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 6:34:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:34:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 6:34:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:34:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 6:34:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 6:34:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:34:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 6:34:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:34:51 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 6:34:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:34:51 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 6:34:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:34:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 6:34:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:34:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 6:34:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:34:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:34:54 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:34:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:34:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 6:34:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:34:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 6:34:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:34:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 6:34:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:34:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 6:34:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:34:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 6:34:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:34:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:34:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:34:54 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:34:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:34:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 6:34:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:34:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:34:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:34:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:34:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:34:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 6:34:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 6:34:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 6:34:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 6:34:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 6:34:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 6:34:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 6:34:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 6:34:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:34:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:34:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 6:34:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:34:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 6:34:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:34:57 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:34:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:34:57 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:34:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:34:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 6:35:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 6:35:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:00 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 6:35:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:35:00 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 6:35:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:35:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 6:35:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:35:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:35:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:35:00 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 6:35:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:35:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 6:35:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:00 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 6:35:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:35:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 6:35:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 6:35:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:00 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:35:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:35:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 6:35:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 6:35:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:35:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 6:35:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:00 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:35:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:35:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 6:35:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 6:35:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:35:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:35:03 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 6:35:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:35:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 6:35:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 6:35:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 6:35:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:35:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 6:35:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:35:03 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 6:35:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:35:03 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 6:35:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:35:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 6:35:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 6:35:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:35:03 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:35:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:35:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 6:35:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 6:35:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 6:35:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 6:35:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:35:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 6:35:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:35:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:35:06 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:35:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:35:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 6:35:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:35:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:35:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:35:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:35:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 6:35:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 6:35:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 6:35:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 6:35:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 6:35:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 6:35:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 6:35:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 6:35:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:35:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 6:35:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 6:35:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:08 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:35:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:35:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 6:35:12 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 6:35:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:12 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 6:35:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:35:12 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 6:35:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:35:12 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 6:35:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:12 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:35:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:35:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:35:15 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 6:35:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:35:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 6:35:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:15 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 6:35:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:35:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 6:35:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 6:35:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:15 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:35:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:35:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 6:35:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 6:35:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:35:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 6:35:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:15 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:35:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:35:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 6:35:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 6:35:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:35:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:35:15 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 6:35:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:35:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 6:35:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 6:35:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 6:35:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:35:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 6:35:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:35:17 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 6:35:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:35:17 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 6:35:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:35:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 6:35:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:17 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 6:35:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:35:17 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:35:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:35:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 6:35:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 6:35:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 6:35:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 6:35:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:35:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 6:35:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:35:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:35:18 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:35:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:35:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 6:35:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:35:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:35:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:35:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:35:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 6:35:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 6:35:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 6:35:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 6:35:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 6:35:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 6:35:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 6:35:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 6:35:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:35:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 6:35:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 6:35:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:35:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:35:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 6:35:22 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 6:35:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:22 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 6:35:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:35:22 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 6:35:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:35:22 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 6:35:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:22 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:35:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:35:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:35:24 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 6:35:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:35:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 6:35:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:24 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 6:35:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:35:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 6:35:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 6:35:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:25 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:35:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:35:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 6:35:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 6:35:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:35:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 6:35:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:25 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:35:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:35:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 6:35:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 6:35:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:35:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:35:25 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 6:35:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:35:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 6:35:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 6:35:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 6:35:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:35:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 6:35:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:35:27 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 6:35:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:35:27 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 6:35:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:35:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 6:35:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 6:35:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:35:27 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:35:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:35:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 6:35:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 6:35:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 6:35:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 6:35:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:35:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 6:35:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:35:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:35:28 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:35:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:35:28 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 6:35:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:28 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:35:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:35:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:35:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:35:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 6:35:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 6:35:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 6:35:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 6:35:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 6:35:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 6:35:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 6:35:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 6:35:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:35:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 6:35:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 6:35:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 6:35:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 6:35:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:39 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 6:35:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:35:40 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 6:35:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:35:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 6:35:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:35:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:35:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:35:40 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 6:35:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:35:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 6:35:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:40 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 6:35:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:35:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 6:35:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 6:35:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:40 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:35:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:35:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 6:35:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 6:35:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:35:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 6:35:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:40 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:35:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:35:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 6:35:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 6:35:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:35:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:35:42 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 6:35:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:35:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 6:35:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 6:35:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 6:35:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:35:42 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 6:35:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:35:43 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 6:35:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:35:43 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 6:35:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:35:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 6:35:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 6:35:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:35:45 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:35:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:35:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 6:35:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 6:35:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 6:35:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 6:35:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:35:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 6:35:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:35:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:35:45 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:35:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:35:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 6:35:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:35:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:35:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:35:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:35:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 6:35:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 6:35:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 6:35:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 6:35:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 6:35:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 6:35:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 6:35:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 6:35:45 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:35:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 6:35:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 6:35:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:48 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:35:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:35:48 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:35:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:35:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 6:35:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 6:35:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:55 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 6:35:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:35:55 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 6:35:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:35:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 6:35:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:57 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:35:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:35:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:35:57 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 6:35:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:35:57 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 6:35:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:57 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 6:35:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:35:57 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 6:35:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:57 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 6:35:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:57 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:35:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:35:57 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 6:35:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:57 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 6:35:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:35:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 6:35:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:58 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:35:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:35:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 6:35:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 6:35:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:35:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:35:58 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 6:35:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:35:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 6:35:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:35:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 6:36:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 6:36:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:36:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 6:36:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:36:00 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 6:36:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:36:00 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 6:36:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:36:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 6:36:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:36:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 6:36:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:36:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:36:00 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:36:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:36:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 6:36:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:36:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 6:36:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:36:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 6:36:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:36:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 6:36:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:36:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 6:36:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:36:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:36:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:36:00 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:36:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:36:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 6:36:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:36:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:36:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:36:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:36:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:36:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 6:36:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 6:36:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 6:36:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 6:36:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 6:36:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 6:36:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 6:36:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 6:36:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:36:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:36:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 6:36:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:36:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 6:36:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:36:03 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:36:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:36:03 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:36:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:36:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 6:36:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 6:36:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:36:12 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 6:36:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:36:12 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 6:36:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:36:12 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 6:36:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:36:12 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:36:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:36:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:36:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:36:13 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 6:36:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:36:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 6:36:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:36:13 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 6:36:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:36:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 6:36:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:36:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 6:36:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:36:13 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:36:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:36:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 6:36:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:36:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 6:36:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:36:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:36:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 6:36:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:36:13 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:36:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:36:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 6:36:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:36:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 6:36:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:36:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:36:15 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 6:36:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:36:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 6:36:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:36:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 6:36:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 6:36:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:36:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 6:36:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:36:15 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 6:36:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:36:15 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 6:36:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:36:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 6:36:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:36:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 6:36:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:36:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:36:18 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:36:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:36:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 6:36:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:36:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 6:36:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:36:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 6:36:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:36:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 6:36:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:36:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 6:36:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:36:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:36:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:36:18 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:36:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:36:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 6:36:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:36:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:36:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:36:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:36:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:36:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 6:36:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 6:36:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 6:36:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 6:36:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 6:36:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 6:36:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 6:36:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 6:36:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:36:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:36:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 6:36:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:36:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 6:36:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:36:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:36:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:36:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:36:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 6:36:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 6:36:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:36:27 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 6:36:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:36:27 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 6:36:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:36:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 6:36:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:36:28 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:36:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:36:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:36:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:36:30 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 6:36:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:36:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 6:36:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:36:30 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 6:36:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:36:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 6:36:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:36:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 6:36:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:36:30 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:36:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:36:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 6:36:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:36:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 6:36:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:36:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:36:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 6:36:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:36:30 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:36:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:36:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 6:36:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:36:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 6:36:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:36:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:36:30 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 6:36:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:36:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 6:36:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:36:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 6:36:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 6:36:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:36:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 6:36:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:36:30 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 6:36:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:36:30 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 6:36:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:36:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 6:36:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:36:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 6:36:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:36:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:36:33 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:36:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:36:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 6:36:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:36:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 6:36:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:36:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 6:36:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:36:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 6:36:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:36:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 6:36:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:36:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:36:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:36:33 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:36:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:36:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 6:36:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:36:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:36:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:36:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:36:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:36:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 6:36:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 6:36:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 6:36:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 6:36:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 6:36:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 6:36:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 6:36:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 6:36:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:36:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:36:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 6:36:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:36:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 6:36:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:36:36 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:36:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:36:36 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:36:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:36:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 6:36:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 6:36:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:36:49 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 6:36:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:36:49 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 6:36:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:36:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 6:36:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:36:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:36:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:36:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:36:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:36:49 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 6:36:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:36:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 6:36:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:36:49 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 6:36:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:36:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 6:36:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:36:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 6:36:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:36:49 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:36:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:36:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 6:36:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:36:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 6:36:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:36:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:36:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 6:36:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:36:51 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:36:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:36:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 6:36:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:36:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 6:36:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:36:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:36:51 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 6:36:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:36:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 6:36:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:36:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 6:36:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 6:36:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:36:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 6:36:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:36:52 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 6:36:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:36:52 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 6:36:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:36:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 6:36:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:36:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 6:36:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:36:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:36:54 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:36:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:36:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 6:36:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:36:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 6:36:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:36:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 6:36:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:36:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 6:36:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:36:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 6:36:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:36:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:36:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:36:54 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:36:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:36:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 6:36:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:36:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:36:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:36:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:36:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:36:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 6:36:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 6:36:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 6:36:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 6:36:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 6:36:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 6:36:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 6:36:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 6:36:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:36:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:36:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 6:36:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:36:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 6:36:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:36:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:36:57 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:36:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:37:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 6:37:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 6:37:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:37:10 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 6:37:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:37:10 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 6:37:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:37:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 6:37:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:37:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:37:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:37:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:37:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:37:10 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 6:37:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:37:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 6:37:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:37:10 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 6:37:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:37:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 6:37:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:37:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 6:37:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:37:10 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:37:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:37:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 6:37:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:37:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 6:37:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:37:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:37:10 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 6:37:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:37:12 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:37:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:37:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 6:37:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:37:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 6:37:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:37:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:37:13 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 6:37:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:37:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 6:37:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:37:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 6:37:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 6:37:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:37:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 6:37:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:37:13 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 6:37:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:37:13 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 6:37:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:37:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 6:37:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:37:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 6:37:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:37:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:37:16 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:37:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:37:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 6:37:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:37:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 6:37:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:37:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 6:37:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:37:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 6:37:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:37:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 6:37:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:37:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:37:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:37:16 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:37:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:37:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 6:37:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:37:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:37:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:37:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:37:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:37:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 6:37:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 6:37:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 6:37:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 6:37:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 6:37:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 6:37:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 6:37:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 6:37:16 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:37:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:37:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 6:37:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:37:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 6:37:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:37:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:37:19 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:37:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:37:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 6:37:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 6:37:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:37:52 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 6:37:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:37:52 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 6:37:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:37:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 6:37:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:37:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:37:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:37:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:37:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 6:37:52 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 6:37:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:37:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 6:37:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:37:52 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 6:37:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:37:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 6:37:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:37:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 6:37:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:37:55 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:37:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:37:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 6:37:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:37:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 6:37:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:37:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:37:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 6:37:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:37:55 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:37:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:37:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 6:37:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:37:55 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 6:37:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:37:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:37:58 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 6:37:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:37:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 6:37:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:37:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 6:37:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 6:37:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:37:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 6:37:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:37:58 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 6:37:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 6:37:58 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 6:37:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:37:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 6:37:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:37:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 6:37:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:37:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 6:37:58 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 6:37:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:37:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 6:37:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:37:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 6:37:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:37:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
    ^

May 16, 2016 6:37:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:37:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 6:37:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:37:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 6:37:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:37:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:37:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 6:37:58 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:37:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:37:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 6:37:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:37:58 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 6:37:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 6:38:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:38:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 6:38:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 6:38:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 6:38:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 6:38:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 6:38:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 6:38:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 6:38:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 6:38:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 6:38:01 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 6:38:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:38:01 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 6:38:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:38:01 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 6:38:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 6:38:03 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:38:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 6:38:03 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type b.c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 6:38:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
Exception in thread "main" java.lang.NoClassDefFoundError: spoon/reflect/factory/ClassFactory
	at spoon.reflect.factory.FactoryImpl.Class(FactoryImpl.java:81)
	at fr.inria.lille.repair.nopol.NoPolLauncher.displayResult(NoPolLauncher.java:100)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:90)
	at fr.inria.lille.repair.Main.main(Main.java:61)
Caused by: java.lang.ClassNotFoundException: spoon.reflect.factory.ClassFactory
	at java.net.URLClassLoader$1.run(URLClassLoader.java:363)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:355)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:354)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:425)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:308)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	... 4 more
Caused by: java.util.zip.ZipException: error reading zip file
	at java.util.zip.ZipFile.read(Native Method)
	at java.util.zip.ZipFile.access$1400(ZipFile.java:56)
	at java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:679)
	at java.util.zip.ZipFile$ZipFileInflaterInputStream.fill(ZipFile.java:415)
	at java.util.zip.InflaterInputStream.read(InflaterInputStream.java:158)
	at sun.misc.Resource.getBytes(Resource.java:124)
	at java.net.URLClassLoader.defineClass(URLClassLoader.java:444)
	at java.net.URLClassLoader.access$100(URLClassLoader.java:71)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:361)
	... 10 more

real	16m45.928s
user	89m43.832s
sys	0m22.292s
