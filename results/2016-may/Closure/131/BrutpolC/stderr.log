Running ant (compile)...................................................... OK
Running ant (compile.tests)................................................ OK
mkdir: cannot create directory ‘lib/’: File exists
cp: cannot stat ‘/home/tdurieux/defects4j/framework/projects/Closure/lib/*’: No such file or directory
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8
May 16, 2016 7:27:43 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:27:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:27:43 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:27:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:27:43 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:27:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:27:43 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:27:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:27:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:27:43 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:27:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:27:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:27:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:27:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:27:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:27:54 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 7:27:54 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 7:27:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 100% typed
May 16, 2016 7:27:54 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 7:27:54 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 7:27:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 100% typed
May 16, 2016 7:27:54 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 7:27:54 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 7:27:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 100% typed
May 16, 2016 7:30:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - "foo" is not a valid JS property name
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                            ^

May 16, 2016 7:30:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:30:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - "foo" is not a valid JS property name
var goog = {}; goog.provide('foo.bar'); goog.provide('foo.bar.baz'); /** @constructor */ foo.bar = function() {};/** @constructor */ foo.bar.baz = function() {};
                            ^

May 16, 2016 7:30:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - "foo" is not a valid JS property name
var goog = {}; goog.provide('foo.bar'); goog.provide('foo.bar.baz'); /** @constructor */ foo.bar = function() {};/** @constructor */ foo.bar.baz = function() {};
                                                     ^

May 16, 2016 7:30:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:30:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - "foo" is not a valid JS property name
var goog = {}; goog.provide('foo.Bar'); var foo = {}; foo.Bar = {};
                            ^

May 16, 2016 7:30:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:30:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - "foo" is not a valid JS property name
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                            ^

May 16, 2016 7:30:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:30:18 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - "foo" is not a valid JS property name
var goog = {}; goog.provide('foo.Bar'); foo = {}; foo.Bar = {};
                            ^

May 16, 2016 7:30:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:30:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - "Foo" is not a valid JS property name
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @constructor */ Foo = function() {};var x = new Foo();
                                                                                                            ^

May 16, 2016 7:30:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:32:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - "am" is not a valid JS property name
var goog; goog.provide('i.am.on.a.Horse');i.am.on.a.Horse = function() {};i.am.on.a.Horse.prototype.x = function() {};i.am.on.a.Boat.prototype.y = function() {}
                       ^

May 16, 2016 7:32:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:33:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace never provided
goog.require('goog.beer');
^

May 16, 2016 7:33:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - "goog" is not a valid JS property name
goog.provide('goog.beer');
             ^

May 16, 2016 7:33:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:33:59 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 7:33:59 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 7:33:59 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: in1:1: WARNING - Function goog.provide: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var goog = {};goog.provide = function() {};goog.require = function() {};goog.provide('goog.dom');goog.require('goog.dom');
                                                                        ^

May 16, 2016 7:33:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: in1:1: ERROR - "goog" is not a valid JS property name
var goog = {};goog.provide = function() {};goog.require = function() {};goog.provide('goog.dom');goog.require('goog.dom');
                                                                                     ^

May 16, 2016 7:33:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: in1:1: ERROR - required "goog.dom" namespace never provided
var goog = {};goog.provide = function() {};goog.require = function() {};goog.provide('goog.dom');goog.require('goog.dom');
                                                                                                 ^

May 16, 2016 7:33:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 3 warning(s), 100% typed
May 16, 2016 7:34:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - "Foo" is not a valid JS property name
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                            ^

May 16, 2016 7:34:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:34:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - "foo" is not a valid JS property name
goog.provide('foo.Bar.Type');
             ^

May 16, 2016 7:34:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - "foo" is not a valid JS property name
goog.provide('foo.Bar');
             ^

May 16, 2016 7:34:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:34:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - "foo" is not a valid JS property name
goog.provide('foo.Bar.Type');
             ^

May 16, 2016 7:34:00 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - "foo" is not a valid JS property name
goog.provide('foo.Bar');
             ^

May 16, 2016 7:34:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:34:01 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - "FOO" is not a valid JS property name
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('FOO'); FOO.bar = 3;
                                                                                                            ^

May 16, 2016 7:34:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:34:01 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - "FOO" is not a valid JS property name
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('FOO.BAR'); FOO.BAR = 3;
                                                                                                            ^

May 16, 2016 7:34:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:34:01 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:34:01 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:34:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:34:01 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 7:34:01 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 7:34:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 100% typed
May 16, 2016 7:34:01 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 7:34:01 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 7:34:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 100% typed
May 16, 2016 7:36:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:36:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:36:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:36:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:36:13 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:36:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:36:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:36:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:36:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:36:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:36:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:36:13 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:36:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:36:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:36:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:36:13 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:36:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:36:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 7:36:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 7:36:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: in1:12: WARNING - Property inherits never defined on goog
goog.inherits(a.b.DerivedClass, a.b.BaseClass);
^

May 16, 2016 7:36:21 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: in1:5: ERROR - variable alert is undeclared
  alert('hi');
  ^

May 16, 2016 7:36:21 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: in1:12: ERROR - variable goog is undeclared
goog.inherits(a.b.DerivedClass, a.b.BaseClass);
^

May 16, 2016 7:36:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 3 warning(s), 92.6% typed
May 16, 2016 7:36:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 7:36:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 7:36:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 100% typed
May 16, 2016 7:36:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 7:36:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 7:36:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 100% typed
May 16, 2016 7:36:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 7:36:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 7:36:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 100% typed
May 16, 2016 7:36:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 7:36:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 7:36:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 100% typed
May 16, 2016 7:36:22 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:2: WARNING - assignment to property A of enum{E}
found   : number
required: string
 @export */ var E = {A:8, B:9};goog.exportSymbol('E', E);
                     ^

May 16, 2016 7:36:22 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:2: WARNING - assignment to property B of enum{E}
found   : number
required: string
 @export */ var E = {A:8, B:9};goog.exportSymbol('E', E);
                          ^

May 16, 2016 7:36:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 100% typed
May 16, 2016 7:36:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - "foo" is not a valid JS property name
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                            ^

May 16, 2016 7:36:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:36:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - "foo" is not a valid JS property name
var goog = {}; goog.provide('foo.bar'); goog.provide('foo.bar.baz'); /** @constructor */ foo.bar = function() {};/** @constructor */ foo.bar.baz = function() {};
                            ^

May 16, 2016 7:36:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - "foo" is not a valid JS property name
var goog = {}; goog.provide('foo.bar'); goog.provide('foo.bar.baz'); /** @constructor */ foo.bar = function() {};/** @constructor */ foo.bar.baz = function() {};
                                                     ^

May 16, 2016 7:36:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:36:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - "foo" is not a valid JS property name
var goog = {}; goog.provide('foo.Bar'); var foo = {}; foo.Bar = {};
                            ^

May 16, 2016 7:36:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:36:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - "foo" is not a valid JS property name
var goog = {}; goog.provide('foo.Bar'); foo = {}; foo.Bar = {};
                            ^

May 16, 2016 7:36:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:36:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - "Foo" is not a valid JS property name
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @constructor */ Foo = function() {};var x = new Foo();
                                                                                                            ^

May 16, 2016 7:36:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:36:25 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:36:25 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
java.lang.RuntimeException: java.lang.OutOfMemoryError: Java heap space
	at com.google.javascript.jscomp.Compiler.runInCompilerThread(Compiler.java:386)
	at com.google.javascript.jscomp.Compiler.compile(Compiler.java:330)
	at com.google.javascript.jscomp.Compiler.compile(Compiler.java:301)
	at com.google.javascript.jscomp.AbstractCommandLineRunner.doRun(AbstractCommandLineRunner.java:452)
	at com.google.javascript.jscomp.AbstractCommandLineRunner.run(AbstractCommandLineRunner.java:185)
	at com.google.javascript.jscomp.CommandLineRunnerTest.compile(CommandLineRunnerTest.java:1328)
	at com.google.javascript.jscomp.CommandLineRunnerTest.test(CommandLineRunnerTest.java:1211)
	at com.google.javascript.jscomp.CommandLineRunnerTest.test(CommandLineRunnerTest.java:1200)
	at com.google.javascript.jscomp.CommandLineRunnerTest.test(CommandLineRunnerTest.java:1192)
	at com.google.javascript.jscomp.CommandLineRunnerTest.testGetMsgWiring(CommandLineRunnerTest.java:374)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestResultRunner.call(JUnitSingleTestResultRunner.java:36)
	at xxl.java.junit.JUnitSingleTestResultRunner.call(JUnitSingleTestResultRunner.java:11)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.OutOfMemoryError: Java heap space
May 16, 2016 7:37:57 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 7:37:57 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 7:37:57 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: in1:1: WARNING - Function goog.provide: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var goog = {};goog.provide = function() {};goog.require = function() {};goog.provide('goog.dom');goog.require('goog.dom');
                                                                        ^

May 16, 2016 7:37:57 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: in1:1: ERROR - "goog" is not a valid JS property name
var goog = {};goog.provide = function() {};goog.require = function() {};goog.provide('goog.dom');goog.require('goog.dom');
                                                                                     ^

May 16, 2016 7:37:57 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: in1:1: ERROR - required "goog.dom" namespace never provided
var goog = {};goog.provide = function() {};goog.require = function() {};goog.provide('goog.dom');goog.require('goog.dom');
                                                                                                 ^

May 16, 2016 7:37:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 3 warning(s), 100% typed
May 16, 2016 7:38:38 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - "Foo" is not a valid JS property name
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                            ^

May 16, 2016 7:38:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:38:40 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:2: WARNING - assignment to property A of enum{E}
found   : number
required: string
 @export */ var E = {A:8, B:9};goog.exportSymbol('E', E);
                     ^

May 16, 2016 7:38:40 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:2: WARNING - assignment to property B of enum{E}
found   : number
required: string
 @export */ var E = {A:8, B:9};goog.exportSymbol('E', E);
                          ^

May 16, 2016 7:38:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 100% typed
May 16, 2016 7:39:21 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - "foo" is not a valid JS property name
goog.provide('foo.Bar.Type');
             ^

May 16, 2016 7:39:21 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - "foo" is not a valid JS property name
goog.provide('foo.Bar');
             ^

May 16, 2016 7:39:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:39:21 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - "foo" is not a valid JS property name
goog.provide('foo.Bar.Type');
             ^

May 16, 2016 7:39:21 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - "foo" is not a valid JS property name
goog.provide('foo.Bar');
             ^

May 16, 2016 7:39:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:39:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 7:39:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 7:39:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: in1:3: WARNING - a.b is never defined
a.b.BaseClass = function() {};
^

May 16, 2016 7:39:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: in1:4: WARNING - a.b is never defined
a.b.BaseClass.prototype.doSomething = function() {
^

May 16, 2016 7:39:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: in1:11: WARNING - a.b is never defined
a.b.DerivedClass = function() {};
^

May 16, 2016 7:39:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: in1:12: WARNING - Property inherits never defined on goog
goog.inherits(a.b.DerivedClass, a.b.BaseClass);
^

May 16, 2016 7:39:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: in1:12: WARNING - a.b is never defined
goog.inherits(a.b.DerivedClass, a.b.BaseClass);
              ^

May 16, 2016 7:39:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: in1:12: WARNING - a.b is never defined
goog.inherits(a.b.DerivedClass, a.b.BaseClass);
                                ^

May 16, 2016 7:39:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: in1:14: WARNING - a.b is never defined
a.b.DerivedClass.prototype.doSomething = function() {
^

May 16, 2016 7:39:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: in1:15: WARNING - a.b.DerivedClass.superClass_ is never defined
  a.b.DerivedClass.superClass_.doSomething();
  ^

May 16, 2016 7:39:21 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: in1:5: ERROR - variable alert is undeclared
  alert('hi');
  ^

May 16, 2016 7:39:21 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: in1:12: ERROR - variable goog is undeclared
goog.inherits(a.b.DerivedClass, a.b.BaseClass);
^

May 16, 2016 7:39:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 10 warning(s), 92.6% typed
May 16, 2016 7:39:22 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - "FOO" is not a valid JS property name
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('FOO'); FOO.bar = 3;
                                                                                                            ^

May 16, 2016 7:39:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:39:22 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - "x" is not a valid JS property name
goog.provide('x');
             ^

May 16, 2016 7:39:22 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - required "x" namespace never provided
goog.require('x');
^

May 16, 2016 7:39:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
java.lang.RuntimeException: java.lang.OutOfMemoryError: Java heap space
	at com.google.javascript.jscomp.Compiler.runInCompilerThread(Compiler.java:386)
	at com.google.javascript.jscomp.Compiler.compile(Compiler.java:330)
	at com.google.javascript.jscomp.Compiler.compile(Compiler.java:301)
	at com.google.javascript.jscomp.AbstractCommandLineRunner.doRun(AbstractCommandLineRunner.java:452)
	at com.google.javascript.jscomp.AbstractCommandLineRunner.run(AbstractCommandLineRunner.java:185)
	at com.google.javascript.jscomp.CommandLineRunnerTest.compile(CommandLineRunnerTest.java:1328)
	at com.google.javascript.jscomp.CommandLineRunnerTest.test(CommandLineRunnerTest.java:1211)
	at com.google.javascript.jscomp.CommandLineRunnerTest.test(CommandLineRunnerTest.java:1200)
	at com.google.javascript.jscomp.CommandLineRunnerTest.test(CommandLineRunnerTest.java:1192)
	at com.google.javascript.jscomp.CommandLineRunnerTest.testTypeCheckingOffByDefault(CommandLineRunnerTest.java:194)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestResultRunner.call(JUnitSingleTestResultRunner.java:36)
	at xxl.java.junit.JUnitSingleTestResultRunner.call(JUnitSingleTestResultRunner.java:11)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.OutOfMemoryError: Java heap space
May 16, 2016 7:42:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - "foo" is not a valid JS property name
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                            ^

May 16, 2016 7:42:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:45:37 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - "i" is not a valid JS property name
var goog; goog.provide('i.am.on.a.Horse');i.am.on.a.Horse = function() {};i.am.on.a.Horse.prototype.x = function() {};i.am.on.a.Boat.prototype.y = function() {}
                       ^

May 16, 2016 7:45:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
java.lang.RuntimeException: java.lang.OutOfMemoryError: Java heap space
	at com.google.javascript.jscomp.Compiler.runInCompilerThread(Compiler.java:386)
	at com.google.javascript.jscomp.Compiler.compile(Compiler.java:330)
	at com.google.javascript.jscomp.Compiler.compile(Compiler.java:301)
	at com.google.javascript.jscomp.AbstractCommandLineRunner.doRun(AbstractCommandLineRunner.java:452)
	at com.google.javascript.jscomp.AbstractCommandLineRunner.run(AbstractCommandLineRunner.java:185)
	at com.google.javascript.jscomp.CommandLineRunnerTest.compile(CommandLineRunnerTest.java:1328)
	at com.google.javascript.jscomp.CommandLineRunnerTest.test(CommandLineRunnerTest.java:1211)
	at com.google.javascript.jscomp.CommandLineRunnerTest.test(CommandLineRunnerTest.java:1200)
	at com.google.javascript.jscomp.CommandLineRunnerTest.test(CommandLineRunnerTest.java:1192)
	at com.google.javascript.jscomp.CommandLineRunnerTest.testIssue297(CommandLineRunnerTest.java:436)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestResultRunner.call(JUnitSingleTestResultRunner.java:36)
	at xxl.java.junit.JUnitSingleTestResultRunner.call(JUnitSingleTestResultRunner.java:11)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.OutOfMemoryError: Java heap space
May 16, 2016 7:48:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace never provided
goog.require('goog.beer');
^

May 16, 2016 7:48:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - "goog" is not a valid JS property name
goog.provide('goog.beer');
             ^

May 16, 2016 7:48:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
java.lang.RuntimeException: java.lang.OutOfMemoryError: Java heap space
	at com.google.javascript.jscomp.Compiler.runInCompilerThread(Compiler.java:386)
	at com.google.javascript.jscomp.Compiler.compile(Compiler.java:330)
	at com.google.javascript.jscomp.Compiler.compile(Compiler.java:301)
	at com.google.javascript.jscomp.AbstractCommandLineRunner.doRun(AbstractCommandLineRunner.java:452)
	at com.google.javascript.jscomp.AbstractCommandLineRunner.run(AbstractCommandLineRunner.java:185)
	at com.google.javascript.jscomp.CommandLineRunnerTest.compile(CommandLineRunnerTest.java:1328)
	at com.google.javascript.jscomp.CommandLineRunnerTest.test(CommandLineRunnerTest.java:1250)
	at com.google.javascript.jscomp.CommandLineRunnerTest.test(CommandLineRunnerTest.java:1239)
	at com.google.javascript.jscomp.CommandLineRunnerTest.testTypeCheckingOnWithVerbose(CommandLineRunnerTest.java:247)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestResultRunner.call(JUnitSingleTestResultRunner.java:36)
	at xxl.java.junit.JUnitSingleTestResultRunner.call(JUnitSingleTestResultRunner.java:11)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.OutOfMemoryError: Java heap space
java.lang.RuntimeException: java.lang.OutOfMemoryError: Java heap space
	at com.google.javascript.jscomp.Compiler.runInCompilerThread(Compiler.java:386)
	at com.google.javascript.jscomp.Compiler.compile(Compiler.java:330)
	at com.google.javascript.jscomp.Compiler.compile(Compiler.java:301)
	at com.google.javascript.jscomp.AbstractCommandLineRunner.doRun(AbstractCommandLineRunner.java:452)
	at com.google.javascript.jscomp.AbstractCommandLineRunner.run(AbstractCommandLineRunner.java:185)
	at com.google.javascript.jscomp.CommandLineRunnerTest.compile(CommandLineRunnerTest.java:1328)
	at com.google.javascript.jscomp.CommandLineRunnerTest.test(CommandLineRunnerTest.java:1250)
	at com.google.javascript.jscomp.CommandLineRunnerTest.test(CommandLineRunnerTest.java:1239)
	at com.google.javascript.jscomp.CommandLineRunnerTest.testES5ChecksInVerbose(CommandLineRunnerTest.java:1064)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestResultRunner.call(JUnitSingleTestResultRunner.java:36)
	at xxl.java.junit.JUnitSingleTestResultRunner.call(JUnitSingleTestResultRunner.java:11)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.OutOfMemoryError: Java heap space
May 16, 2016 7:49:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - "FOO" is not a valid JS property name
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('FOO.BAR'); FOO.BAR = 3;
                                                                                                            ^

May 16, 2016 7:49:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:49:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:49:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:49:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:49:29 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 7:49:29 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 7:49:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 100% typed
May 16, 2016 7:49:29 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 7:49:29 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 7:49:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 100% typed
May 16, 2016 7:49:29 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 7:49:29 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 7:49:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 100% typed
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:88)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:56)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:154)
	at fr.inria.lille.commons.spoon.SpoonedFile.processModelledClasses(SpoonedFile.java:138)
	at fr.inria.lille.commons.spoon.SpoonedFile.process(SpoonedFile.java:128)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:119)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:115)
	at fr.inria.lille.repair.nopol.synth.brutpol.BrutSynthesizer.buildPatch(BrutSynthesizer.java:73)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:185)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:119)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:89)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:84)
	at fr.inria.lille.repair.Main.main(Main.java:61)
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:88)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:56)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:154)
	at fr.inria.lille.commons.spoon.SpoonedFile.processModelledClasses(SpoonedFile.java:138)
	at fr.inria.lille.commons.spoon.SpoonedFile.process(SpoonedFile.java:128)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:119)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:115)
	at fr.inria.lille.repair.nopol.synth.brutpol.BrutSynthesizer.buildPatch(BrutSynthesizer.java:73)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:185)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:119)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:89)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:84)
	at fr.inria.lille.repair.Main.main(Main.java:61)
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:88)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:56)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:154)
	at fr.inria.lille.commons.spoon.SpoonedFile.processModelledClasses(SpoonedFile.java:138)
	at fr.inria.lille.commons.spoon.SpoonedFile.process(SpoonedFile.java:128)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:119)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:115)
	at fr.inria.lille.repair.nopol.synth.brutpol.BrutSynthesizer.buildPatch(BrutSynthesizer.java:73)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:185)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:119)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:89)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:84)
	at fr.inria.lille.repair.Main.main(Main.java:61)
May 16, 2016 7:56:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 7:56:05 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:56:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:56:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:56:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:56:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:56:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 7:56:05 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:56:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:56:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 7:56:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:56:06 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:56:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:56:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:56:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:56:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 7:56:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:56:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:56:06 PM com.google.javascript.jscomp.Tracer logCurrentThreadTrace
WARNING: timers:
      06.641 Start        [Compiler] parseInputs
    1 06.642 Done    1 ms [Compiler] parseInputs
    0 06.642 Start        JSCompiler
    0 06.642 Done    0 ms JSCompiler
    0 06.642 Start        JSCompiler
    0 06.642 Done    0 ms JSCompiler
    0 06.642 Start        JSCompiler
    0 06.642 Done    0 ms JSCompiler
    0 06.642 Start        JSCompiler
    0 06.642 Done    0 ms JSCompiler
    0 06.642 Start        JSCompiler
    0 06.642 Done    0 ms JSCompiler
    0 06.642 Start        [Compiler] normalize
    1 06.643 Done    1 ms [Compiler] normalize
    0 06.643 Start        JSCompiler
    0 06.643 Done    0 ms JSCompiler
    0 06.643 Start        JSCompiler
    0 06.643 Done    0 ms JSCompiler
    0 06.643 Start        JSCompiler
    0 06.643 Done    0 ms JSCompiler
    0 06.643 Start        JSCompiler
    0 06.643 Done    0 ms JSCompiler
    0 06.643 Start        JSCompiler
    0 06.643 Done    0 ms JSCompiler
    0 06.643 Start        JSCompiler
    0 06.643 Done    0 ms JSCompiler
    0 06.643 Start        JSCompiler
    0 06.643 Done    0 ms JSCompiler
    0 06.643 Start        JSCompiler
    0 06.643 Done    0 ms JSCompiler
    0 06.643 Start        JSCompiler
    0 06.643 Done    0 ms JSCompiler
    0 06.643 Start        JSCompiler
    0 06.643 Done    0 ms JSCompiler
    0 06.643 Start        JSCompiler
    0 06.643 Done    0 ms JSCompiler
    0 06.643 Start        JSCompiler
    0 06.643 Done    0 ms JSCompiler
    0 06.643 Start        JSCompiler
    0 06.643 Done    0 ms JSCompiler
 TOTAL Compiler 2 (2 ms)

May 16, 2016 7:56:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:56:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 7:56:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:56:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:56:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:56:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:56:06 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:56:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:56:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 7:56:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:56:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:56:07 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 7:56:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:56:07 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:56:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:56:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 7:56:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:56:07 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:56:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:56:07 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - invalid cast - must be a subtype or supertype
from: number
to  : string
function f() { var xyz = /** @type {string} */ (0); }
                                                ^

May 16, 2016 7:56:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:56:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:56:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 7:56:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:56:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:56:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:56:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:56:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:56:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:56:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:56:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:56:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:56:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:56:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:56:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:56:08 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:56:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:56:29 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 7:56:29 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 7:56:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 100% typed
May 16, 2016 7:56:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:5: WARNING - Unable to determine return type for exported function internalName
internalName = function(a) {  return 6;
               ^

May 16, 2016 7:56:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:56:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:5: WARNING - Unable to determine return type for exported function internalName
internalName = function(a) {  return a;
               ^

May 16, 2016 7:56:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:56:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b for exported function p1
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = function(p1) {}; a.b.c = function(d, e, f) {};a.b.prototype.c = function(g, h, i) {};goog.exportSymbol('a.b', a.b);goog.exportProperty(a.b, 'c', a.b.c);goog.exportProperty(a.b.prototype, 'c', a.b.prototype.c);
                                                                                                                            ^

May 16, 2016 7:56:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b.c for exported function d
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = function(p1) {}; a.b.c = function(d, e, f) {};a.b.prototype.c = function(g, h, i) {};goog.exportSymbol('a.b', a.b);goog.exportProperty(a.b, 'c', a.b.c);goog.exportProperty(a.b.prototype, 'c', a.b.prototype.c);
                                                                                                                                                     ^

May 16, 2016 7:56:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b.c for exported function e
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = function(p1) {}; a.b.c = function(d, e, f) {};a.b.prototype.c = function(g, h, i) {};goog.exportSymbol('a.b', a.b);goog.exportProperty(a.b, 'c', a.b.c);goog.exportProperty(a.b.prototype, 'c', a.b.prototype.c);
                                                                                                                                                        ^

May 16, 2016 7:56:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b.c for exported function f
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = function(p1) {}; a.b.c = function(d, e, f) {};a.b.prototype.c = function(g, h, i) {};goog.exportSymbol('a.b', a.b);goog.exportProperty(a.b, 'c', a.b.c);goog.exportProperty(a.b.prototype, 'c', a.b.prototype.c);
                                                                                                                                                           ^

May 16, 2016 7:56:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b.prototype.c for exported function g
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = function(p1) {}; a.b.c = function(d, e, f) {};a.b.prototype.c = function(g, h, i) {};goog.exportSymbol('a.b', a.b);goog.exportProperty(a.b, 'c', a.b.c);goog.exportProperty(a.b.prototype, 'c', a.b.prototype.c);
                                                                                                                                                                                            ^

May 16, 2016 7:56:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b.prototype.c for exported function h
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = function(p1) {}; a.b.c = function(d, e, f) {};a.b.prototype.c = function(g, h, i) {};goog.exportSymbol('a.b', a.b);goog.exportProperty(a.b, 'c', a.b.c);goog.exportProperty(a.b.prototype, 'c', a.b.prototype.c);
                                                                                                                                                                                               ^

May 16, 2016 7:56:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b.prototype.c for exported function i
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = function(p1) {}; a.b.c = function(d, e, f) {};a.b.prototype.c = function(g, h, i) {};goog.exportSymbol('a.b', a.b);goog.exportProperty(a.b, 'c', a.b.c);goog.exportProperty(a.b.prototype, 'c', a.b.prototype.c);
                                                                                                                                                                                                  ^

May 16, 2016 7:56:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 7 warning(s), 100% typed
May 16, 2016 7:56:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a for exported function d
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = function(d, e, f) {};goog.exportSymbol('foobar', a)
                                                                                                                  ^

May 16, 2016 7:56:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a for exported function e
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = function(d, e, f) {};goog.exportSymbol('foobar', a)
                                                                                                                     ^

May 16, 2016 7:56:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a for exported function f
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = function(d, e, f) {};goog.exportSymbol('foobar', a)
                                                                                                                        ^

May 16, 2016 7:56:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 3 warning(s), 100% typed
May 16, 2016 7:56:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine return type for exported function InternalName
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var InternalName = function() {  return 6;};goog.exportSymbol('ExternalName', InternalName)
                                                                                                                    ^

May 16, 2016 7:56:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:56:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:2: WARNING - assignment to property A of enum{E}
found   : number
required: string
 @export */ var E = {A:8, B:9};goog.exportSymbol('E', E);
                     ^

May 16, 2016 7:56:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:2: WARNING - assignment to property B of enum{E}
found   : number
required: string
 @export */ var E = {A:8, B:9};goog.exportSymbol('E', E);
                          ^

May 16, 2016 7:56:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 100% typed
May 16, 2016 7:56:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:7: WARNING - Unable to determine return type for exported function internalName
internalName = function(param1) {return /** @type {V} */ (param1);};goog.exportSymbol('externalName', internalName)
               ^

May 16, 2016 7:56:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:7: WARNING - Unable to determine type of parameter internalName for exported function param1
internalName = function(param1) {return /** @type {V} */ (param1);};goog.exportSymbol('externalName', internalName)
                        ^

May 16, 2016 7:56:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:7: WARNING - Bad type annotation. Unknown type V
internalName = function(param1) {return /** @type {V} */ (param1);};goog.exportSymbol('externalName', internalName)
                                                   ^

May 16, 2016 7:56:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 3 warning(s), 87.5% typed
May 16, 2016 7:56:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:7: WARNING - Unable to determine return type for exported function internalName
internalName = function(param1) {return param1;};goog.exportSymbol('externalName', internalName)
               ^

May 16, 2016 7:56:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:7: WARNING - Unable to determine type of parameter internalName for exported function param1
internalName = function(param1) {return param1;};goog.exportSymbol('externalName', internalName)
                        ^

May 16, 2016 7:56:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 93.3% typed
May 16, 2016 7:56:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b.c for exported function d
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = {}; a.b.c = function(d, e, f) {};goog.exportSymbol('foobar', a.b.c)
                                                                                                                                        ^

May 16, 2016 7:56:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b.c for exported function e
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = {}; a.b.c = function(d, e, f) {};goog.exportSymbol('foobar', a.b.c)
                                                                                                                                           ^

May 16, 2016 7:56:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b.c for exported function f
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = {}; a.b.c = function(d, e, f) {};goog.exportSymbol('foobar', a.b.c)
                                                                                                                                              ^

May 16, 2016 7:56:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 3 warning(s), 100% typed
May 16, 2016 7:56:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b.c for exported function d
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = function(p1) {}; a.b.c = function(d, e, f) {};a.b.prototype.c = function(g, h, i) {};goog.exportSymbol('hello', a);goog.exportProperty(a.b, 'c', a.b.c);goog.exportProperty(a.b.prototype, 'c', a.b.prototype.c);
                                                                                                                                                     ^

May 16, 2016 7:56:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b.c for exported function e
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = function(p1) {}; a.b.c = function(d, e, f) {};a.b.prototype.c = function(g, h, i) {};goog.exportSymbol('hello', a);goog.exportProperty(a.b, 'c', a.b.c);goog.exportProperty(a.b.prototype, 'c', a.b.prototype.c);
                                                                                                                                                        ^

May 16, 2016 7:56:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b.c for exported function f
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = function(p1) {}; a.b.c = function(d, e, f) {};a.b.prototype.c = function(g, h, i) {};goog.exportSymbol('hello', a);goog.exportProperty(a.b, 'c', a.b.c);goog.exportProperty(a.b.prototype, 'c', a.b.prototype.c);
                                                                                                                                                           ^

May 16, 2016 7:56:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b.prototype.c for exported function g
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = function(p1) {}; a.b.c = function(d, e, f) {};a.b.prototype.c = function(g, h, i) {};goog.exportSymbol('hello', a);goog.exportProperty(a.b, 'c', a.b.c);goog.exportProperty(a.b.prototype, 'c', a.b.prototype.c);
                                                                                                                                                                                            ^

May 16, 2016 7:56:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b.prototype.c for exported function h
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = function(p1) {}; a.b.c = function(d, e, f) {};a.b.prototype.c = function(g, h, i) {};goog.exportSymbol('hello', a);goog.exportProperty(a.b, 'c', a.b.c);goog.exportProperty(a.b.prototype, 'c', a.b.prototype.c);
                                                                                                                                                                                               ^

May 16, 2016 7:56:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b.prototype.c for exported function i
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = function(p1) {}; a.b.c = function(d, e, f) {};a.b.prototype.c = function(g, h, i) {};goog.exportSymbol('hello', a);goog.exportProperty(a.b, 'c', a.b.c);goog.exportProperty(a.b.prototype, 'c', a.b.prototype.c);
                                                                                                                                                                                                  ^

May 16, 2016 7:56:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 6 warning(s), 100% typed
May 16, 2016 7:56:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b for exported function p1
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = function(p1) {}; a.b.c = function(d, e, f) {};a.b.prototype.c = function(g, h, i) {};goog.exportSymbol('prefix', a.b);goog.exportProperty(a.b, 'c', a.b.c);
                                                                                                                            ^

May 16, 2016 7:56:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b.c for exported function d
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = function(p1) {}; a.b.c = function(d, e, f) {};a.b.prototype.c = function(g, h, i) {};goog.exportSymbol('prefix', a.b);goog.exportProperty(a.b, 'c', a.b.c);
                                                                                                                                                     ^

May 16, 2016 7:56:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b.c for exported function e
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = function(p1) {}; a.b.c = function(d, e, f) {};a.b.prototype.c = function(g, h, i) {};goog.exportSymbol('prefix', a.b);goog.exportProperty(a.b, 'c', a.b.c);
                                                                                                                                                        ^

May 16, 2016 7:56:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b.c for exported function f
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = function(p1) {}; a.b.c = function(d, e, f) {};a.b.prototype.c = function(g, h, i) {};goog.exportSymbol('prefix', a.b);goog.exportProperty(a.b, 'c', a.b.c);
                                                                                                                                                           ^

May 16, 2016 7:56:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 4 warning(s), 100% typed
May 16, 2016 7:56:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b.c for exported function d
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = {}; a.b.c = function(d, e, f) {};goog.exportProperty(a.b, 'cprop', a.b.c)
                                                                                                                                        ^

May 16, 2016 7:56:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b.c for exported function e
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = {}; a.b.c = function(d, e, f) {};goog.exportProperty(a.b, 'cprop', a.b.c)
                                                                                                                                           ^

May 16, 2016 7:56:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b.c for exported function f
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = {}; a.b.c = function(d, e, f) {};goog.exportProperty(a.b, 'cprop', a.b.c)
                                                                                                                                              ^

May 16, 2016 7:56:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 3 warning(s), 100% typed
May 16, 2016 7:56:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:4: WARNING - Unable to determine type of parameter InternalName for exported function b
 var InternalName = function(a,b,c) {  return 6;};goog.exportSymbol('ExternalName', InternalName)
                               ^

May 16, 2016 7:56:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:4: WARNING - Unable to determine type of parameter InternalName for exported function c
 var InternalName = function(a,b,c) {  return 6;};goog.exportSymbol('ExternalName', InternalName)
                                 ^

May 16, 2016 7:56:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 100% typed
May 16, 2016 7:57:23 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b for exported function p1
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = function(p1) {}; a.b.c = function(d, e, f) {};a.b.prototype.c = function(g, h, i) {};goog.exportSymbol('a.b', a.b);goog.exportProperty(a.b, 'c', a.b.c);goog.exportProperty(a.b.prototype, 'c', a.b.prototype.c);
                                                                                                                            ^

May 16, 2016 7:57:23 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b.c for exported function d
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = function(p1) {}; a.b.c = function(d, e, f) {};a.b.prototype.c = function(g, h, i) {};goog.exportSymbol('a.b', a.b);goog.exportProperty(a.b, 'c', a.b.c);goog.exportProperty(a.b.prototype, 'c', a.b.prototype.c);
                                                                                                                                                     ^

May 16, 2016 7:57:23 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b.c for exported function e
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = function(p1) {}; a.b.c = function(d, e, f) {};a.b.prototype.c = function(g, h, i) {};goog.exportSymbol('a.b', a.b);goog.exportProperty(a.b, 'c', a.b.c);goog.exportProperty(a.b.prototype, 'c', a.b.prototype.c);
                                                                                                                                                        ^

May 16, 2016 7:57:23 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b.c for exported function f
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = function(p1) {}; a.b.c = function(d, e, f) {};a.b.prototype.c = function(g, h, i) {};goog.exportSymbol('a.b', a.b);goog.exportProperty(a.b, 'c', a.b.c);goog.exportProperty(a.b.prototype, 'c', a.b.prototype.c);
                                                                                                                                                           ^

May 16, 2016 7:57:23 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b.prototype.c for exported function g
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = function(p1) {}; a.b.c = function(d, e, f) {};a.b.prototype.c = function(g, h, i) {};goog.exportSymbol('a.b', a.b);goog.exportProperty(a.b, 'c', a.b.c);goog.exportProperty(a.b.prototype, 'c', a.b.prototype.c);
                                                                                                                                                                                            ^

May 16, 2016 7:57:23 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b.prototype.c for exported function h
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = function(p1) {}; a.b.c = function(d, e, f) {};a.b.prototype.c = function(g, h, i) {};goog.exportSymbol('a.b', a.b);goog.exportProperty(a.b, 'c', a.b.c);goog.exportProperty(a.b.prototype, 'c', a.b.prototype.c);
                                                                                                                                                                                               ^

May 16, 2016 7:57:23 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b.prototype.c for exported function i
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = function(p1) {}; a.b.c = function(d, e, f) {};a.b.prototype.c = function(g, h, i) {};goog.exportSymbol('a.b', a.b);goog.exportProperty(a.b, 'c', a.b.c);goog.exportProperty(a.b.prototype, 'c', a.b.prototype.c);
                                                                                                                                                                                                  ^

May 16, 2016 7:57:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 7 warning(s), 100% typed
May 16, 2016 7:57:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 7:57:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:57:26 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - "Foo" is not a valid JS property name
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                            ^

May 16, 2016 7:57:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:57:36 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 7:57:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:57:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - "x" is not a valid JS property name
goog.provide('x');
             ^

May 16, 2016 7:57:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - required "x" namespace never provided
goog.require('x');
^

May 16, 2016 7:57:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:57:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 7:57:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:57:43 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:4: WARNING - Unable to determine type of parameter InternalName for exported function b
 var InternalName = function(a,b,c) {  return 6;};goog.exportSymbol('ExternalName', InternalName)
                               ^

May 16, 2016 7:57:43 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:4: WARNING - Unable to determine type of parameter InternalName for exported function c
 var InternalName = function(a,b,c) {  return 6;};goog.exportSymbol('ExternalName', InternalName)
                                 ^

May 16, 2016 7:57:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 100% typed
May 16, 2016 7:57:43 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace never provided
goog.require('goog.beer');
^

May 16, 2016 7:57:43 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - "goog" is not a valid JS property name
goog.provide('goog.beer');
             ^

May 16, 2016 7:57:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:57:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:57:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 7:57:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:57:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 7:57:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 7:57:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 7:57:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 7:57:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 7:57:46 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 7:57:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 7:57:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b.c for exported function d
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = function(p1) {}; a.b.c = function(d, e, f) {};a.b.prototype.c = function(g, h, i) {};goog.exportSymbol('hello', a);goog.exportProperty(a.b, 'c', a.b.c);goog.exportProperty(a.b.prototype, 'c', a.b.prototype.c);
                                                                                                                                                     ^

May 16, 2016 7:57:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b.c for exported function e
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = function(p1) {}; a.b.c = function(d, e, f) {};a.b.prototype.c = function(g, h, i) {};goog.exportSymbol('hello', a);goog.exportProperty(a.b, 'c', a.b.c);goog.exportProperty(a.b.prototype, 'c', a.b.prototype.c);
                                                                                                                                                        ^

May 16, 2016 7:57:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b.c for exported function f
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = function(p1) {}; a.b.c = function(d, e, f) {};a.b.prototype.c = function(g, h, i) {};goog.exportSymbol('hello', a);goog.exportProperty(a.b, 'c', a.b.c);goog.exportProperty(a.b.prototype, 'c', a.b.prototype.c);
                                                                                                                                                           ^

May 16, 2016 7:57:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b.prototype.c for exported function g
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = function(p1) {}; a.b.c = function(d, e, f) {};a.b.prototype.c = function(g, h, i) {};goog.exportSymbol('hello', a);goog.exportProperty(a.b, 'c', a.b.c);goog.exportProperty(a.b.prototype, 'c', a.b.prototype.c);
                                                                                                                                                                                            ^

May 16, 2016 7:57:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b.prototype.c for exported function h
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = function(p1) {}; a.b.c = function(d, e, f) {};a.b.prototype.c = function(g, h, i) {};goog.exportSymbol('hello', a);goog.exportProperty(a.b, 'c', a.b.c);goog.exportProperty(a.b.prototype, 'c', a.b.prototype.c);
                                                                                                                                                                                               ^

May 16, 2016 7:57:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b.prototype.c for exported function i
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = function(p1) {}; a.b.c = function(d, e, f) {};a.b.prototype.c = function(g, h, i) {};goog.exportSymbol('hello', a);goog.exportProperty(a.b, 'c', a.b.c);goog.exportProperty(a.b.prototype, 'c', a.b.prototype.c);
                                                                                                                                                                                                  ^

May 16, 2016 7:57:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 6 warning(s), 100% typed
May 16, 2016 7:57:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b for exported function p1
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = function(p1) {}; a.b.c = function(d, e, f) {};a.b.prototype.c = function(g, h, i) {};goog.exportSymbol('prefix', a.b);goog.exportProperty(a.b, 'c', a.b.c);
                                                                                                                            ^

May 16, 2016 7:57:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b.c for exported function d
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = function(p1) {}; a.b.c = function(d, e, f) {};a.b.prototype.c = function(g, h, i) {};goog.exportSymbol('prefix', a.b);goog.exportProperty(a.b, 'c', a.b.c);
                                                                                                                                                     ^

May 16, 2016 7:57:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b.c for exported function e
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = function(p1) {}; a.b.c = function(d, e, f) {};a.b.prototype.c = function(g, h, i) {};goog.exportSymbol('prefix', a.b);goog.exportProperty(a.b, 'c', a.b.c);
                                                                                                                                                        ^

May 16, 2016 7:57:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b.c for exported function f
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = function(p1) {}; a.b.c = function(d, e, f) {};a.b.prototype.c = function(g, h, i) {};goog.exportSymbol('prefix', a.b);goog.exportProperty(a.b, 'c', a.b.c);
                                                                                                                                                           ^

May 16, 2016 7:57:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 4 warning(s), 100% typed
May 16, 2016 7:57:48 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b.c for exported function d
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = {}; a.b.c = function(d, e, f) {};goog.exportSymbol('foobar', a.b.c)
                                                                                                                                        ^

May 16, 2016 7:57:48 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b.c for exported function e
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = {}; a.b.c = function(d, e, f) {};goog.exportSymbol('foobar', a.b.c)
                                                                                                                                           ^

May 16, 2016 7:57:48 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b.c for exported function f
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = {}; a.b.c = function(d, e, f) {};goog.exportSymbol('foobar', a.b.c)
                                                                                                                                              ^

May 16, 2016 7:57:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 3 warning(s), 100% typed
May 16, 2016 7:57:48 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 7:57:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 7:57:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - "foo" is not a valid JS property name
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                            ^

May 16, 2016 7:57:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:57:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - "i" is not a valid JS property name
var goog; goog.provide('i.am.on.a.Horse');i.am.on.a.Horse = function() {};i.am.on.a.Horse.prototype.x = function() {};i.am.on.a.Boat.prototype.y = function() {}
                       ^

May 16, 2016 7:57:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:57:58 PM com.google.javascript.jscomp.Tracer logCurrentThreadTrace
WARNING: timers:
      58.884 Start        [Compiler] parseInputs
    0 58.884 Done    0 ms [Compiler] parseInputs
    0 58.884 Start        JSCompiler
    0 58.884 Done    0 ms JSCompiler
    0 58.884 Start        JSCompiler
    0 58.884 Done    0 ms JSCompiler
    0 58.884 Start        JSCompiler
    0 58.884 Done    0 ms JSCompiler
    0 58.884 Start        JSCompiler
    0 58.884 Done    0 ms JSCompiler
    0 58.884 Start        JSCompiler
    0 58.884 Done    0 ms JSCompiler
    0 58.884 Start        [Compiler] normalize
    0 58.884 Done    0 ms [Compiler] normalize
    1 58.885 Start        JSCompiler
    0 58.885 Done    0 ms JSCompiler
    0 58.885 Start        JSCompiler
    0 58.885 Done    0 ms JSCompiler
    0 58.885 Start        JSCompiler
    0 58.885 Done    0 ms JSCompiler
    0 58.885 Start        JSCompiler
    0 58.885 Done    0 ms JSCompiler
    0 58.885 Start        JSCompiler
    0 58.885 Done    0 ms JSCompiler
    0 58.885 Start        JSCompiler
    0 58.885 Done    0 ms JSCompiler
    0 58.885 Start        JSCompiler
    0 58.885 Done    0 ms JSCompiler
    0 58.885 Start        JSCompiler
    0 58.885 Done    0 ms JSCompiler
    0 58.885 Start        JSCompiler
    0 58.885 Done    0 ms JSCompiler
    0 58.885 Start        JSCompiler
    0 58.885 Done    0 ms JSCompiler
    0 58.885 Start        JSCompiler
    0 58.885 Done    0 ms JSCompiler
    0 58.885 Start        JSCompiler
    0 58.885 Done    0 ms JSCompiler
    0 58.885 Start        JSCompiler
    0 58.885 Done    0 ms JSCompiler
 TOTAL Compiler 2 (0 ms)

May 16, 2016 7:57:59 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:5: WARNING - Unable to determine return type for exported function internalName
internalName = function(a) {  return a;
               ^

May 16, 2016 7:57:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:57:59 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:5: WARNING - Unable to determine return type for exported function internalName
internalName = function(a) {  return 6;
               ^

May 16, 2016 7:57:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:58:02 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:7: WARNING - Unable to determine return type for exported function internalName
internalName = function(param1) {return param1;};goog.exportSymbol('externalName', internalName)
               ^

May 16, 2016 7:58:02 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:7: WARNING - Unable to determine type of parameter internalName for exported function param1
internalName = function(param1) {return param1;};goog.exportSymbol('externalName', internalName)
                        ^

May 16, 2016 7:58:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 93.3% typed
May 16, 2016 7:58:03 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - "FOO" is not a valid JS property name
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('FOO'); FOO.bar = 3;
                                                                                                            ^

May 16, 2016 7:58:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:58:09 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 7:58:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:58:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 7:58:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:58:19 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a for exported function d
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = function(d, e, f) {};goog.exportSymbol('foobar', a)
                                                                                                                  ^

May 16, 2016 7:58:19 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a for exported function e
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = function(d, e, f) {};goog.exportSymbol('foobar', a)
                                                                                                                     ^

May 16, 2016 7:58:19 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a for exported function f
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = function(d, e, f) {};goog.exportSymbol('foobar', a)
                                                                                                                        ^

May 16, 2016 7:58:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 3 warning(s), 100% typed
May 16, 2016 7:58:24 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:7: WARNING - Unable to determine return type for exported function internalName
internalName = function(param1) {return /** @type {V} */ (param1);};goog.exportSymbol('externalName', internalName)
               ^

May 16, 2016 7:58:24 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:7: WARNING - Unable to determine type of parameter internalName for exported function param1
internalName = function(param1) {return /** @type {V} */ (param1);};goog.exportSymbol('externalName', internalName)
                        ^

May 16, 2016 7:58:24 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:7: WARNING - Bad type annotation. Unknown type V
internalName = function(param1) {return /** @type {V} */ (param1);};goog.exportSymbol('externalName', internalName)
                                                   ^

May 16, 2016 7:58:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 3 warning(s), 87.5% typed
May 16, 2016 7:58:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - "foo" is not a valid JS property name
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                            ^

May 16, 2016 7:58:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:58:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - "foo" is not a valid JS property name
var goog = {}; goog.provide('foo.bar'); goog.provide('foo.bar.baz'); /** @constructor */ foo.bar = function() {};/** @constructor */ foo.bar.baz = function() {};
                            ^

May 16, 2016 7:58:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - "foo" is not a valid JS property name
var goog = {}; goog.provide('foo.bar'); goog.provide('foo.bar.baz'); /** @constructor */ foo.bar = function() {};/** @constructor */ foo.bar.baz = function() {};
                                                     ^

May 16, 2016 7:58:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:58:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - "foo" is not a valid JS property name
var goog = {}; goog.provide('foo.Bar'); var foo = {}; foo.Bar = {};
                            ^

May 16, 2016 7:58:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:58:24 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - "foo" is not a valid JS property name
var goog = {}; goog.provide('foo.Bar'); foo = {}; foo.Bar = {};
                            ^

May 16, 2016 7:58:24 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:58:27 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 7:58:27 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 7:58:27 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: in1:1: WARNING - Function goog.provide: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var goog = {};goog.provide = function() {};goog.require = function() {};goog.provide('goog.dom');goog.require('goog.dom');
                                                                        ^

May 16, 2016 7:58:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: in1:1: ERROR - "goog" is not a valid JS property name
var goog = {};goog.provide = function() {};goog.require = function() {};goog.provide('goog.dom');goog.require('goog.dom');
                                                                                     ^

May 16, 2016 7:58:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: in1:1: ERROR - required "goog.dom" namespace never provided
var goog = {};goog.provide = function() {};goog.require = function() {};goog.provide('goog.dom');goog.require('goog.dom');
                                                                                                 ^

May 16, 2016 7:58:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 3 warning(s), 100% typed
May 16, 2016 7:58:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 7:58:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:58:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - "FOO" is not a valid JS property name
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('FOO.BAR'); FOO.BAR = 3;
                                                                                                            ^

May 16, 2016 7:58:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:58:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - "Foo" is not a valid JS property name
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @constructor */ Foo = function() {};var x = new Foo();
                                                                                                            ^

May 16, 2016 7:58:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:58:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 7:58:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:58:39 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b.c for exported function d
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = {}; a.b.c = function(d, e, f) {};goog.exportProperty(a.b, 'cprop', a.b.c)
                                                                                                                                        ^

May 16, 2016 7:58:39 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b.c for exported function e
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = {}; a.b.c = function(d, e, f) {};goog.exportProperty(a.b, 'cprop', a.b.c)
                                                                                                                                           ^

May 16, 2016 7:58:39 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b.c for exported function f
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = {}; a.b.c = function(d, e, f) {};goog.exportProperty(a.b, 'cprop', a.b.c)
                                                                                                                                              ^

May 16, 2016 7:58:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 3 warning(s), 100% typed
May 16, 2016 7:58:41 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 7:58:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 7:58:42 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - invalid cast - must be a subtype or supertype
from: number
to  : string
function f() { var xyz = /** @type {string} */ (0); }
                                                ^

May 16, 2016 7:58:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:58:47 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 7:58:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 7:58:47 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine return type for exported function InternalName
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var InternalName = function() {  return 6;};goog.exportSymbol('ExternalName', InternalName)
                                                                                                                    ^

May 16, 2016 7:58:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 7:58:49 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:2: WARNING - assignment to property A of enum{E}
found   : number
required: string
 @export */ var E = {A:8, B:9};goog.exportSymbol('E', E);
                     ^

May 16, 2016 7:58:49 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:2: WARNING - assignment to property B of enum{E}
found   : number
required: string
 @export */ var E = {A:8, B:9};goog.exportSymbol('E', E);
                          ^

May 16, 2016 7:58:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 100% typed
May 16, 2016 7:58:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - "foo" is not a valid JS property name
goog.provide('foo.Bar.Type');
             ^

May 16, 2016 7:58:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - "foo" is not a valid JS property name
goog.provide('foo.Bar');
             ^

May 16, 2016 7:58:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:58:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - "foo" is not a valid JS property name
goog.provide('foo.Bar.Type');
             ^

May 16, 2016 7:58:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - "foo" is not a valid JS property name
goog.provide('foo.Bar');
             ^

May 16, 2016 7:58:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 7:58:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 7:58:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 8:04:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 8:04:26 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 8:04:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 8:04:26 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 8:04:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 8:04:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 8:04:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 8:04:26 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 8:04:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 8:04:26 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 8:04:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 8:04:26 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 8:04:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 8:04:26 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 8:04:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 8:04:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 8:04:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 8:04:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 8:04:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 8:04:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 8:04:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 8:04:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 8:04:29 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 8:04:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 8:04:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 8:04:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 8:04:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 8:04:29 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 8:04:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 8:04:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 8:04:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 8:04:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 8:04:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 8:04:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 8:04:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 8:04:30 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - invalid cast - must be a subtype or supertype
from: number
to  : string
function f() { var xyz = /** @type {string} */ (0); }
                                                ^

May 16, 2016 8:04:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 8:04:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 8:04:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 8:04:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 8:04:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 8:04:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 8:04:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 8:04:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 8:04:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 8:04:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 8:04:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 8:04:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 8:04:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 8:04:31 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 8:04:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 8:04:31 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 8:04:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
Closure Compiler (http://code.google.com/closure/compiler)
Version: Unversioned directory
Built on: 2016/05/16 12:22
Closure Compiler (http://code.google.com/closure/compiler)
Version: Unversioned directory
Built on: 2016/05/16 12:22
LOG:unknown:///unknown:1+19: Semicolon inserted
LOG:unknown:///unknown:1+19: Semicolon inserted
LOG:unknown:///unknown:1+46: Semicolon inserted
LOG:unknown:///unknown:1+46: Semicolon inserted
LOG:unknown:///unknown:1+34: Semicolon inserted
LOG:unknown:///unknown:1+34: Semicolon inserted
LOG:unknown:///unknown:1+34: Semicolon inserted
LOG:unknown:///unknown:1+34: Semicolon inserted
LOG:unknown:///unknown:1+42: Semicolon inserted
LOG:unknown:///unknown:1+42: Semicolon inserted
LOG:unknown:///unknown:1+28: Semicolon inserted
LOG:unknown:///unknown:1+28: Semicolon inserted
LOG:unknown:///unknown:1+42: Semicolon inserted
LOG:unknown:///unknown:1+42: Semicolon inserted
LOG:unknown:///unknown:1+62: Semicolon inserted
LOG:unknown:///unknown:1+63: Semicolon inserted
LOG:unknown:///unknown:1+62: Semicolon inserted
LOG:unknown:///unknown:1+63: Semicolon inserted
LOG:unknown:///unknown:1+30: Semicolon inserted
LOG:unknown:///unknown:1+30: Semicolon inserted
LOG:unknown:///unknown:1+109: Semicolon inserted
LOG:unknown:///unknown:1+110: Semicolon inserted
LOG:unknown:///unknown:1+109: Semicolon inserted
LOG:unknown:///unknown:1+110: Semicolon inserted
LOG:unknown:///unknown:1+19: Semicolon inserted
LOG:unknown:///unknown:1+19: Semicolon inserted
LOG:unknown:///unknown:1+43: Semicolon inserted
LOG:unknown:///unknown:1+43: Semicolon inserted
LOG:unknown:///unknown:1+48: Semicolon inserted
LOG:unknown:///unknown:1+48: Semicolon inserted
LOG:unknown:///unknown:1+44: Semicolon inserted
LOG:unknown:///unknown:1+71: Semicolon inserted
LOG:unknown:///unknown:1+44: Semicolon inserted
LOG:unknown:///unknown:1+71: Semicolon inserted
LOG:unknown:///unknown:1+22: Semicolon inserted
LOG:unknown:///unknown:1+39: Semicolon inserted
LOG:unknown:///unknown:1+22: Semicolon inserted
LOG:unknown:///unknown:1+39: Semicolon inserted
LOG:unknown:///unknown:1+95: Semicolon inserted
LOG:unknown:///unknown:1+102: Semicolon inserted
LOG:unknown:///unknown:1+119: Semicolon inserted
LOG:unknown:///unknown:1+95: Semicolon inserted
LOG:unknown:///unknown:1+102: Semicolon inserted
LOG:unknown:///unknown:1+119: Semicolon inserted
LOG:unknown:///unknown:1+22: Semicolon inserted
LOG:unknown:///unknown:1+37: Semicolon inserted
LOG:unknown:///unknown:1+22: Semicolon inserted
LOG:unknown:///unknown:1+37: Semicolon inserted
LOG:unknown:///unknown:1+95: Semicolon inserted
LOG:unknown:///unknown:1+102: Semicolon inserted
LOG:unknown:///unknown:1+117: Semicolon inserted
LOG:unknown:///unknown:1+95: Semicolon inserted
LOG:unknown:///unknown:1+102: Semicolon inserted
LOG:unknown:///unknown:1+117: Semicolon inserted
LOG:unknown:///unknown:1+22: Semicolon inserted
LOG:unknown:///unknown:1+22: Semicolon inserted
LOG:unknown:///unknown:1+95: Semicolon inserted
LOG:unknown:///unknown:1+102: Semicolon inserted
LOG:unknown:///unknown:1+119: Semicolon inserted
LOG:unknown:///unknown:1+134: Semicolon inserted
LOG:unknown:///unknown:1+95: Semicolon inserted
LOG:unknown:///unknown:1+102: Semicolon inserted
LOG:unknown:///unknown:1+119: Semicolon inserted
LOG:unknown:///unknown:1+134: Semicolon inserted
WARNING:unknown:///unknown:1+2 - 3: Will not work in IE
java.lang.Exception
	at com.google.caja.reporting.EchoingMessageQueue$1.add(EchoingMessageQueue.java:52)
	at com.google.caja.reporting.EchoingMessageQueue$1.add(EchoingMessageQueue.java:40)
	at java.util.AbstractList.add(AbstractList.java:108)
	at com.google.caja.reporting.AbstractMessageQueue.addMessage(AbstractMessageQueue.java:25)
	at com.google.caja.parser.js.Parser.parseExpressionAtom(Parser.java:1138)
	at com.google.caja.parser.js.Parser.parseOp(Parser.java:792)
	at com.google.caja.parser.js.Parser.parseExpressionInt(Parser.java:727)
	at com.google.caja.parser.js.Parser.parseExpressionStmt(Parser.java:1281)
	at com.google.caja.parser.js.Parser.parseStatementWithoutLabel(Parser.java:706)
	at com.google.caja.parser.js.Parser.parseStatement(Parser.java:306)
	at com.google.caja.parser.js.Parser.parseTerminatedStatement(Parser.java:1312)
	at com.google.caja.parser.js.Parser.parseProgramOrFunctionBody(Parser.java:325)
	at com.google.caja.parser.js.Parser.parseProgram(Parser.java:314)
	at com.google.caja.parser.js.Parser.parse(Parser.java:272)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:42)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:31)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:26)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:22)
	at com.google.javascript.jscomp.jsonml.JsonMLConversionTest.testConversion(JsonMLConversionTest.java:79)
	at com.google.javascript.jscomp.jsonml.JsonMLConversionTest.testArray(JsonMLConversionTest.java:91)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestResultRunner.call(JUnitSingleTestResultRunner.java:36)
	at xxl.java.junit.JUnitSingleTestResultRunner.call(JUnitSingleTestResultRunner.java:11)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
WARNING:unknown:///unknown:1+2 - 3: Will not work in IE
java.lang.Exception
	at com.google.caja.reporting.EchoingMessageQueue$1.add(EchoingMessageQueue.java:52)
	at com.google.caja.reporting.EchoingMessageQueue$1.add(EchoingMessageQueue.java:40)
	at java.util.AbstractList.add(AbstractList.java:108)
	at com.google.caja.reporting.AbstractMessageQueue.addMessage(AbstractMessageQueue.java:25)
	at com.google.caja.parser.js.Parser.parseExpressionAtom(Parser.java:1138)
	at com.google.caja.parser.js.Parser.parseOp(Parser.java:792)
	at com.google.caja.parser.js.Parser.parseExpressionInt(Parser.java:727)
	at com.google.caja.parser.js.Parser.parseExpressionStmt(Parser.java:1281)
	at com.google.caja.parser.js.Parser.parseStatementWithoutLabel(Parser.java:706)
	at com.google.caja.parser.js.Parser.parseStatement(Parser.java:306)
	at com.google.caja.parser.js.Parser.parseTerminatedStatement(Parser.java:1312)
	at com.google.caja.parser.js.Parser.parseProgramOrFunctionBody(Parser.java:325)
	at com.google.caja.parser.js.Parser.parseProgram(Parser.java:314)
	at com.google.caja.parser.js.Parser.parse(Parser.java:272)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:42)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:31)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:26)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:22)
	at com.google.javascript.jscomp.jsonml.JsonMLConversionTest.testConversion(JsonMLConversionTest.java:86)
	at com.google.javascript.jscomp.jsonml.JsonMLConversionTest.testArray(JsonMLConversionTest.java:91)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestResultRunner.call(JUnitSingleTestResultRunner.java:36)
	at xxl.java.junit.JUnitSingleTestResultRunner.call(JUnitSingleTestResultRunner.java:11)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
LOG:unknown:///unknown:1+39: Semicolon inserted
LOG:unknown:///unknown:1+39: Semicolon inserted
LOG:unknown:///unknown:1+35: Semicolon inserted
LOG:unknown:///unknown:1+35: Semicolon inserted
LOG:unknown:///unknown:1+43: Semicolon inserted
LOG:unknown:///unknown:1+43: Semicolon inserted
LOG:unknown:///unknown:1+36: Semicolon inserted
LOG:unknown:///unknown:1+36: Semicolon inserted
LOG:unknown:///unknown:1+23: Semicolon inserted
LOG:unknown:///unknown:1+23: Semicolon inserted
LOG:unknown:///unknown:1+40: Semicolon inserted
LOG:unknown:///unknown:1+40: Semicolon inserted
LOG:unknown:///unknown:1+39: Semicolon inserted
LOG:unknown:///unknown:1+66: Semicolon inserted
LOG:unknown:///unknown:1+39: Semicolon inserted
LOG:unknown:///unknown:1+66: Semicolon inserted
LOG:unknown:///unknown:1+102: Semicolon inserted
LOG:unknown:///unknown:1+103: Semicolon inserted
LOG:unknown:///unknown:1+102: Semicolon inserted
LOG:unknown:///unknown:1+103: Semicolon inserted
LOG:unknown:///unknown:1+19: Semicolon inserted
LOG:unknown:///unknown:1+19: Semicolon inserted
LOG:unknown:///unknown:1+37: Semicolon inserted
LOG:unknown:///unknown:1+37: Semicolon inserted
LOG:unknown:///unknown:1+35: Semicolon inserted
LOG:unknown:///unknown:1+62: Semicolon inserted
LOG:unknown:///unknown:1+35: Semicolon inserted
LOG:unknown:///unknown:1+62: Semicolon inserted
LOG:unknown:///unknown:1+98: Semicolon inserted
LOG:unknown:///unknown:1+99: Semicolon inserted
LOG:unknown:///unknown:1+98: Semicolon inserted
LOG:unknown:///unknown:1+99: Semicolon inserted
LOG:unknown:///unknown:1+104: Semicolon inserted
LOG:unknown:///unknown:1+105: Semicolon inserted
LOG:unknown:///unknown:1+104: Semicolon inserted
LOG:unknown:///unknown:1+105: Semicolon inserted
LOG:unknown:///unknown:1+18: Semicolon inserted
LOG:unknown:///unknown:1+18: Semicolon inserted
LOG:unknown:///unknown:1+97: Semicolon inserted
LOG:unknown:///unknown:1+98: Semicolon inserted
LOG:unknown:///unknown:1+97: Semicolon inserted
LOG:unknown:///unknown:1+98: Semicolon inserted
LOG:unknown:///unknown:1+15: Semicolon inserted
LOG:unknown:///unknown:1+15: Semicolon inserted
LOG:unknown:///unknown:1+34: Semicolon inserted
LOG:unknown:///unknown:1+34: Semicolon inserted
LOG:unknown:///unknown:1+107: Semicolon inserted
LOG:unknown:///unknown:1+108: Semicolon inserted
LOG:unknown:///unknown:1+117: Semicolon inserted
LOG:unknown:///unknown:1+107: Semicolon inserted
LOG:unknown:///unknown:1+108: Semicolon inserted
LOG:unknown:///unknown:1+117: Semicolon inserted
LOG:unknown:///unknown:1+19: Semicolon inserted
LOG:unknown:///unknown:1+19: Semicolon inserted
LOG:unknown:///unknown:1+5: Semicolon inserted
LOG:unknown:///unknown:1+5: Semicolon inserted
LOG:unknown:///unknown:1+84: Semicolon inserted
LOG:unknown:///unknown:1+84: Semicolon inserted
LOG:unknown:///unknown:1+30: Semicolon inserted
LOG:unknown:///unknown:1+30: Semicolon inserted
LOG:unknown:///unknown:1+30: Semicolon inserted
LOG:unknown:///unknown:1+30: Semicolon inserted
LOG:unknown:///unknown:1+38: Semicolon inserted
LOG:unknown:///unknown:1+38: Semicolon inserted
LOG:unknown:///unknown:1+13: Semicolon inserted
LOG:unknown:///unknown:1+13: Semicolon inserted
LOG:unknown:///unknown:1+29: Semicolon inserted
LOG:unknown:///unknown:1+29: Semicolon inserted
LOG:unknown:///unknown:1+43: Semicolon inserted
LOG:unknown:///unknown:1+43: Semicolon inserted
LOG:unknown:///unknown:1+25: Semicolon inserted
LOG:unknown:///unknown:1+25: Semicolon inserted
LOG:unknown:///unknown:1+27: Semicolon inserted
LOG:unknown:///unknown:1+27: Semicolon inserted
LOG:unknown:///unknown:1+35: Semicolon inserted
LOG:unknown:///unknown:1+35: Semicolon inserted
LOG:unknown:///unknown:1+39: Semicolon inserted
LOG:unknown:///unknown:1+39: Semicolon inserted
LOG:unknown:///unknown:1+61: Semicolon inserted
LOG:unknown:///unknown:1+62: Semicolon inserted
LOG:unknown:///unknown:1+61: Semicolon inserted
LOG:unknown:///unknown:1+62: Semicolon inserted
LOG:unknown:///unknown:1+63: Semicolon inserted
LOG:unknown:///unknown:1+68: Semicolon inserted
LOG:unknown:///unknown:1+63: Semicolon inserted
LOG:unknown:///unknown:1+68: Semicolon inserted
LOG:unknown:///unknown:1+41: Semicolon inserted
LOG:unknown:///unknown:1+41: Semicolon inserted
LOG:unknown:///unknown:1+16: Semicolon inserted
LOG:unknown:///unknown:1+16: Semicolon inserted
LOG:unknown:///unknown:1+20: Semicolon inserted
LOG:unknown:///unknown:1+20: Semicolon inserted
WARNING:unknown:///unknown:1+2 - 3: Will not work in IE
java.lang.Exception
	at com.google.caja.reporting.EchoingMessageQueue$1.add(EchoingMessageQueue.java:52)
	at com.google.caja.reporting.EchoingMessageQueue$1.add(EchoingMessageQueue.java:40)
	at java.util.AbstractList.add(AbstractList.java:108)
	at com.google.caja.reporting.AbstractMessageQueue.addMessage(AbstractMessageQueue.java:25)
	at com.google.caja.parser.js.Parser.parseExpressionAtom(Parser.java:1138)
	at com.google.caja.parser.js.Parser.parseOp(Parser.java:792)
	at com.google.caja.parser.js.Parser.parseExpressionInt(Parser.java:727)
	at com.google.caja.parser.js.Parser.parseExpressionStmt(Parser.java:1281)
	at com.google.caja.parser.js.Parser.parseStatementWithoutLabel(Parser.java:706)
	at com.google.caja.parser.js.Parser.parseStatement(Parser.java:306)
	at com.google.caja.parser.js.Parser.parseTerminatedStatement(Parser.java:1312)
	at com.google.caja.parser.js.Parser.parseProgramOrFunctionBody(Parser.java:325)
	at com.google.caja.parser.js.Parser.parseProgram(Parser.java:314)
	at com.google.caja.parser.js.Parser.parse(Parser.java:272)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:42)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:31)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:26)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:22)
	at com.google.javascript.jscomp.jsonml.JsonMLConversionTest.testConversion(JsonMLConversionTest.java:79)
	at com.google.javascript.jscomp.jsonml.JsonMLConversionTest.testArray1(JsonMLConversionTest.java:102)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestResultRunner.call(JUnitSingleTestResultRunner.java:36)
	at xxl.java.junit.JUnitSingleTestResultRunner.call(JUnitSingleTestResultRunner.java:11)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
WARNING:unknown:///unknown:1+2 - 3: Will not work in IE
java.lang.Exception
	at com.google.caja.reporting.EchoingMessageQueue$1.add(EchoingMessageQueue.java:52)
	at com.google.caja.reporting.EchoingMessageQueue$1.add(EchoingMessageQueue.java:40)
	at java.util.AbstractList.add(AbstractList.java:108)
	at com.google.caja.reporting.AbstractMessageQueue.addMessage(AbstractMessageQueue.java:25)
	at com.google.caja.parser.js.Parser.parseExpressionAtom(Parser.java:1138)
	at com.google.caja.parser.js.Parser.parseOp(Parser.java:792)
	at com.google.caja.parser.js.Parser.parseExpressionInt(Parser.java:727)
	at com.google.caja.parser.js.Parser.parseExpressionStmt(Parser.java:1281)
	at com.google.caja.parser.js.Parser.parseStatementWithoutLabel(Parser.java:706)
	at com.google.caja.parser.js.Parser.parseStatement(Parser.java:306)
	at com.google.caja.parser.js.Parser.parseTerminatedStatement(Parser.java:1312)
	at com.google.caja.parser.js.Parser.parseProgramOrFunctionBody(Parser.java:325)
	at com.google.caja.parser.js.Parser.parseProgram(Parser.java:314)
	at com.google.caja.parser.js.Parser.parse(Parser.java:272)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:42)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:31)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:26)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:22)
	at com.google.javascript.jscomp.jsonml.JsonMLConversionTest.testConversion(JsonMLConversionTest.java:86)
	at com.google.javascript.jscomp.jsonml.JsonMLConversionTest.testArray1(JsonMLConversionTest.java:102)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestResultRunner.call(JUnitSingleTestResultRunner.java:36)
	at xxl.java.junit.JUnitSingleTestResultRunner.call(JUnitSingleTestResultRunner.java:11)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
LOG:unknown:///unknown:1+17: Semicolon inserted
LOG:unknown:///unknown:1+17: Semicolon inserted
LOG:unknown:///unknown:1+17: Semicolon inserted
LOG:unknown:///unknown:1+30: Semicolon inserted
LOG:unknown:///unknown:1+17: Semicolon inserted
LOG:unknown:///unknown:1+30: Semicolon inserted
LOG:unknown:///unknown:1+22: Semicolon inserted
LOG:unknown:///unknown:1+35: Semicolon inserted
LOG:unknown:///unknown:1+22: Semicolon inserted
LOG:unknown:///unknown:1+35: Semicolon inserted
LOG:unknown:///unknown:1+26: Semicolon inserted
LOG:unknown:///unknown:1+39: Semicolon inserted
LOG:unknown:///unknown:1+26: Semicolon inserted
LOG:unknown:///unknown:1+39: Semicolon inserted
LOG:unknown:///unknown:1+17: Semicolon inserted
LOG:unknown:///unknown:1+17: Semicolon inserted
LOG:unknown:///unknown:1+87: Semicolon inserted
LOG:unknown:///unknown:1+88: Semicolon inserted
LOG:unknown:///unknown:1+87: Semicolon inserted
LOG:unknown:///unknown:1+88: Semicolon inserted
LOG:unknown:///unknown:1+48: Semicolon inserted
LOG:unknown:///unknown:1+48: Semicolon inserted
LOG:unknown:///unknown:1+106: Semicolon inserted
LOG:unknown:///unknown:1+107: Semicolon inserted
LOG:unknown:///unknown:1+106: Semicolon inserted
LOG:unknown:///unknown:1+107: Semicolon inserted
LOG:unknown:///unknown:1+23: Semicolon inserted
LOG:unknown:///unknown:1+23: Semicolon inserted
LOG:unknown:///unknown:1+68: Semicolon inserted
LOG:unknown:///unknown:1+72: Semicolon inserted
LOG:unknown:///unknown:1+68: Semicolon inserted
LOG:unknown:///unknown:1+72: Semicolon inserted
LOG:unknown:///unknown:1+33: Semicolon inserted
LOG:unknown:///unknown:1+33: Semicolon inserted
LOG:unknown:///unknown:1+35: Semicolon inserted
LOG:unknown:///unknown:1+35: Semicolon inserted
LOG:unknown:///unknown:1+59: Semicolon inserted
LOG:unknown:///unknown:1+59: Semicolon inserted
LOG:unknown:///unknown:1+27: Semicolon inserted
LOG:unknown:///unknown:1+27: Semicolon inserted
LOG:unknown:///unknown:1+27: Semicolon inserted
LOG:unknown:///unknown:1+34: Semicolon inserted
LOG:unknown:///unknown:1+27: Semicolon inserted
LOG:unknown:///unknown:1+34: Semicolon inserted
LOG:unknown:///unknown:1+32: Semicolon inserted
LOG:unknown:///unknown:1+32: Semicolon inserted
LOG:unknown:///unknown:1+42: Semicolon inserted
LOG:unknown:///unknown:1+42: Semicolon inserted
LOG:unknown:///unknown:1+58: Semicolon inserted
LOG:unknown:///unknown:1+58: Semicolon inserted
LOG:unknown:///unknown:1+43: Semicolon inserted
LOG:unknown:///unknown:1+59: Semicolon inserted
LOG:unknown:///unknown:1+43: Semicolon inserted
LOG:unknown:///unknown:1+59: Semicolon inserted
May 16, 2016 8:06:23 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 8:06:23 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 8:06:26 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 8:06:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
LOG:unknown:///unknown:1+25: Semicolon inserted
Closure Compiler (http://code.google.com/closure/compiler)
Version: Unversioned directory
Built on: 2016/05/16 12:22
May 16, 2016 8:06:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 8:06:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 8:06:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 8:06:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 8:06:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 8:06:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 8:06:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 8:06:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 8:06:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 8:06:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 8:06:51 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 8:06:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 8:06:54 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 8:06:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
WARNING:unknown:///unknown:1+2 - 3: Will not work in IE
java.lang.Exception
	at com.google.caja.reporting.EchoingMessageQueue$1.add(EchoingMessageQueue.java:52)
	at com.google.caja.reporting.EchoingMessageQueue$1.add(EchoingMessageQueue.java:40)
	at java.util.AbstractList.add(AbstractList.java:108)
	at com.google.caja.reporting.AbstractMessageQueue.addMessage(AbstractMessageQueue.java:25)
	at com.google.caja.parser.js.Parser.parseExpressionAtom(Parser.java:1138)
	at com.google.caja.parser.js.Parser.parseOp(Parser.java:792)
	at com.google.caja.parser.js.Parser.parseExpressionInt(Parser.java:727)
	at com.google.caja.parser.js.Parser.parseExpressionStmt(Parser.java:1281)
	at com.google.caja.parser.js.Parser.parseStatementWithoutLabel(Parser.java:706)
	at com.google.caja.parser.js.Parser.parseStatement(Parser.java:306)
	at com.google.caja.parser.js.Parser.parseTerminatedStatement(Parser.java:1312)
	at com.google.caja.parser.js.Parser.parseProgramOrFunctionBody(Parser.java:325)
	at com.google.caja.parser.js.Parser.parseProgram(Parser.java:314)
	at com.google.caja.parser.js.Parser.parse(Parser.java:272)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:42)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:31)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:26)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:22)
	at com.google.javascript.jscomp.jsonml.JsonMLConversionTest.testConversion(JsonMLConversionTest.java:79)
	at com.google.javascript.jscomp.jsonml.JsonMLConversionTest.testArray1(JsonMLConversionTest.java:102)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestResultRunner.call(JUnitSingleTestResultRunner.java:36)
	at xxl.java.junit.JUnitSingleTestResultRunner.call(JUnitSingleTestResultRunner.java:11)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
May 16, 2016 8:07:15 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 8:07:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
LOG:unknown:///unknown:1+17: Semicolon inserted
Closure Compiler (http://code.google.com/closure/compiler)
Version: Unversioned directory
Built on: 2016/05/16 12:22
May 16, 2016 8:07:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 8:07:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 8:07:33 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 8:07:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
LOG:unknown:///unknown:1+13: Semicolon inserted
May 16, 2016 8:07:47 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - invalid cast - must be a subtype or supertype
from: number
to  : string
function f() { var xyz = /** @type {string} */ (0); }
                                                ^

May 16, 2016 8:07:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
WARNING:unknown:///unknown:1+2 - 3: Will not work in IE
java.lang.Exception
	at com.google.caja.reporting.EchoingMessageQueue$1.add(EchoingMessageQueue.java:52)
	at com.google.caja.reporting.EchoingMessageQueue$1.add(EchoingMessageQueue.java:40)
	at java.util.AbstractList.add(AbstractList.java:108)
	at com.google.caja.reporting.AbstractMessageQueue.addMessage(AbstractMessageQueue.java:25)
	at com.google.caja.parser.js.Parser.parseExpressionAtom(Parser.java:1138)
	at com.google.caja.parser.js.Parser.parseOp(Parser.java:792)
	at com.google.caja.parser.js.Parser.parseExpressionInt(Parser.java:727)
	at com.google.caja.parser.js.Parser.parseExpressionStmt(Parser.java:1281)
	at com.google.caja.parser.js.Parser.parseStatementWithoutLabel(Parser.java:706)
	at com.google.caja.parser.js.Parser.parseStatement(Parser.java:306)
	at com.google.caja.parser.js.Parser.parseTerminatedStatement(Parser.java:1312)
	at com.google.caja.parser.js.Parser.parseProgramOrFunctionBody(Parser.java:325)
	at com.google.caja.parser.js.Parser.parseProgram(Parser.java:314)
	at com.google.caja.parser.js.Parser.parse(Parser.java:272)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:42)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:31)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:26)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:22)
	at com.google.javascript.jscomp.jsonml.JsonMLConversionTest.testConversion(JsonMLConversionTest.java:79)
	at com.google.javascript.jscomp.jsonml.JsonMLConversionTest.testArray(JsonMLConversionTest.java:91)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestResultRunner.call(JUnitSingleTestResultRunner.java:36)
	at xxl.java.junit.JUnitSingleTestResultRunner.call(JUnitSingleTestResultRunner.java:11)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
java.lang.RuntimeException: Unable to communicate with the project
	at fr.inria.lille.spirals.repair.synthesizer.SynthesizerImpl.run(SynthesizerImpl.java:160)
	at fr.inria.lille.repair.nopol.synth.brutpol.BrutSynthesizer.buildPatch(BrutSynthesizer.java:141)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:185)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:119)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:89)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:84)
	at fr.inria.lille.repair.Main.main(Main.java:61)
Caused by: java.io.IOException: Cannot run program "java": error=7, Argument list too long
	at java.lang.ProcessBuilder.start(ProcessBuilder.java:1047)
	at fr.inria.lille.spirals.repair.vm.DebugJUnitRunner.run(DebugJUnitRunner.java:91)
	at fr.inria.lille.spirals.repair.synthesizer.SynthesizerImpl.run(SynthesizerImpl.java:148)
	... 6 more
Caused by: java.io.IOException: error=7, Argument list too long
	at java.lang.UNIXProcess.forkAndExec(Native Method)
	at java.lang.UNIXProcess.<init>(UNIXProcess.java:187)
	at java.lang.ProcessImpl.start(ProcessImpl.java:130)
	at java.lang.ProcessBuilder.start(ProcessBuilder.java:1028)
	... 8 more
May 16, 2016 8:09:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 8:09:28 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 8:09:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 8:09:28 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 8:09:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 8:09:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 8:09:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 8:09:28 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 8:09:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 8:09:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 8:09:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 8:09:29 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 8:09:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 8:09:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 8:09:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 8:09:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 8:09:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 8:09:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 8:09:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 8:09:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 8:09:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 8:09:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 8:09:30 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 8:09:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 8:09:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 8:09:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 8:09:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 8:09:30 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 8:09:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 8:09:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 8:09:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 8:09:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 8:09:31 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 8:09:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 8:09:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 8:09:32 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - invalid cast - must be a subtype or supertype
from: number
to  : string
function f() { var xyz = /** @type {string} */ (0); }
                                                ^

May 16, 2016 8:09:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 8:09:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 8:09:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 8:09:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 8:09:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 8:09:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 8:09:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 8:09:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 8:09:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 8:09:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 8:09:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 8:09:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 8:09:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 8:09:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 8:09:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 8:09:32 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 8:09:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
Closure Compiler (http://code.google.com/closure/compiler)
Version: Unversioned directory
Built on: 2016/05/16 12:22
Closure Compiler (http://code.google.com/closure/compiler)
Version: Unversioned directory
Built on: 2016/05/16 12:22
LOG:unknown:///unknown:1+19: Semicolon inserted
LOG:unknown:///unknown:1+19: Semicolon inserted
LOG:unknown:///unknown:1+46: Semicolon inserted
LOG:unknown:///unknown:1+46: Semicolon inserted
LOG:unknown:///unknown:1+34: Semicolon inserted
LOG:unknown:///unknown:1+34: Semicolon inserted
LOG:unknown:///unknown:1+34: Semicolon inserted
LOG:unknown:///unknown:1+34: Semicolon inserted
LOG:unknown:///unknown:1+42: Semicolon inserted
LOG:unknown:///unknown:1+42: Semicolon inserted
LOG:unknown:///unknown:1+28: Semicolon inserted
LOG:unknown:///unknown:1+28: Semicolon inserted
LOG:unknown:///unknown:1+42: Semicolon inserted
LOG:unknown:///unknown:1+42: Semicolon inserted
LOG:unknown:///unknown:1+62: Semicolon inserted
LOG:unknown:///unknown:1+63: Semicolon inserted
LOG:unknown:///unknown:1+62: Semicolon inserted
LOG:unknown:///unknown:1+63: Semicolon inserted
LOG:unknown:///unknown:1+30: Semicolon inserted
LOG:unknown:///unknown:1+30: Semicolon inserted
LOG:unknown:///unknown:1+109: Semicolon inserted
LOG:unknown:///unknown:1+110: Semicolon inserted
LOG:unknown:///unknown:1+109: Semicolon inserted
LOG:unknown:///unknown:1+110: Semicolon inserted
LOG:unknown:///unknown:1+19: Semicolon inserted
LOG:unknown:///unknown:1+19: Semicolon inserted
LOG:unknown:///unknown:1+43: Semicolon inserted
LOG:unknown:///unknown:1+43: Semicolon inserted
LOG:unknown:///unknown:1+48: Semicolon inserted
LOG:unknown:///unknown:1+48: Semicolon inserted
LOG:unknown:///unknown:1+44: Semicolon inserted
LOG:unknown:///unknown:1+71: Semicolon inserted
LOG:unknown:///unknown:1+44: Semicolon inserted
LOG:unknown:///unknown:1+71: Semicolon inserted
LOG:unknown:///unknown:1+22: Semicolon inserted
LOG:unknown:///unknown:1+39: Semicolon inserted
LOG:unknown:///unknown:1+22: Semicolon inserted
LOG:unknown:///unknown:1+39: Semicolon inserted
LOG:unknown:///unknown:1+95: Semicolon inserted
LOG:unknown:///unknown:1+102: Semicolon inserted
LOG:unknown:///unknown:1+119: Semicolon inserted
LOG:unknown:///unknown:1+95: Semicolon inserted
LOG:unknown:///unknown:1+102: Semicolon inserted
LOG:unknown:///unknown:1+119: Semicolon inserted
LOG:unknown:///unknown:1+22: Semicolon inserted
LOG:unknown:///unknown:1+37: Semicolon inserted
LOG:unknown:///unknown:1+22: Semicolon inserted
LOG:unknown:///unknown:1+37: Semicolon inserted
LOG:unknown:///unknown:1+95: Semicolon inserted
LOG:unknown:///unknown:1+102: Semicolon inserted
LOG:unknown:///unknown:1+117: Semicolon inserted
LOG:unknown:///unknown:1+95: Semicolon inserted
LOG:unknown:///unknown:1+102: Semicolon inserted
LOG:unknown:///unknown:1+117: Semicolon inserted
LOG:unknown:///unknown:1+22: Semicolon inserted
LOG:unknown:///unknown:1+22: Semicolon inserted
LOG:unknown:///unknown:1+95: Semicolon inserted
LOG:unknown:///unknown:1+102: Semicolon inserted
LOG:unknown:///unknown:1+119: Semicolon inserted
LOG:unknown:///unknown:1+134: Semicolon inserted
LOG:unknown:///unknown:1+95: Semicolon inserted
LOG:unknown:///unknown:1+102: Semicolon inserted
LOG:unknown:///unknown:1+119: Semicolon inserted
LOG:unknown:///unknown:1+134: Semicolon inserted
WARNING:unknown:///unknown:1+2 - 3: Will not work in IE
java.lang.Exception
	at com.google.caja.reporting.EchoingMessageQueue$1.add(EchoingMessageQueue.java:52)
	at com.google.caja.reporting.EchoingMessageQueue$1.add(EchoingMessageQueue.java:40)
	at java.util.AbstractList.add(AbstractList.java:108)
	at com.google.caja.reporting.AbstractMessageQueue.addMessage(AbstractMessageQueue.java:25)
	at com.google.caja.parser.js.Parser.parseExpressionAtom(Parser.java:1138)
	at com.google.caja.parser.js.Parser.parseOp(Parser.java:792)
	at com.google.caja.parser.js.Parser.parseExpressionInt(Parser.java:727)
	at com.google.caja.parser.js.Parser.parseExpressionStmt(Parser.java:1281)
	at com.google.caja.parser.js.Parser.parseStatementWithoutLabel(Parser.java:706)
	at com.google.caja.parser.js.Parser.parseStatement(Parser.java:306)
	at com.google.caja.parser.js.Parser.parseTerminatedStatement(Parser.java:1312)
	at com.google.caja.parser.js.Parser.parseProgramOrFunctionBody(Parser.java:325)
	at com.google.caja.parser.js.Parser.parseProgram(Parser.java:314)
	at com.google.caja.parser.js.Parser.parse(Parser.java:272)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:42)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:31)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:26)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:22)
	at com.google.javascript.jscomp.jsonml.JsonMLConversionTest.testConversion(JsonMLConversionTest.java:79)
	at com.google.javascript.jscomp.jsonml.JsonMLConversionTest.testArray(JsonMLConversionTest.java:91)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestResultRunner.call(JUnitSingleTestResultRunner.java:36)
	at xxl.java.junit.JUnitSingleTestResultRunner.call(JUnitSingleTestResultRunner.java:11)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
WARNING:unknown:///unknown:1+2 - 3: Will not work in IE
java.lang.Exception
	at com.google.caja.reporting.EchoingMessageQueue$1.add(EchoingMessageQueue.java:52)
	at com.google.caja.reporting.EchoingMessageQueue$1.add(EchoingMessageQueue.java:40)
	at java.util.AbstractList.add(AbstractList.java:108)
	at com.google.caja.reporting.AbstractMessageQueue.addMessage(AbstractMessageQueue.java:25)
	at com.google.caja.parser.js.Parser.parseExpressionAtom(Parser.java:1138)
	at com.google.caja.parser.js.Parser.parseOp(Parser.java:792)
	at com.google.caja.parser.js.Parser.parseExpressionInt(Parser.java:727)
	at com.google.caja.parser.js.Parser.parseExpressionStmt(Parser.java:1281)
	at com.google.caja.parser.js.Parser.parseStatementWithoutLabel(Parser.java:706)
	at com.google.caja.parser.js.Parser.parseStatement(Parser.java:306)
	at com.google.caja.parser.js.Parser.parseTerminatedStatement(Parser.java:1312)
	at com.google.caja.parser.js.Parser.parseProgramOrFunctionBody(Parser.java:325)
	at com.google.caja.parser.js.Parser.parseProgram(Parser.java:314)
	at com.google.caja.parser.js.Parser.parse(Parser.java:272)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:42)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:31)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:26)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:22)
	at com.google.javascript.jscomp.jsonml.JsonMLConversionTest.testConversion(JsonMLConversionTest.java:86)
	at com.google.javascript.jscomp.jsonml.JsonMLConversionTest.testArray(JsonMLConversionTest.java:91)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestResultRunner.call(JUnitSingleTestResultRunner.java:36)
	at xxl.java.junit.JUnitSingleTestResultRunner.call(JUnitSingleTestResultRunner.java:11)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
LOG:unknown:///unknown:1+39: Semicolon inserted
LOG:unknown:///unknown:1+39: Semicolon inserted
LOG:unknown:///unknown:1+35: Semicolon inserted
LOG:unknown:///unknown:1+35: Semicolon inserted
LOG:unknown:///unknown:1+43: Semicolon inserted
LOG:unknown:///unknown:1+43: Semicolon inserted
LOG:unknown:///unknown:1+36: Semicolon inserted
LOG:unknown:///unknown:1+36: Semicolon inserted
LOG:unknown:///unknown:1+23: Semicolon inserted
LOG:unknown:///unknown:1+23: Semicolon inserted
LOG:unknown:///unknown:1+40: Semicolon inserted
LOG:unknown:///unknown:1+40: Semicolon inserted
LOG:unknown:///unknown:1+39: Semicolon inserted
LOG:unknown:///unknown:1+66: Semicolon inserted
LOG:unknown:///unknown:1+39: Semicolon inserted
LOG:unknown:///unknown:1+66: Semicolon inserted
LOG:unknown:///unknown:1+102: Semicolon inserted
LOG:unknown:///unknown:1+103: Semicolon inserted
LOG:unknown:///unknown:1+102: Semicolon inserted
LOG:unknown:///unknown:1+103: Semicolon inserted
LOG:unknown:///unknown:1+19: Semicolon inserted
LOG:unknown:///unknown:1+19: Semicolon inserted
LOG:unknown:///unknown:1+37: Semicolon inserted
LOG:unknown:///unknown:1+37: Semicolon inserted
LOG:unknown:///unknown:1+35: Semicolon inserted
LOG:unknown:///unknown:1+62: Semicolon inserted
LOG:unknown:///unknown:1+35: Semicolon inserted
LOG:unknown:///unknown:1+62: Semicolon inserted
LOG:unknown:///unknown:1+98: Semicolon inserted
LOG:unknown:///unknown:1+99: Semicolon inserted
LOG:unknown:///unknown:1+98: Semicolon inserted
LOG:unknown:///unknown:1+99: Semicolon inserted
LOG:unknown:///unknown:1+104: Semicolon inserted
LOG:unknown:///unknown:1+105: Semicolon inserted
LOG:unknown:///unknown:1+104: Semicolon inserted
LOG:unknown:///unknown:1+105: Semicolon inserted
LOG:unknown:///unknown:1+18: Semicolon inserted
LOG:unknown:///unknown:1+18: Semicolon inserted
LOG:unknown:///unknown:1+97: Semicolon inserted
LOG:unknown:///unknown:1+98: Semicolon inserted
LOG:unknown:///unknown:1+97: Semicolon inserted
LOG:unknown:///unknown:1+98: Semicolon inserted
LOG:unknown:///unknown:1+15: Semicolon inserted
LOG:unknown:///unknown:1+15: Semicolon inserted
LOG:unknown:///unknown:1+34: Semicolon inserted
LOG:unknown:///unknown:1+34: Semicolon inserted
LOG:unknown:///unknown:1+107: Semicolon inserted
LOG:unknown:///unknown:1+108: Semicolon inserted
LOG:unknown:///unknown:1+117: Semicolon inserted
LOG:unknown:///unknown:1+107: Semicolon inserted
LOG:unknown:///unknown:1+108: Semicolon inserted
LOG:unknown:///unknown:1+117: Semicolon inserted
LOG:unknown:///unknown:1+19: Semicolon inserted
LOG:unknown:///unknown:1+19: Semicolon inserted
LOG:unknown:///unknown:1+5: Semicolon inserted
LOG:unknown:///unknown:1+5: Semicolon inserted
LOG:unknown:///unknown:1+84: Semicolon inserted
LOG:unknown:///unknown:1+84: Semicolon inserted
LOG:unknown:///unknown:1+30: Semicolon inserted
LOG:unknown:///unknown:1+30: Semicolon inserted
LOG:unknown:///unknown:1+30: Semicolon inserted
LOG:unknown:///unknown:1+30: Semicolon inserted
LOG:unknown:///unknown:1+38: Semicolon inserted
LOG:unknown:///unknown:1+38: Semicolon inserted
LOG:unknown:///unknown:1+13: Semicolon inserted
LOG:unknown:///unknown:1+13: Semicolon inserted
LOG:unknown:///unknown:1+29: Semicolon inserted
LOG:unknown:///unknown:1+29: Semicolon inserted
LOG:unknown:///unknown:1+43: Semicolon inserted
LOG:unknown:///unknown:1+43: Semicolon inserted
LOG:unknown:///unknown:1+25: Semicolon inserted
LOG:unknown:///unknown:1+25: Semicolon inserted
LOG:unknown:///unknown:1+27: Semicolon inserted
LOG:unknown:///unknown:1+27: Semicolon inserted
LOG:unknown:///unknown:1+35: Semicolon inserted
LOG:unknown:///unknown:1+35: Semicolon inserted
LOG:unknown:///unknown:1+39: Semicolon inserted
LOG:unknown:///unknown:1+39: Semicolon inserted
LOG:unknown:///unknown:1+61: Semicolon inserted
LOG:unknown:///unknown:1+62: Semicolon inserted
LOG:unknown:///unknown:1+61: Semicolon inserted
LOG:unknown:///unknown:1+62: Semicolon inserted
LOG:unknown:///unknown:1+63: Semicolon inserted
LOG:unknown:///unknown:1+68: Semicolon inserted
LOG:unknown:///unknown:1+63: Semicolon inserted
LOG:unknown:///unknown:1+68: Semicolon inserted
LOG:unknown:///unknown:1+41: Semicolon inserted
LOG:unknown:///unknown:1+41: Semicolon inserted
LOG:unknown:///unknown:1+16: Semicolon inserted
LOG:unknown:///unknown:1+16: Semicolon inserted
LOG:unknown:///unknown:1+20: Semicolon inserted
LOG:unknown:///unknown:1+20: Semicolon inserted
WARNING:unknown:///unknown:1+2 - 3: Will not work in IE
java.lang.Exception
	at com.google.caja.reporting.EchoingMessageQueue$1.add(EchoingMessageQueue.java:52)
	at com.google.caja.reporting.EchoingMessageQueue$1.add(EchoingMessageQueue.java:40)
	at java.util.AbstractList.add(AbstractList.java:108)
	at com.google.caja.reporting.AbstractMessageQueue.addMessage(AbstractMessageQueue.java:25)
	at com.google.caja.parser.js.Parser.parseExpressionAtom(Parser.java:1138)
	at com.google.caja.parser.js.Parser.parseOp(Parser.java:792)
	at com.google.caja.parser.js.Parser.parseExpressionInt(Parser.java:727)
	at com.google.caja.parser.js.Parser.parseExpressionStmt(Parser.java:1281)
	at com.google.caja.parser.js.Parser.parseStatementWithoutLabel(Parser.java:706)
	at com.google.caja.parser.js.Parser.parseStatement(Parser.java:306)
	at com.google.caja.parser.js.Parser.parseTerminatedStatement(Parser.java:1312)
	at com.google.caja.parser.js.Parser.parseProgramOrFunctionBody(Parser.java:325)
	at com.google.caja.parser.js.Parser.parseProgram(Parser.java:314)
	at com.google.caja.parser.js.Parser.parse(Parser.java:272)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:42)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:31)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:26)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:22)
	at com.google.javascript.jscomp.jsonml.JsonMLConversionTest.testConversion(JsonMLConversionTest.java:79)
	at com.google.javascript.jscomp.jsonml.JsonMLConversionTest.testArray1(JsonMLConversionTest.java:102)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestResultRunner.call(JUnitSingleTestResultRunner.java:36)
	at xxl.java.junit.JUnitSingleTestResultRunner.call(JUnitSingleTestResultRunner.java:11)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
WARNING:unknown:///unknown:1+2 - 3: Will not work in IE
java.lang.Exception
	at com.google.caja.reporting.EchoingMessageQueue$1.add(EchoingMessageQueue.java:52)
	at com.google.caja.reporting.EchoingMessageQueue$1.add(EchoingMessageQueue.java:40)
	at java.util.AbstractList.add(AbstractList.java:108)
	at com.google.caja.reporting.AbstractMessageQueue.addMessage(AbstractMessageQueue.java:25)
	at com.google.caja.parser.js.Parser.parseExpressionAtom(Parser.java:1138)
	at com.google.caja.parser.js.Parser.parseOp(Parser.java:792)
	at com.google.caja.parser.js.Parser.parseExpressionInt(Parser.java:727)
	at com.google.caja.parser.js.Parser.parseExpressionStmt(Parser.java:1281)
	at com.google.caja.parser.js.Parser.parseStatementWithoutLabel(Parser.java:706)
	at com.google.caja.parser.js.Parser.parseStatement(Parser.java:306)
	at com.google.caja.parser.js.Parser.parseTerminatedStatement(Parser.java:1312)
	at com.google.caja.parser.js.Parser.parseProgramOrFunctionBody(Parser.java:325)
	at com.google.caja.parser.js.Parser.parseProgram(Parser.java:314)
	at com.google.caja.parser.js.Parser.parse(Parser.java:272)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:42)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:31)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:26)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:22)
	at com.google.javascript.jscomp.jsonml.JsonMLConversionTest.testConversion(JsonMLConversionTest.java:86)
	at com.google.javascript.jscomp.jsonml.JsonMLConversionTest.testArray1(JsonMLConversionTest.java:102)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestResultRunner.call(JUnitSingleTestResultRunner.java:36)
	at xxl.java.junit.JUnitSingleTestResultRunner.call(JUnitSingleTestResultRunner.java:11)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
LOG:unknown:///unknown:1+17: Semicolon inserted
LOG:unknown:///unknown:1+17: Semicolon inserted
LOG:unknown:///unknown:1+17: Semicolon inserted
LOG:unknown:///unknown:1+30: Semicolon inserted
LOG:unknown:///unknown:1+17: Semicolon inserted
LOG:unknown:///unknown:1+30: Semicolon inserted
LOG:unknown:///unknown:1+22: Semicolon inserted
LOG:unknown:///unknown:1+35: Semicolon inserted
LOG:unknown:///unknown:1+22: Semicolon inserted
LOG:unknown:///unknown:1+35: Semicolon inserted
LOG:unknown:///unknown:1+26: Semicolon inserted
LOG:unknown:///unknown:1+39: Semicolon inserted
LOG:unknown:///unknown:1+26: Semicolon inserted
LOG:unknown:///unknown:1+39: Semicolon inserted
LOG:unknown:///unknown:1+17: Semicolon inserted
LOG:unknown:///unknown:1+17: Semicolon inserted
LOG:unknown:///unknown:1+87: Semicolon inserted
LOG:unknown:///unknown:1+88: Semicolon inserted
LOG:unknown:///unknown:1+87: Semicolon inserted
LOG:unknown:///unknown:1+88: Semicolon inserted
LOG:unknown:///unknown:1+48: Semicolon inserted
LOG:unknown:///unknown:1+48: Semicolon inserted
LOG:unknown:///unknown:1+106: Semicolon inserted
LOG:unknown:///unknown:1+107: Semicolon inserted
LOG:unknown:///unknown:1+106: Semicolon inserted
LOG:unknown:///unknown:1+107: Semicolon inserted
LOG:unknown:///unknown:1+23: Semicolon inserted
LOG:unknown:///unknown:1+23: Semicolon inserted
LOG:unknown:///unknown:1+68: Semicolon inserted
LOG:unknown:///unknown:1+72: Semicolon inserted
LOG:unknown:///unknown:1+68: Semicolon inserted
LOG:unknown:///unknown:1+72: Semicolon inserted
LOG:unknown:///unknown:1+33: Semicolon inserted
LOG:unknown:///unknown:1+33: Semicolon inserted
LOG:unknown:///unknown:1+35: Semicolon inserted
LOG:unknown:///unknown:1+35: Semicolon inserted
LOG:unknown:///unknown:1+59: Semicolon inserted
LOG:unknown:///unknown:1+59: Semicolon inserted
LOG:unknown:///unknown:1+27: Semicolon inserted
LOG:unknown:///unknown:1+27: Semicolon inserted
LOG:unknown:///unknown:1+27: Semicolon inserted
LOG:unknown:///unknown:1+34: Semicolon inserted
LOG:unknown:///unknown:1+27: Semicolon inserted
LOG:unknown:///unknown:1+34: Semicolon inserted
LOG:unknown:///unknown:1+32: Semicolon inserted
LOG:unknown:///unknown:1+32: Semicolon inserted
LOG:unknown:///unknown:1+42: Semicolon inserted
LOG:unknown:///unknown:1+42: Semicolon inserted
LOG:unknown:///unknown:1+58: Semicolon inserted
LOG:unknown:///unknown:1+58: Semicolon inserted
LOG:unknown:///unknown:1+43: Semicolon inserted
LOG:unknown:///unknown:1+59: Semicolon inserted
LOG:unknown:///unknown:1+43: Semicolon inserted
LOG:unknown:///unknown:1+59: Semicolon inserted
May 16, 2016 8:10:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 8:10:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 8:10:53 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 8:10:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
LOG:unknown:///unknown:1+25: Semicolon inserted
Closure Compiler (http://code.google.com/closure/compiler)
Version: Unversioned directory
Built on: 2016/05/16 12:22
May 16, 2016 8:11:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 8:11:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 8:11:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 8:11:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 8:11:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 8:11:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 8:11:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 8:11:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 8:11:06 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 8:11:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 8:11:07 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 8:11:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 8:11:09 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 8:11:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
WARNING:unknown:///unknown:1+2 - 3: Will not work in IE
java.lang.Exception
	at com.google.caja.reporting.EchoingMessageQueue$1.add(EchoingMessageQueue.java:52)
	at com.google.caja.reporting.EchoingMessageQueue$1.add(EchoingMessageQueue.java:40)
	at java.util.AbstractList.add(AbstractList.java:108)
	at com.google.caja.reporting.AbstractMessageQueue.addMessage(AbstractMessageQueue.java:25)
	at com.google.caja.parser.js.Parser.parseExpressionAtom(Parser.java:1138)
	at com.google.caja.parser.js.Parser.parseOp(Parser.java:792)
	at com.google.caja.parser.js.Parser.parseExpressionInt(Parser.java:727)
	at com.google.caja.parser.js.Parser.parseExpressionStmt(Parser.java:1281)
	at com.google.caja.parser.js.Parser.parseStatementWithoutLabel(Parser.java:706)
	at com.google.caja.parser.js.Parser.parseStatement(Parser.java:306)
	at com.google.caja.parser.js.Parser.parseTerminatedStatement(Parser.java:1312)
	at com.google.caja.parser.js.Parser.parseProgramOrFunctionBody(Parser.java:325)
	at com.google.caja.parser.js.Parser.parseProgram(Parser.java:314)
	at com.google.caja.parser.js.Parser.parse(Parser.java:272)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:42)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:31)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:26)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:22)
	at com.google.javascript.jscomp.jsonml.JsonMLConversionTest.testConversion(JsonMLConversionTest.java:79)
	at com.google.javascript.jscomp.jsonml.JsonMLConversionTest.testArray1(JsonMLConversionTest.java:102)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestResultRunner.call(JUnitSingleTestResultRunner.java:36)
	at xxl.java.junit.JUnitSingleTestResultRunner.call(JUnitSingleTestResultRunner.java:11)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
May 16, 2016 8:11:22 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 8:11:22 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
LOG:unknown:///unknown:1+17: Semicolon inserted
Closure Compiler (http://code.google.com/closure/compiler)
Version: Unversioned directory
Built on: 2016/05/16 12:22
May 16, 2016 8:11:27 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 8:11:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 8:11:30 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 8:11:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
LOG:unknown:///unknown:1+13: Semicolon inserted
May 16, 2016 8:11:38 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - invalid cast - must be a subtype or supertype
from: number
to  : string
function f() { var xyz = /** @type {string} */ (0); }
                                                ^

May 16, 2016 8:11:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
WARNING:unknown:///unknown:1+2 - 3: Will not work in IE
java.lang.Exception
	at com.google.caja.reporting.EchoingMessageQueue$1.add(EchoingMessageQueue.java:52)
	at com.google.caja.reporting.EchoingMessageQueue$1.add(EchoingMessageQueue.java:40)
	at java.util.AbstractList.add(AbstractList.java:108)
	at com.google.caja.reporting.AbstractMessageQueue.addMessage(AbstractMessageQueue.java:25)
	at com.google.caja.parser.js.Parser.parseExpressionAtom(Parser.java:1138)
	at com.google.caja.parser.js.Parser.parseOp(Parser.java:792)
	at com.google.caja.parser.js.Parser.parseExpressionInt(Parser.java:727)
	at com.google.caja.parser.js.Parser.parseExpressionStmt(Parser.java:1281)
	at com.google.caja.parser.js.Parser.parseStatementWithoutLabel(Parser.java:706)
	at com.google.caja.parser.js.Parser.parseStatement(Parser.java:306)
	at com.google.caja.parser.js.Parser.parseTerminatedStatement(Parser.java:1312)
	at com.google.caja.parser.js.Parser.parseProgramOrFunctionBody(Parser.java:325)
	at com.google.caja.parser.js.Parser.parseProgram(Parser.java:314)
	at com.google.caja.parser.js.Parser.parse(Parser.java:272)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:42)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:31)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:26)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:22)
	at com.google.javascript.jscomp.jsonml.JsonMLConversionTest.testConversion(JsonMLConversionTest.java:79)
	at com.google.javascript.jscomp.jsonml.JsonMLConversionTest.testArray(JsonMLConversionTest.java:91)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestResultRunner.call(JUnitSingleTestResultRunner.java:36)
	at xxl.java.junit.JUnitSingleTestResultRunner.call(JUnitSingleTestResultRunner.java:11)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
java.lang.RuntimeException: Unable to communicate with the project
	at fr.inria.lille.spirals.repair.synthesizer.SynthesizerImpl.run(SynthesizerImpl.java:160)
	at fr.inria.lille.repair.nopol.synth.brutpol.BrutSynthesizer.buildPatch(BrutSynthesizer.java:141)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:185)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:119)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:89)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:84)
	at fr.inria.lille.repair.Main.main(Main.java:61)
Caused by: java.io.IOException: Cannot run program "java": error=7, Argument list too long
	at java.lang.ProcessBuilder.start(ProcessBuilder.java:1047)
	at fr.inria.lille.spirals.repair.vm.DebugJUnitRunner.run(DebugJUnitRunner.java:91)
	at fr.inria.lille.spirals.repair.synthesizer.SynthesizerImpl.run(SynthesizerImpl.java:148)
	... 6 more
Caused by: java.io.IOException: error=7, Argument list too long
	at java.lang.UNIXProcess.forkAndExec(Native Method)
	at java.lang.UNIXProcess.<init>(UNIXProcess.java:187)
	at java.lang.ProcessImpl.start(ProcessImpl.java:130)
	at java.lang.ProcessBuilder.start(ProcessBuilder.java:1028)
	... 8 more
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:88)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:56)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:154)
	at fr.inria.lille.commons.spoon.SpoonedFile.processModelledClasses(SpoonedFile.java:138)
	at fr.inria.lille.commons.spoon.SpoonedFile.process(SpoonedFile.java:128)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:119)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:115)
	at fr.inria.lille.repair.nopol.synth.brutpol.BrutSynthesizer.buildPatch(BrutSynthesizer.java:73)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:185)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:119)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:89)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:84)
	at fr.inria.lille.repair.Main.main(Main.java:61)
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:88)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:56)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:154)
	at fr.inria.lille.commons.spoon.SpoonedFile.processModelledClasses(SpoonedFile.java:138)
	at fr.inria.lille.commons.spoon.SpoonedFile.process(SpoonedFile.java:128)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:119)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:115)
	at fr.inria.lille.repair.nopol.synth.brutpol.BrutSynthesizer.buildPatch(BrutSynthesizer.java:73)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:185)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:119)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:89)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:84)
	at fr.inria.lille.repair.Main.main(Main.java:61)
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:88)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:56)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:154)
	at fr.inria.lille.commons.spoon.SpoonedFile.processModelledClasses(SpoonedFile.java:138)
	at fr.inria.lille.commons.spoon.SpoonedFile.process(SpoonedFile.java:128)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:119)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:115)
	at fr.inria.lille.repair.nopol.synth.brutpol.BrutSynthesizer.buildPatch(BrutSynthesizer.java:73)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:185)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:119)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:89)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:84)
	at fr.inria.lille.repair.Main.main(Main.java:61)
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:88)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:56)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:154)
	at fr.inria.lille.commons.spoon.SpoonedFile.processModelledClasses(SpoonedFile.java:138)
	at fr.inria.lille.commons.spoon.SpoonedFile.process(SpoonedFile.java:128)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:119)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:115)
	at fr.inria.lille.repair.nopol.synth.brutpol.BrutSynthesizer.buildPatch(BrutSynthesizer.java:73)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:185)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:119)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:89)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:84)
	at fr.inria.lille.repair.Main.main(Main.java:61)
May 16, 2016 8:16:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 77.8% typed
May 16, 2016 8:16:48 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.getCssName around literal 'foo'
var x = 'foo';
        ^

May 16, 2016 8:16:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 8:16:49 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 8:16:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 8:16:49 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs:1: WARNING - name extern is not undefined in the externs.
extern.foo
^

May 16, 2016 8:16:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 8:16:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "foo" namespace never provided
var goog = {}; goog.require = function(x) {}; goog.require('foo');
                                              ^

May 16, 2016 8:16:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 8:16:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 8:16:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 8:16:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 8:16:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 75% typed
May 16, 2016 8:16:49 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:4: WARNING - Parse error. Cycle detected in inheritance chain of type Foo
 */ Foo = /** @type {function(new:Foo)} */ (AyncTestCase());
                                  ^

May 16, 2016 8:16:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 60% typed
May 16, 2016 8:16:49 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 8:16:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 8:16:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable referenced before declaration: x
x = 3; var x = 5;
^

May 16, 2016 8:16:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 8:16:49 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - missing goog.provide('f')
function f() { var arguments; }
         ^

May 16, 2016 8:16:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 8:16:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 8:16:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 8:16:49 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo$bar assigned a value more than once
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 8:16:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 8:16:49 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 8:16:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 8:16:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:2: ERROR - unreachable code
 3; }
 ^

May 16, 2016 8:16:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 8:16:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - required "goog.beer" namespace not provided yet
goog.require('goog.beer');
^

May 16, 2016 8:16:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 8:16:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 8:16:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant FOO assigned a value more than once
var FOO = true; FOO = false
                ^

May 16, 2016 8:16:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 8:16:50 PM com.google.javascript.jscomp.Tracer logCurrentThreadTrace
WARNING: timers:
      50.749 Start        [Compiler] parseInputs
    0 50.749 Done    0 ms [Compiler] parseInputs
    0 50.749 Start        JSCompiler
    0 50.749 Done    0 ms JSCompiler
    0 50.749 Start        JSCompiler
    0 50.749 Done    0 ms JSCompiler
    0 50.749 Start        JSCompiler
    0 50.749 Done    0 ms JSCompiler
    0 50.749 Start        JSCompiler
    1 50.750 Done    1 ms JSCompiler
    0 50.750 Start        JSCompiler
    0 50.750 Done    0 ms JSCompiler
    0 50.750 Start        [Compiler] normalize
    0 50.750 Done    0 ms [Compiler] normalize
    0 50.750 Start        JSCompiler
    0 50.750 Done    0 ms JSCompiler
    0 50.750 Start        JSCompiler
    0 50.750 Done    0 ms JSCompiler
    0 50.750 Start        JSCompiler
    0 50.750 Done    0 ms JSCompiler
    0 50.750 Start        JSCompiler
    0 50.750 Done    0 ms JSCompiler
    0 50.750 Start        JSCompiler
    0 50.750 Done    0 ms JSCompiler
    0 50.750 Start        JSCompiler
    0 50.750 Done    0 ms JSCompiler
    0 50.750 Start        JSCompiler
    0 50.750 Done    0 ms JSCompiler
    0 50.750 Start        JSCompiler
    0 50.750 Done    0 ms JSCompiler
    0 50.750 Start        JSCompiler
    0 50.750 Done    0 ms JSCompiler
    0 50.750 Start        JSCompiler
    0 50.750 Done    0 ms JSCompiler
    0 50.750 Start        JSCompiler
    0 50.750 Done    0 ms JSCompiler
    0 50.750 Start        JSCompiler
    0 50.750 Done    0 ms JSCompiler
    0 50.750 Start        JSCompiler
    0 50.750 Done    0 ms JSCompiler
 TOTAL Compiler 2 (0 ms)

May 16, 2016 8:16:50 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 8:16:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 8:16:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 8:16:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 8:16:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 8:16:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 8:16:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 8:16:50 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 8:16:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 8:16:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 8:16:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 8:16:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 88.9% typed
May 16, 2016 8:16:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Variable f has been deprecated.
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 8:16:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 8:16:50 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Missing return statement. Function expected to return number.
/** @return {number} */ function f() { if (f) { return 3; } }
                        ^

May 16, 2016 8:16:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 8:16:50 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - References to the global RegExp object prevents optimization of regular expressions.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 8:16:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 8:16:50 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 8:16:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 8:16:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - constant foo assigned a value more than once
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 8:16:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 8:16:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:3: ERROR - constant x assigned a value more than once
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 8:16:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 8:16:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 8:16:51 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 8:16:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 8:16:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 8:16:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 8:16:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - x.z is never defined
var x = {}; var y = x.z;
                    ^

May 16, 2016 8:16:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 8:16:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - 'Foo' used but not goog.require'd
new Foo();
^

May 16, 2016 8:16:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 8:16:51 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:9: WARNING - actual parameter 1 of C.prototype.someMethod does not match formal parameter
found   : number
required: string
x.someMethod(x.someProperty);
             ^

May 16, 2016 8:16:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 8:16:51 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i1:1: ERROR - Access to private variable f not allowed outside file i0.
function g() { f(); }
               ^

May 16, 2016 8:16:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 8:16:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - missing goog.provide('Foo')
/** @constructor */ function Foo() {}
                             ^

May 16, 2016 8:16:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 8:16:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 57.1% typed
May 16, 2016 8:16:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 8:16:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variables, functions, and arguments cannot be deleted in ES5 strict mode
var a  = 2; delete a;
            ^

May 16, 2016 8:16:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 8:16:52 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 8:16:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s), 100% typed
May 16, 2016 8:16:52 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - invalid cast - must be a subtype or supertype
from: number
to  : string
function f() { var xyz = /** @type {string} */ (0); }
                                                ^

May 16, 2016 8:16:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 8:16:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 8:16:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
INFO: 0 error(s), 0 warning(s), 100% typed
May 16, 2016 8:16:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 8:16:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 8:16:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 8:16:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 8:16:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 8:16:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 8:16:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 8:16:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 8:16:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 8:16:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 8:16:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - dangerous use of the global this object
function f() { this.y = 3; }
               ^

May 16, 2016 8:16:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 8:16:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Rename prototypes and inline variables cannot be used together

May 16, 2016 8:16:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 8:16:53 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 8:16:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
Closure Compiler (http://code.google.com/closure/compiler)
Version: Unversioned directory
Built on: 2016/05/16 12:22
Closure Compiler (http://code.google.com/closure/compiler)
Version: Unversioned directory
Built on: 2016/05/16 12:22
May 16, 2016 8:17:20 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:17:20 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:17:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 100% typed
May 16, 2016 8:17:20 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:17:20 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:17:20 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: in1:2: WARNING - Property dom never defined on goog
goog.dom.DomHelper = function(){};
^

May 16, 2016 8:17:20 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: in1:3: WARNING - Property dom never defined on goog
var y = goog.dom.DomHelper;
        ^

May 16, 2016 8:17:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: in1:2: ERROR - variable goog is undeclared
goog.dom.DomHelper = function(){};
^

May 16, 2016 8:17:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 4 warning(s), 60% typed
May 16, 2016 8:17:20 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: in1:1: WARNING - Parse error. illegal use of unknown JSDoc tag "contstructor"; ignoring it
/** @contstructor */function F() {  this.field1 = 3;}F.prototype.method1 = function() {  this.field1 = 5;};(new F()).method1();
    ^

May 16, 2016 8:17:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 8:17:20 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:17:20 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:17:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 90.9% typed
May 16, 2016 8:17:20 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:17:20 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:17:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 100% typed
May 16, 2016 8:17:20 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:17:20 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:17:20 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: in1:12: WARNING - Property inherits never defined on goog
goog.inherits(a.b.DerivedClass, a.b.BaseClass);
^

May 16, 2016 8:17:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: in1:5: ERROR - variable alert is undeclared
  alert('hi');
  ^

May 16, 2016 8:17:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: in1:12: ERROR - variable goog is undeclared
goog.inherits(a.b.DerivedClass, a.b.BaseClass);
^

May 16, 2016 8:17:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 3 warning(s), 92.6% typed
May 16, 2016 8:17:20 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:17:20 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:17:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 100% typed
May 16, 2016 8:17:20 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:17:20 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:17:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 100% typed
May 16, 2016 8:17:20 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:17:20 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:17:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 100% typed
May 16, 2016 8:17:20 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:17:20 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:17:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 100% typed
May 16, 2016 8:17:20 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:17:20 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:17:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 100% typed
May 16, 2016 8:17:20 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:17:20 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:17:20 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: in1:1: WARNING - Suspicious code. The result of the 'add' operator is not being used.
/** @constructor */ var DomHelper = function(){};/** method */ DomHelper.method = function() {};function f() { var x = DomHelper; x.method() + x.method(); }
                                                                                                                                  ^

May 16, 2016 8:17:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 3 warning(s), 100% typed
May 16, 2016 8:17:20 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:17:20 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:17:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 100% typed
May 16, 2016 8:17:20 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:17:20 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:17:20 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: in1:3: WARNING - Bad type annotation. Unknown type Missing
 * @extends {Missing}
             ^

May 16, 2016 8:17:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 3 warning(s), 78.6% typed
May 16, 2016 8:17:20 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:17:20 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:17:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s)
May 16, 2016 8:17:20 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:17:20 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:17:20 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: in1:1: WARNING - dangerous use of the global this object
this.foo = {}; this.foo.bar = {};
^

May 16, 2016 8:17:20 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: in1:1: WARNING - dangerous use of the global this object
this.foo = {}; this.foo.bar = {};
               ^

May 16, 2016 8:17:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 4 warning(s), 87.5% typed
May 16, 2016 8:17:20 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:17:20 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:17:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 100% typed
May 16, 2016 8:17:20 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:17:20 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:17:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 28.6% typed
May 16, 2016 8:17:20 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:17:20 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:17:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 100% typed
May 16, 2016 8:17:20 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:17:20 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:17:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 100% typed
May 16, 2016 8:17:20 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:17:20 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:17:20 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: in1:1: ERROR - variable x is undeclared
/** @constructor */ var DomHelper = function(){};DomHelper.prototype.method = function() {   this.field = 3;  return x.field;}
                                                                                                                     ^

May 16, 2016 8:17:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 2 warning(s), 83.3% typed
May 16, 2016 8:17:20 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:17:20 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:17:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s)
May 16, 2016 8:17:20 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:17:20 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:17:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 100% typed
May 16, 2016 8:17:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:17:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:17:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 100% typed
May 16, 2016 8:17:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:17:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:17:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 100% typed
May 16, 2016 8:17:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:17:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:17:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 100% typed
May 16, 2016 8:17:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:17:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:17:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 100% typed
May 16, 2016 8:17:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:17:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:17:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 99.1% typed
May 16, 2016 8:17:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:17:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:17:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: in1:2: WARNING - goog.dom.Foo defined before its owner. goog.dom is defined at in1:3
/** @constructor */ goog.dom.Foo = function() {};
                    ^

May 16, 2016 8:17:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 3 warning(s), 100% typed
May 16, 2016 8:17:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:17:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:17:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s)
May 16, 2016 8:17:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:17:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:17:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s)
May 16, 2016 8:17:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:17:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:17:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 100% typed
May 16, 2016 8:17:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:17:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:17:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 100% typed
May 16, 2016 8:17:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:17:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:17:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 50% typed
May 16, 2016 8:17:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:17:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:17:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 100% typed
May 16, 2016 8:17:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:17:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:17:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: in1:1: WARNING - Suspicious code. The result of the 'getprop' operator is not being used.
/** @constructor */ function Foo() {} this.Foo;
                                      ^

May 16, 2016 8:17:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: in1:1: WARNING - dangerous use of the global this object
/** @constructor */ function Foo() {} this.Foo;
                                      ^

May 16, 2016 8:17:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 4 warning(s), 100% typed
May 16, 2016 8:17:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:17:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:17:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 100% typed
May 16, 2016 8:17:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:17:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:17:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 100% typed
May 16, 2016 8:17:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:17:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:17:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 100% typed
May 16, 2016 8:17:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:17:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:17:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: in1:9: WARNING - Property c never defined on A.prototype.b
  var x; if (x) { x = a.b.b; } else { x = a.b.c; }
                                          ^

May 16, 2016 8:17:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 3 warning(s), 86.7% typed
May 16, 2016 8:17:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:17:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:17:21 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: in1:1: ERROR - variable goog is undeclared
/** @constructor */ goog.Foo = function(){};
                    ^

May 16, 2016 8:17:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 2 warning(s), 66.7% typed
May 16, 2016 8:17:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:17:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:17:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: in1:3: WARNING - Bad type annotation. Unknown type Missing
 * @extends {Missing}
             ^

May 16, 2016 8:17:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 3 warning(s), 78.6% typed
May 16, 2016 8:17:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:17:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:17:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 100% typed
May 16, 2016 8:17:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:17:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:17:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 100% typed
May 16, 2016 8:17:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:17:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:17:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 100% typed
May 16, 2016 8:17:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:17:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:17:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 100% typed
May 16, 2016 8:17:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:17:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:17:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: in1:1: WARNING - dangerous use of the global this object
function F() {  this.field1 = 3;}F.prototype.method1 = function() {  this.field1 = 5;};(new F()).method1();
                ^

May 16, 2016 8:17:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: in1:1: WARNING - cannot instantiate non-constructor
function F() {  this.field1 = 3;}F.prototype.method1 = function() {  this.field1 = 5;};(new F()).method1();
                                                                                        ^

May 16, 2016 8:17:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 4 warning(s), 75% typed
May 16, 2016 8:17:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:17:21 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:17:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 100% typed
May 16, 2016 8:17:21 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - Syntax error: Wrong type of child number 1 for VarDecl. Expected: [InitPatt, IdPatt]. Found: IdExpr.

May 16, 2016 8:17:21 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 8:17:36 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: foo.js:1: WARNING - 'foo.bar.goo' used but not goog.require'd
var foo = {}; var bar = new foo.bar.goo();
                        ^

May 16, 2016 8:17:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
LOG:unknown:///unknown:1+19: Semicolon inserted
LOG:unknown:///unknown:1+19: Semicolon inserted
LOG:unknown:///unknown:1+46: Semicolon inserted
LOG:unknown:///unknown:1+46: Semicolon inserted
LOG:unknown:///unknown:1+34: Semicolon inserted
LOG:unknown:///unknown:1+34: Semicolon inserted
LOG:unknown:///unknown:1+34: Semicolon inserted
LOG:unknown:///unknown:1+34: Semicolon inserted
LOG:unknown:///unknown:1+42: Semicolon inserted
LOG:unknown:///unknown:1+42: Semicolon inserted
LOG:unknown:///unknown:1+28: Semicolon inserted
LOG:unknown:///unknown:1+28: Semicolon inserted
LOG:unknown:///unknown:1+42: Semicolon inserted
LOG:unknown:///unknown:1+42: Semicolon inserted
LOG:unknown:///unknown:1+62: Semicolon inserted
LOG:unknown:///unknown:1+63: Semicolon inserted
LOG:unknown:///unknown:1+62: Semicolon inserted
LOG:unknown:///unknown:1+63: Semicolon inserted
LOG:unknown:///unknown:1+30: Semicolon inserted
LOG:unknown:///unknown:1+30: Semicolon inserted
LOG:unknown:///unknown:1+109: Semicolon inserted
LOG:unknown:///unknown:1+110: Semicolon inserted
LOG:unknown:///unknown:1+109: Semicolon inserted
LOG:unknown:///unknown:1+110: Semicolon inserted
LOG:unknown:///unknown:1+19: Semicolon inserted
LOG:unknown:///unknown:1+19: Semicolon inserted
LOG:unknown:///unknown:1+43: Semicolon inserted
LOG:unknown:///unknown:1+43: Semicolon inserted
LOG:unknown:///unknown:1+48: Semicolon inserted
LOG:unknown:///unknown:1+48: Semicolon inserted
LOG:unknown:///unknown:1+44: Semicolon inserted
LOG:unknown:///unknown:1+71: Semicolon inserted
LOG:unknown:///unknown:1+44: Semicolon inserted
LOG:unknown:///unknown:1+71: Semicolon inserted
LOG:unknown:///unknown:1+22: Semicolon inserted
LOG:unknown:///unknown:1+39: Semicolon inserted
LOG:unknown:///unknown:1+22: Semicolon inserted
LOG:unknown:///unknown:1+39: Semicolon inserted
LOG:unknown:///unknown:1+95: Semicolon inserted
LOG:unknown:///unknown:1+102: Semicolon inserted
LOG:unknown:///unknown:1+119: Semicolon inserted
LOG:unknown:///unknown:1+95: Semicolon inserted
LOG:unknown:///unknown:1+102: Semicolon inserted
LOG:unknown:///unknown:1+119: Semicolon inserted
LOG:unknown:///unknown:1+22: Semicolon inserted
LOG:unknown:///unknown:1+37: Semicolon inserted
LOG:unknown:///unknown:1+22: Semicolon inserted
LOG:unknown:///unknown:1+37: Semicolon inserted
LOG:unknown:///unknown:1+95: Semicolon inserted
LOG:unknown:///unknown:1+102: Semicolon inserted
LOG:unknown:///unknown:1+117: Semicolon inserted
LOG:unknown:///unknown:1+95: Semicolon inserted
LOG:unknown:///unknown:1+102: Semicolon inserted
LOG:unknown:///unknown:1+117: Semicolon inserted
LOG:unknown:///unknown:1+22: Semicolon inserted
LOG:unknown:///unknown:1+22: Semicolon inserted
LOG:unknown:///unknown:1+95: Semicolon inserted
LOG:unknown:///unknown:1+102: Semicolon inserted
LOG:unknown:///unknown:1+119: Semicolon inserted
LOG:unknown:///unknown:1+134: Semicolon inserted
LOG:unknown:///unknown:1+95: Semicolon inserted
LOG:unknown:///unknown:1+102: Semicolon inserted
LOG:unknown:///unknown:1+119: Semicolon inserted
LOG:unknown:///unknown:1+134: Semicolon inserted
WARNING:unknown:///unknown:1+2 - 3: Will not work in IE
java.lang.Exception
	at com.google.caja.reporting.EchoingMessageQueue$1.add(EchoingMessageQueue.java:52)
	at com.google.caja.reporting.EchoingMessageQueue$1.add(EchoingMessageQueue.java:40)
	at java.util.AbstractList.add(AbstractList.java:108)
	at com.google.caja.reporting.AbstractMessageQueue.addMessage(AbstractMessageQueue.java:25)
	at com.google.caja.parser.js.Parser.parseExpressionAtom(Parser.java:1138)
	at com.google.caja.parser.js.Parser.parseOp(Parser.java:792)
	at com.google.caja.parser.js.Parser.parseExpressionInt(Parser.java:727)
	at com.google.caja.parser.js.Parser.parseExpressionStmt(Parser.java:1281)
	at com.google.caja.parser.js.Parser.parseStatementWithoutLabel(Parser.java:706)
	at com.google.caja.parser.js.Parser.parseStatement(Parser.java:306)
	at com.google.caja.parser.js.Parser.parseTerminatedStatement(Parser.java:1312)
	at com.google.caja.parser.js.Parser.parseProgramOrFunctionBody(Parser.java:325)
	at com.google.caja.parser.js.Parser.parseProgram(Parser.java:314)
	at com.google.caja.parser.js.Parser.parse(Parser.java:272)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:42)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:31)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:26)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:22)
	at com.google.javascript.jscomp.jsonml.JsonMLConversionTest.testConversion(JsonMLConversionTest.java:79)
	at com.google.javascript.jscomp.jsonml.JsonMLConversionTest.testArray(JsonMLConversionTest.java:91)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestResultRunner.call(JUnitSingleTestResultRunner.java:36)
	at xxl.java.junit.JUnitSingleTestResultRunner.call(JUnitSingleTestResultRunner.java:11)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
WARNING:unknown:///unknown:1+2 - 3: Will not work in IE
java.lang.Exception
	at com.google.caja.reporting.EchoingMessageQueue$1.add(EchoingMessageQueue.java:52)
	at com.google.caja.reporting.EchoingMessageQueue$1.add(EchoingMessageQueue.java:40)
	at java.util.AbstractList.add(AbstractList.java:108)
	at com.google.caja.reporting.AbstractMessageQueue.addMessage(AbstractMessageQueue.java:25)
	at com.google.caja.parser.js.Parser.parseExpressionAtom(Parser.java:1138)
	at com.google.caja.parser.js.Parser.parseOp(Parser.java:792)
	at com.google.caja.parser.js.Parser.parseExpressionInt(Parser.java:727)
	at com.google.caja.parser.js.Parser.parseExpressionStmt(Parser.java:1281)
	at com.google.caja.parser.js.Parser.parseStatementWithoutLabel(Parser.java:706)
	at com.google.caja.parser.js.Parser.parseStatement(Parser.java:306)
	at com.google.caja.parser.js.Parser.parseTerminatedStatement(Parser.java:1312)
	at com.google.caja.parser.js.Parser.parseProgramOrFunctionBody(Parser.java:325)
	at com.google.caja.parser.js.Parser.parseProgram(Parser.java:314)
	at com.google.caja.parser.js.Parser.parse(Parser.java:272)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:42)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:31)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:26)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:22)
	at com.google.javascript.jscomp.jsonml.JsonMLConversionTest.testConversion(JsonMLConversionTest.java:86)
	at com.google.javascript.jscomp.jsonml.JsonMLConversionTest.testArray(JsonMLConversionTest.java:91)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestResultRunner.call(JUnitSingleTestResultRunner.java:36)
	at xxl.java.junit.JUnitSingleTestResultRunner.call(JUnitSingleTestResultRunner.java:11)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
LOG:unknown:///unknown:1+39: Semicolon inserted
LOG:unknown:///unknown:1+39: Semicolon inserted
LOG:unknown:///unknown:1+35: Semicolon inserted
LOG:unknown:///unknown:1+35: Semicolon inserted
LOG:unknown:///unknown:1+43: Semicolon inserted
LOG:unknown:///unknown:1+43: Semicolon inserted
LOG:unknown:///unknown:1+36: Semicolon inserted
LOG:unknown:///unknown:1+36: Semicolon inserted
LOG:unknown:///unknown:1+23: Semicolon inserted
LOG:unknown:///unknown:1+23: Semicolon inserted
LOG:unknown:///unknown:1+40: Semicolon inserted
LOG:unknown:///unknown:1+40: Semicolon inserted
LOG:unknown:///unknown:1+39: Semicolon inserted
LOG:unknown:///unknown:1+66: Semicolon inserted
LOG:unknown:///unknown:1+39: Semicolon inserted
LOG:unknown:///unknown:1+66: Semicolon inserted
LOG:unknown:///unknown:1+102: Semicolon inserted
LOG:unknown:///unknown:1+103: Semicolon inserted
LOG:unknown:///unknown:1+102: Semicolon inserted
LOG:unknown:///unknown:1+103: Semicolon inserted
LOG:unknown:///unknown:1+19: Semicolon inserted
LOG:unknown:///unknown:1+19: Semicolon inserted
LOG:unknown:///unknown:1+37: Semicolon inserted
LOG:unknown:///unknown:1+37: Semicolon inserted
LOG:unknown:///unknown:1+35: Semicolon inserted
LOG:unknown:///unknown:1+62: Semicolon inserted
LOG:unknown:///unknown:1+35: Semicolon inserted
LOG:unknown:///unknown:1+62: Semicolon inserted
LOG:unknown:///unknown:1+98: Semicolon inserted
LOG:unknown:///unknown:1+99: Semicolon inserted
LOG:unknown:///unknown:1+98: Semicolon inserted
LOG:unknown:///unknown:1+99: Semicolon inserted
LOG:unknown:///unknown:1+104: Semicolon inserted
LOG:unknown:///unknown:1+105: Semicolon inserted
LOG:unknown:///unknown:1+104: Semicolon inserted
LOG:unknown:///unknown:1+105: Semicolon inserted
LOG:unknown:///unknown:1+18: Semicolon inserted
LOG:unknown:///unknown:1+18: Semicolon inserted
LOG:unknown:///unknown:1+97: Semicolon inserted
LOG:unknown:///unknown:1+98: Semicolon inserted
LOG:unknown:///unknown:1+97: Semicolon inserted
LOG:unknown:///unknown:1+98: Semicolon inserted
LOG:unknown:///unknown:1+15: Semicolon inserted
LOG:unknown:///unknown:1+15: Semicolon inserted
LOG:unknown:///unknown:1+34: Semicolon inserted
LOG:unknown:///unknown:1+34: Semicolon inserted
LOG:unknown:///unknown:1+107: Semicolon inserted
LOG:unknown:///unknown:1+108: Semicolon inserted
LOG:unknown:///unknown:1+117: Semicolon inserted
LOG:unknown:///unknown:1+107: Semicolon inserted
LOG:unknown:///unknown:1+108: Semicolon inserted
LOG:unknown:///unknown:1+117: Semicolon inserted
LOG:unknown:///unknown:1+19: Semicolon inserted
LOG:unknown:///unknown:1+19: Semicolon inserted
LOG:unknown:///unknown:1+5: Semicolon inserted
LOG:unknown:///unknown:1+5: Semicolon inserted
LOG:unknown:///unknown:1+84: Semicolon inserted
LOG:unknown:///unknown:1+84: Semicolon inserted
LOG:unknown:///unknown:1+30: Semicolon inserted
LOG:unknown:///unknown:1+30: Semicolon inserted
LOG:unknown:///unknown:1+30: Semicolon inserted
LOG:unknown:///unknown:1+30: Semicolon inserted
LOG:unknown:///unknown:1+38: Semicolon inserted
LOG:unknown:///unknown:1+38: Semicolon inserted
LOG:unknown:///unknown:1+13: Semicolon inserted
LOG:unknown:///unknown:1+13: Semicolon inserted
LOG:unknown:///unknown:1+29: Semicolon inserted
LOG:unknown:///unknown:1+29: Semicolon inserted
LOG:unknown:///unknown:1+43: Semicolon inserted
LOG:unknown:///unknown:1+43: Semicolon inserted
LOG:unknown:///unknown:1+25: Semicolon inserted
LOG:unknown:///unknown:1+25: Semicolon inserted
LOG:unknown:///unknown:1+27: Semicolon inserted
LOG:unknown:///unknown:1+27: Semicolon inserted
LOG:unknown:///unknown:1+35: Semicolon inserted
LOG:unknown:///unknown:1+35: Semicolon inserted
LOG:unknown:///unknown:1+39: Semicolon inserted
LOG:unknown:///unknown:1+39: Semicolon inserted
LOG:unknown:///unknown:1+61: Semicolon inserted
LOG:unknown:///unknown:1+62: Semicolon inserted
LOG:unknown:///unknown:1+61: Semicolon inserted
LOG:unknown:///unknown:1+62: Semicolon inserted
LOG:unknown:///unknown:1+63: Semicolon inserted
LOG:unknown:///unknown:1+68: Semicolon inserted
LOG:unknown:///unknown:1+63: Semicolon inserted
LOG:unknown:///unknown:1+68: Semicolon inserted
LOG:unknown:///unknown:1+41: Semicolon inserted
LOG:unknown:///unknown:1+41: Semicolon inserted
LOG:unknown:///unknown:1+16: Semicolon inserted
LOG:unknown:///unknown:1+16: Semicolon inserted
LOG:unknown:///unknown:1+20: Semicolon inserted
LOG:unknown:///unknown:1+20: Semicolon inserted
WARNING:unknown:///unknown:1+2 - 3: Will not work in IE
java.lang.Exception
	at com.google.caja.reporting.EchoingMessageQueue$1.add(EchoingMessageQueue.java:52)
	at com.google.caja.reporting.EchoingMessageQueue$1.add(EchoingMessageQueue.java:40)
	at java.util.AbstractList.add(AbstractList.java:108)
	at com.google.caja.reporting.AbstractMessageQueue.addMessage(AbstractMessageQueue.java:25)
	at com.google.caja.parser.js.Parser.parseExpressionAtom(Parser.java:1138)
	at com.google.caja.parser.js.Parser.parseOp(Parser.java:792)
	at com.google.caja.parser.js.Parser.parseExpressionInt(Parser.java:727)
	at com.google.caja.parser.js.Parser.parseExpressionStmt(Parser.java:1281)
	at com.google.caja.parser.js.Parser.parseStatementWithoutLabel(Parser.java:706)
	at com.google.caja.parser.js.Parser.parseStatement(Parser.java:306)
	at com.google.caja.parser.js.Parser.parseTerminatedStatement(Parser.java:1312)
	at com.google.caja.parser.js.Parser.parseProgramOrFunctionBody(Parser.java:325)
	at com.google.caja.parser.js.Parser.parseProgram(Parser.java:314)
	at com.google.caja.parser.js.Parser.parse(Parser.java:272)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:42)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:31)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:26)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:22)
	at com.google.javascript.jscomp.jsonml.JsonMLConversionTest.testConversion(JsonMLConversionTest.java:79)
	at com.google.javascript.jscomp.jsonml.JsonMLConversionTest.testArray1(JsonMLConversionTest.java:102)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestResultRunner.call(JUnitSingleTestResultRunner.java:36)
	at xxl.java.junit.JUnitSingleTestResultRunner.call(JUnitSingleTestResultRunner.java:11)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
WARNING:unknown:///unknown:1+2 - 3: Will not work in IE
java.lang.Exception
	at com.google.caja.reporting.EchoingMessageQueue$1.add(EchoingMessageQueue.java:52)
	at com.google.caja.reporting.EchoingMessageQueue$1.add(EchoingMessageQueue.java:40)
	at java.util.AbstractList.add(AbstractList.java:108)
	at com.google.caja.reporting.AbstractMessageQueue.addMessage(AbstractMessageQueue.java:25)
	at com.google.caja.parser.js.Parser.parseExpressionAtom(Parser.java:1138)
	at com.google.caja.parser.js.Parser.parseOp(Parser.java:792)
	at com.google.caja.parser.js.Parser.parseExpressionInt(Parser.java:727)
	at com.google.caja.parser.js.Parser.parseExpressionStmt(Parser.java:1281)
	at com.google.caja.parser.js.Parser.parseStatementWithoutLabel(Parser.java:706)
	at com.google.caja.parser.js.Parser.parseStatement(Parser.java:306)
	at com.google.caja.parser.js.Parser.parseTerminatedStatement(Parser.java:1312)
	at com.google.caja.parser.js.Parser.parseProgramOrFunctionBody(Parser.java:325)
	at com.google.caja.parser.js.Parser.parseProgram(Parser.java:314)
	at com.google.caja.parser.js.Parser.parse(Parser.java:272)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:42)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:31)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:26)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:22)
	at com.google.javascript.jscomp.jsonml.JsonMLConversionTest.testConversion(JsonMLConversionTest.java:86)
	at com.google.javascript.jscomp.jsonml.JsonMLConversionTest.testArray1(JsonMLConversionTest.java:102)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestResultRunner.call(JUnitSingleTestResultRunner.java:36)
	at xxl.java.junit.JUnitSingleTestResultRunner.call(JUnitSingleTestResultRunner.java:11)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
LOG:unknown:///unknown:1+17: Semicolon inserted
LOG:unknown:///unknown:1+17: Semicolon inserted
LOG:unknown:///unknown:1+17: Semicolon inserted
LOG:unknown:///unknown:1+30: Semicolon inserted
LOG:unknown:///unknown:1+17: Semicolon inserted
LOG:unknown:///unknown:1+30: Semicolon inserted
LOG:unknown:///unknown:1+22: Semicolon inserted
LOG:unknown:///unknown:1+35: Semicolon inserted
LOG:unknown:///unknown:1+22: Semicolon inserted
LOG:unknown:///unknown:1+35: Semicolon inserted
LOG:unknown:///unknown:1+26: Semicolon inserted
LOG:unknown:///unknown:1+39: Semicolon inserted
LOG:unknown:///unknown:1+26: Semicolon inserted
LOG:unknown:///unknown:1+39: Semicolon inserted
LOG:unknown:///unknown:1+17: Semicolon inserted
LOG:unknown:///unknown:1+17: Semicolon inserted
LOG:unknown:///unknown:1+87: Semicolon inserted
LOG:unknown:///unknown:1+88: Semicolon inserted
LOG:unknown:///unknown:1+87: Semicolon inserted
LOG:unknown:///unknown:1+88: Semicolon inserted
LOG:unknown:///unknown:1+48: Semicolon inserted
LOG:unknown:///unknown:1+48: Semicolon inserted
LOG:unknown:///unknown:1+106: Semicolon inserted
LOG:unknown:///unknown:1+107: Semicolon inserted
LOG:unknown:///unknown:1+106: Semicolon inserted
LOG:unknown:///unknown:1+107: Semicolon inserted
LOG:unknown:///unknown:1+23: Semicolon inserted
LOG:unknown:///unknown:1+23: Semicolon inserted
LOG:unknown:///unknown:1+68: Semicolon inserted
LOG:unknown:///unknown:1+72: Semicolon inserted
LOG:unknown:///unknown:1+68: Semicolon inserted
LOG:unknown:///unknown:1+72: Semicolon inserted
LOG:unknown:///unknown:1+33: Semicolon inserted
LOG:unknown:///unknown:1+33: Semicolon inserted
LOG:unknown:///unknown:1+35: Semicolon inserted
LOG:unknown:///unknown:1+35: Semicolon inserted
LOG:unknown:///unknown:1+59: Semicolon inserted
LOG:unknown:///unknown:1+59: Semicolon inserted
LOG:unknown:///unknown:1+27: Semicolon inserted
LOG:unknown:///unknown:1+27: Semicolon inserted
LOG:unknown:///unknown:1+27: Semicolon inserted
LOG:unknown:///unknown:1+34: Semicolon inserted
LOG:unknown:///unknown:1+27: Semicolon inserted
LOG:unknown:///unknown:1+34: Semicolon inserted
LOG:unknown:///unknown:1+32: Semicolon inserted
LOG:unknown:///unknown:1+32: Semicolon inserted
LOG:unknown:///unknown:1+42: Semicolon inserted
LOG:unknown:///unknown:1+42: Semicolon inserted
LOG:unknown:///unknown:1+58: Semicolon inserted
LOG:unknown:///unknown:1+58: Semicolon inserted
LOG:unknown:///unknown:1+43: Semicolon inserted
LOG:unknown:///unknown:1+59: Semicolon inserted
LOG:unknown:///unknown:1+43: Semicolon inserted
LOG:unknown:///unknown:1+59: Semicolon inserted
May 16, 2016 8:17:47 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:5: WARNING - Unable to determine return type for exported function internalName
internalName = function(a) {  return 6;
               ^

May 16, 2016 8:17:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 8:17:47 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:5: WARNING - Unable to determine return type for exported function internalName
internalName = function(a) {  return a;
               ^

May 16, 2016 8:17:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 8:17:47 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b for exported function p1
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = function(p1) {}; a.b.c = function(d, e, f) {};a.b.prototype.c = function(g, h, i) {};goog.exportSymbol('a.b', a.b);goog.exportProperty(a.b, 'c', a.b.c);goog.exportProperty(a.b.prototype, 'c', a.b.prototype.c);
                                                                                                                            ^

May 16, 2016 8:17:47 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b.c for exported function d
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = function(p1) {}; a.b.c = function(d, e, f) {};a.b.prototype.c = function(g, h, i) {};goog.exportSymbol('a.b', a.b);goog.exportProperty(a.b, 'c', a.b.c);goog.exportProperty(a.b.prototype, 'c', a.b.prototype.c);
                                                                                                                                                     ^

May 16, 2016 8:17:47 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b.c for exported function e
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = function(p1) {}; a.b.c = function(d, e, f) {};a.b.prototype.c = function(g, h, i) {};goog.exportSymbol('a.b', a.b);goog.exportProperty(a.b, 'c', a.b.c);goog.exportProperty(a.b.prototype, 'c', a.b.prototype.c);
                                                                                                                                                        ^

May 16, 2016 8:17:47 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b.c for exported function f
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = function(p1) {}; a.b.c = function(d, e, f) {};a.b.prototype.c = function(g, h, i) {};goog.exportSymbol('a.b', a.b);goog.exportProperty(a.b, 'c', a.b.c);goog.exportProperty(a.b.prototype, 'c', a.b.prototype.c);
                                                                                                                                                           ^

May 16, 2016 8:17:47 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b.prototype.c for exported function g
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = function(p1) {}; a.b.c = function(d, e, f) {};a.b.prototype.c = function(g, h, i) {};goog.exportSymbol('a.b', a.b);goog.exportProperty(a.b, 'c', a.b.c);goog.exportProperty(a.b.prototype, 'c', a.b.prototype.c);
                                                                                                                                                                                            ^

May 16, 2016 8:17:47 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b.prototype.c for exported function h
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = function(p1) {}; a.b.c = function(d, e, f) {};a.b.prototype.c = function(g, h, i) {};goog.exportSymbol('a.b', a.b);goog.exportProperty(a.b, 'c', a.b.c);goog.exportProperty(a.b.prototype, 'c', a.b.prototype.c);
                                                                                                                                                                                               ^

May 16, 2016 8:17:47 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b.prototype.c for exported function i
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = function(p1) {}; a.b.c = function(d, e, f) {};a.b.prototype.c = function(g, h, i) {};goog.exportSymbol('a.b', a.b);goog.exportProperty(a.b, 'c', a.b.c);goog.exportProperty(a.b.prototype, 'c', a.b.prototype.c);
                                                                                                                                                                                                  ^

May 16, 2016 8:17:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 7 warning(s), 100% typed
May 16, 2016 8:17:47 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a for exported function d
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = function(d, e, f) {};goog.exportSymbol('foobar', a)
                                                                                                                  ^

May 16, 2016 8:17:47 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a for exported function e
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = function(d, e, f) {};goog.exportSymbol('foobar', a)
                                                                                                                     ^

May 16, 2016 8:17:47 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a for exported function f
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = function(d, e, f) {};goog.exportSymbol('foobar', a)
                                                                                                                        ^

May 16, 2016 8:17:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 3 warning(s), 100% typed
May 16, 2016 8:17:47 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine return type for exported function InternalName
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var InternalName = function() {  return 6;};goog.exportSymbol('ExternalName', InternalName)
                                                                                                                    ^

May 16, 2016 8:17:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s), 100% typed
May 16, 2016 8:17:47 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:2: WARNING - assignment to property A of enum{E}
found   : number
required: string
 @export */ var E = {A:8, B:9};goog.exportSymbol('E', E);
                     ^

May 16, 2016 8:17:47 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:2: WARNING - assignment to property B of enum{E}
found   : number
required: string
 @export */ var E = {A:8, B:9};goog.exportSymbol('E', E);
                          ^

May 16, 2016 8:17:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 100% typed
May 16, 2016 8:17:47 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:7: WARNING - Unable to determine return type for exported function internalName
internalName = function(param1) {return /** @type {V} */ (param1);};goog.exportSymbol('externalName', internalName)
               ^

May 16, 2016 8:17:47 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:7: WARNING - Unable to determine type of parameter internalName for exported function param1
internalName = function(param1) {return /** @type {V} */ (param1);};goog.exportSymbol('externalName', internalName)
                        ^

May 16, 2016 8:17:47 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:7: WARNING - Bad type annotation. Unknown type V
internalName = function(param1) {return /** @type {V} */ (param1);};goog.exportSymbol('externalName', internalName)
                                                   ^

May 16, 2016 8:17:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 3 warning(s), 87.5% typed
May 16, 2016 8:17:47 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:7: WARNING - Unable to determine return type for exported function internalName
internalName = function(param1) {return param1;};goog.exportSymbol('externalName', internalName)
               ^

May 16, 2016 8:17:47 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:7: WARNING - Unable to determine type of parameter internalName for exported function param1
internalName = function(param1) {return param1;};goog.exportSymbol('externalName', internalName)
                        ^

May 16, 2016 8:17:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 93.3% typed
May 16, 2016 8:17:47 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b.c for exported function d
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = {}; a.b.c = function(d, e, f) {};goog.exportSymbol('foobar', a.b.c)
                                                                                                                                        ^

May 16, 2016 8:17:47 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b.c for exported function e
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = {}; a.b.c = function(d, e, f) {};goog.exportSymbol('foobar', a.b.c)
                                                                                                                                           ^

May 16, 2016 8:17:47 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b.c for exported function f
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = {}; a.b.c = function(d, e, f) {};goog.exportSymbol('foobar', a.b.c)
                                                                                                                                              ^

May 16, 2016 8:17:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 3 warning(s), 100% typed
May 16, 2016 8:17:48 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b.c for exported function d
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = function(p1) {}; a.b.c = function(d, e, f) {};a.b.prototype.c = function(g, h, i) {};goog.exportSymbol('hello', a);goog.exportProperty(a.b, 'c', a.b.c);goog.exportProperty(a.b.prototype, 'c', a.b.prototype.c);
                                                                                                                                                     ^

May 16, 2016 8:17:48 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b.c for exported function e
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = function(p1) {}; a.b.c = function(d, e, f) {};a.b.prototype.c = function(g, h, i) {};goog.exportSymbol('hello', a);goog.exportProperty(a.b, 'c', a.b.c);goog.exportProperty(a.b.prototype, 'c', a.b.prototype.c);
                                                                                                                                                        ^

May 16, 2016 8:17:48 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b.c for exported function f
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = function(p1) {}; a.b.c = function(d, e, f) {};a.b.prototype.c = function(g, h, i) {};goog.exportSymbol('hello', a);goog.exportProperty(a.b, 'c', a.b.c);goog.exportProperty(a.b.prototype, 'c', a.b.prototype.c);
                                                                                                                                                           ^

May 16, 2016 8:17:48 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b.prototype.c for exported function g
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = function(p1) {}; a.b.c = function(d, e, f) {};a.b.prototype.c = function(g, h, i) {};goog.exportSymbol('hello', a);goog.exportProperty(a.b, 'c', a.b.c);goog.exportProperty(a.b.prototype, 'c', a.b.prototype.c);
                                                                                                                                                                                            ^

May 16, 2016 8:17:48 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b.prototype.c for exported function h
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = function(p1) {}; a.b.c = function(d, e, f) {};a.b.prototype.c = function(g, h, i) {};goog.exportSymbol('hello', a);goog.exportProperty(a.b, 'c', a.b.c);goog.exportProperty(a.b.prototype, 'c', a.b.prototype.c);
                                                                                                                                                                                               ^

May 16, 2016 8:17:48 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b.prototype.c for exported function i
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = function(p1) {}; a.b.c = function(d, e, f) {};a.b.prototype.c = function(g, h, i) {};goog.exportSymbol('hello', a);goog.exportProperty(a.b, 'c', a.b.c);goog.exportProperty(a.b.prototype, 'c', a.b.prototype.c);
                                                                                                                                                                                                  ^

May 16, 2016 8:17:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 6 warning(s), 100% typed
May 16, 2016 8:17:48 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b for exported function p1
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = function(p1) {}; a.b.c = function(d, e, f) {};a.b.prototype.c = function(g, h, i) {};goog.exportSymbol('prefix', a.b);goog.exportProperty(a.b, 'c', a.b.c);
                                                                                                                            ^

May 16, 2016 8:17:48 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b.c for exported function d
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = function(p1) {}; a.b.c = function(d, e, f) {};a.b.prototype.c = function(g, h, i) {};goog.exportSymbol('prefix', a.b);goog.exportProperty(a.b, 'c', a.b.c);
                                                                                                                                                     ^

May 16, 2016 8:17:48 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b.c for exported function e
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = function(p1) {}; a.b.c = function(d, e, f) {};a.b.prototype.c = function(g, h, i) {};goog.exportSymbol('prefix', a.b);goog.exportProperty(a.b, 'c', a.b.c);
                                                                                                                                                        ^

May 16, 2016 8:17:48 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b.c for exported function f
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = function(p1) {}; a.b.c = function(d, e, f) {};a.b.prototype.c = function(g, h, i) {};goog.exportSymbol('prefix', a.b);goog.exportProperty(a.b, 'c', a.b.c);
                                                                                                                                                           ^

May 16, 2016 8:17:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 4 warning(s), 100% typed
May 16, 2016 8:17:48 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b.c for exported function d
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = {}; a.b.c = function(d, e, f) {};goog.exportProperty(a.b, 'cprop', a.b.c)
                                                                                                                                        ^

May 16, 2016 8:17:48 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b.c for exported function e
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = {}; a.b.c = function(d, e, f) {};goog.exportProperty(a.b, 'cprop', a.b.c)
                                                                                                                                           ^

May 16, 2016 8:17:48 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - Unable to determine type of parameter a.b.c for exported function f
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = {}; a.b.c = function(d, e, f) {};goog.exportProperty(a.b, 'cprop', a.b.c)
                                                                                                                                              ^

May 16, 2016 8:17:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 3 warning(s), 100% typed
May 16, 2016 8:17:48 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:4: WARNING - Unable to determine type of parameter InternalName for exported function b
 var InternalName = function(a,b,c) {  return 6;};goog.exportSymbol('ExternalName', InternalName)
                               ^

May 16, 2016 8:17:48 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:4: WARNING - Unable to determine type of parameter InternalName for exported function c
 var InternalName = function(a,b,c) {  return 6;};goog.exportSymbol('ExternalName', InternalName)
                                 ^

May 16, 2016 8:17:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s), 100% typed
May 16, 2016 8:18:35 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. getters are not supported in older versions of JS. If you are targeting newer versions of JS, set the appropriate language_in option.
var a = {get f(){}}
^

May 16, 2016 8:18:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 8:18:35 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name G in externs has no effect
var goog = {};function F() {}/** @export */ function G() { goog.base(this); } goog.inherits(G, F);
                                                                                            ^

May 16, 2016 8:18:35 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name F in externs has no effect
var goog = {};function F() {}/** @export */ function G() { goog.base(this); } goog.inherits(G, F);
                                                                                               ^

May 16, 2016 8:18:35 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s)
May 16, 2016 8:18:36 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name arguments in externs has no effect
function f() { return arguments[0]; }
                      ^

May 16, 2016 8:18:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 8:18:36 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name a in externs has no effect
function f(a) { return a; } f(true);
                       ^

May 16, 2016 8:18:36 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name f in externs has no effect
function f(a) { return a; } f(true);
                            ^

May 16, 2016 8:18:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s)
May 16, 2016 8:18:36 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name f in externs has no effect
function f(x) {} f();
                 ^

May 16, 2016 8:18:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 8:18:37 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name Foo in externs has no effect
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                 ^

May 16, 2016 8:18:37 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - enum key a must be a syntactic constant
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @enum */ Foo = {a: 3};
                                                                                                                                        ^

May 16, 2016 8:18:37 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s)
May 16, 2016 8:18:40 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name Foo in externs has no effect
/** @constructor */ function Foo() {} Foo.prototype.bar = function() { return this; }; var f = new Foo();f.bar(); f.bar(); 
                                                                                                   ^

May 16, 2016 8:18:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 8:18:41 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name window in externs has no effect
var x = {eeny: 1, /** @expose */ meeny: 2};/** @constructor */ var Foo = function() {};/** @expose */  Foo.prototype.miny = 3;Foo.prototype.moe = 4;/** @expose */  Foo.prototype.tiger;function moe(a, b) { return a.meeny + b.miny + a.tiger; }window['x'] = x;window['Foo'] = Foo;window['moe'] = moe;
                                                                                                                                                                                                                                                 ^

May 16, 2016 8:18:41 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name x in externs has no effect
var x = {eeny: 1, /** @expose */ meeny: 2};/** @constructor */ var Foo = function() {};/** @expose */  Foo.prototype.miny = 3;Foo.prototype.moe = 4;/** @expose */  Foo.prototype.tiger;function moe(a, b) { return a.meeny + b.miny + a.tiger; }window['x'] = x;window['Foo'] = Foo;window['moe'] = moe;
                                                                                                                                                                                                                                                               ^

May 16, 2016 8:18:41 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name window in externs has no effect
var x = {eeny: 1, /** @expose */ meeny: 2};/** @constructor */ var Foo = function() {};/** @expose */  Foo.prototype.miny = 3;Foo.prototype.moe = 4;/** @expose */  Foo.prototype.tiger;function moe(a, b) { return a.meeny + b.miny + a.tiger; }window['x'] = x;window['Foo'] = Foo;window['moe'] = moe;
                                                                                                                                                                                                                                                                 ^

May 16, 2016 8:18:41 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name Foo in externs has no effect
var x = {eeny: 1, /** @expose */ meeny: 2};/** @constructor */ var Foo = function() {};/** @expose */  Foo.prototype.miny = 3;Foo.prototype.moe = 4;/** @expose */  Foo.prototype.tiger;function moe(a, b) { return a.meeny + b.miny + a.tiger; }window['x'] = x;window['Foo'] = Foo;window['moe'] = moe;
                                                                                                                                                                                                                                                                                 ^

May 16, 2016 8:18:41 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name window in externs has no effect
var x = {eeny: 1, /** @expose */ meeny: 2};/** @constructor */ var Foo = function() {};/** @expose */  Foo.prototype.miny = 3;Foo.prototype.moe = 4;/** @expose */  Foo.prototype.tiger;function moe(a, b) { return a.meeny + b.miny + a.tiger; }window['x'] = x;window['Foo'] = Foo;window['moe'] = moe;
                                                                                                                                                                                                                                                                                     ^

May 16, 2016 8:18:41 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name moe in externs has no effect
var x = {eeny: 1, /** @expose */ meeny: 2};/** @constructor */ var Foo = function() {};/** @expose */  Foo.prototype.miny = 3;Foo.prototype.moe = 4;/** @expose */  Foo.prototype.tiger;function moe(a, b) { return a.meeny + b.miny + a.tiger; }window['x'] = x;window['Foo'] = Foo;window['moe'] = moe;
                                                                                                                                                                                                                                                                                                     ^

May 16, 2016 8:18:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 6 warning(s)
May 16, 2016 8:18:42 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - accessing name h in externs has no effect
  var a = h;
          ^

May 16, 2016 8:18:42 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:3: WARNING - accessing name a in externs has no effect
  a = a + 'x';
  ^

May 16, 2016 8:18:42 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:3: WARNING - accessing name a in externs has no effect
  a = a + 'x';
      ^

May 16, 2016 8:18:42 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:4: WARNING - accessing name a in externs has no effect
  a = a + 'y';
  ^

May 16, 2016 8:18:42 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:4: WARNING - accessing name a in externs has no effect
  a = a + 'y';
      ^

May 16, 2016 8:18:42 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:5: WARNING - accessing name a in externs has no effect
  return a;
         ^

May 16, 2016 8:18:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 6 warning(s)
May 16, 2016 8:18:42 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name x in externs has no effect
function bar(x) { return x; }
                         ^

May 16, 2016 8:18:42 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - accessing name print in externs has no effect
function foo(x) { print(x / bar(0));
                  ^

May 16, 2016 8:18:42 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - accessing name x in externs has no effect
function foo(x) { print(x / bar(0));
                        ^

May 16, 2016 8:18:42 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - accessing name bar in externs has no effect
function foo(x) { print(x / bar(0));
                            ^

May 16, 2016 8:18:42 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:3: WARNING - accessing name print in externs has no effect
                 print(x / bar(-0)); }
                 ^

May 16, 2016 8:18:42 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:3: WARNING - accessing name x in externs has no effect
                 print(x / bar(-0)); }
                       ^

May 16, 2016 8:18:42 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:3: WARNING - accessing name bar in externs has no effect
                 print(x / bar(-0)); }
                           ^

May 16, 2016 8:18:42 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:4: WARNING - accessing name foo in externs has no effect
foo(3);
^

May 16, 2016 8:18:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 8 warning(s)
May 16, 2016 8:18:42 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - actual parameter 1 of goog.getCssName does not match formal parameter
found   : number
required: string
var x = goog.getCssName(123, 'a');
                        ^

May 16, 2016 8:18:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 8:18:44 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name arguments in externs has no effect
var f = function() {};f.prototype.argz = function() {arguments};f.prototype.devir0 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir1 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir2 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir3 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir4 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir5 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir6 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir7 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir8 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir9 = function() {};var F = new f(); F.argz();F.devir0();F.devir1();F.devir2();F.devir3();F.devir4();F.devir5();F.devir6();F.devir7();F.devir8();F.devir9();
                                                     ^

May 16, 2016 8:18:44 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name arguments in externs has no effect
var f = function() {};f.prototype.argz = function() {arguments};f.prototype.devir0 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir1 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir2 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir3 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir4 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir5 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir6 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir7 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir8 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir9 = function() {};var F = new f(); F.argz();F.devir0();F.devir1();F.devir2();F.devir3();F.devir4();F.devir5();F.devir6();F.devir7();F.devir8();F.devir9();
                                                                                                                                  ^

May 16, 2016 8:18:44 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name arguments in externs has no effect
var f = function() {};f.prototype.argz = function() {arguments};f.prototype.devir0 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir1 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir2 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir3 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir4 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir5 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir6 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir7 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir8 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir9 = function() {};var F = new f(); F.argz();F.devir0();F.devir1();F.devir2();F.devir3();F.devir4();F.devir5();F.devir6();F.devir7();F.devir8();F.devir9();
                                                                                                                                                                                                               ^

May 16, 2016 8:18:44 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name arguments in externs has no effect
var f = function() {};f.prototype.argz = function() {arguments};f.prototype.devir0 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir1 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir2 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir3 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir4 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir5 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir6 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir7 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir8 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir9 = function() {};var F = new f(); F.argz();F.devir0();F.devir1();F.devir2();F.devir3();F.devir4();F.devir5();F.devir6();F.devir7();F.devir8();F.devir9();
                                                                                                                                                                                                                                                                                            ^

May 16, 2016 8:18:44 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name arguments in externs has no effect
var f = function() {};f.prototype.argz = function() {arguments};f.prototype.devir0 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir1 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir2 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir3 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir4 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir5 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir6 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir7 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir8 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir9 = function() {};var F = new f(); F.argz();F.devir0();F.devir1();F.devir2();F.devir3();F.devir4();F.devir5();F.devir6();F.devir7();F.devir8();F.devir9();
                                                                                                                                                                                                                                                                                                                                                                         ^

May 16, 2016 8:18:44 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name arguments in externs has no effect
var f = function() {};f.prototype.argz = function() {arguments};f.prototype.devir0 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir1 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir2 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir3 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir4 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir5 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir6 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir7 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir8 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir9 = function() {};var F = new f(); F.argz();F.devir0();F.devir1();F.devir2();F.devir3();F.devir4();F.devir5();F.devir6();F.devir7();F.devir8();F.devir9();
                                                                                                                                                                                                                                                                                                                                                                                                                                                      ^

May 16, 2016 8:18:44 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name arguments in externs has no effect
var f = function() {};f.prototype.argz = function() {arguments};f.prototype.devir0 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir1 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir2 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir3 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir4 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir5 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir6 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir7 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir8 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir9 = function() {};var F = new f(); F.argz();F.devir0();F.devir1();F.devir2();F.devir3();F.devir4();F.devir5();F.devir6();F.devir7();F.devir8();F.devir9();


May 16, 2016 8:18:44 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name arguments in externs has no effect
var f = function() {};f.prototype.argz = function() {arguments};f.prototype.devir0 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir1 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir2 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir3 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir4 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir5 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir6 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir7 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir8 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir9 = function() {};var F = new f(); F.argz();F.devir0();F.devir1();F.devir2();F.devir3();F.devir4();F.devir5();F.devir6();F.devir7();F.devir8();F.devir9();


May 16, 2016 8:18:44 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name arguments in externs has no effect
var f = function() {};f.prototype.argz = function() {arguments};f.prototype.devir0 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir1 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir2 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir3 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir4 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir5 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir6 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir7 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir8 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir9 = function() {};var F = new f(); F.argz();F.devir0();F.devir1();F.devir2();F.devir3();F.devir4();F.devir5();F.devir6();F.devir7();F.devir8();F.devir9();


May 16, 2016 8:18:44 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name arguments in externs has no effect
var f = function() {};f.prototype.argz = function() {arguments};f.prototype.devir0 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir1 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir2 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir3 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir4 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir5 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir6 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir7 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir8 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir9 = function() {};var F = new f(); F.argz();F.devir0();F.devir1();F.devir2();F.devir3();F.devir4();F.devir5();F.devir6();F.devir7();F.devir8();F.devir9();


May 16, 2016 8:18:44 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name f in externs has no effect
var f = function() {};f.prototype.argz = function() {arguments};f.prototype.devir0 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir1 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir2 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir3 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir4 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir5 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir6 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir7 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir8 = function() {};f.prototype.argz = function() {arguments};f.prototype.devir9 = function() {};var F = new f(); F.argz();F.devir0();F.devir1();F.devir2();F.devir3();F.devir4();F.devir5();F.devir6();F.devir7();F.devir8();F.devir9();


May 16, 2016 8:18:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 11 warning(s)
LOG:unknown:///unknown:1+25: Semicolon inserted
May 16, 2016 8:18:44 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name f in externs has no effect
function f() { return; f(); }
                       ^

May 16, 2016 8:18:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 8:18:44 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name x in externs has no effect
x = 3;
^

May 16, 2016 8:18:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 8:18:44 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:4: WARNING - accessing name InternalName in externs has no effect
 var InternalName = function() {};goog.exportSymbol('ExternalName', InternalName)
                                                                    ^

May 16, 2016 8:18:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 8:18:44 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name longerName in externs has no effect
var f = function longName() {}; var g = function() {};function longerName() {} var i = longerName;
                                                                                       ^

May 16, 2016 8:18:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 8:18:44 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:18:44 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:18:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s)
May 16, 2016 8:18:44 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:18:44 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:18:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s)
May 16, 2016 8:18:45 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name fn in externs has no effect
function fn(){return {}}fn().x.y = 1;
                        ^

May 16, 2016 8:18:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 8:18:45 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name a in externs has no effect
function fn(){var a={};a.x={};return a}fn().x.y = 1;
                                     ^

May 16, 2016 8:18:45 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name fn in externs has no effect
function fn(){var a={};a.x={};return a}fn().x.y = 1;
                                       ^

May 16, 2016 8:18:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s)
May 16, 2016 8:18:45 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - name Array is not undefined in the externs.
function InternalWidget(){return [];}Array.prototype.internalGo = function (){this.x = 2};InternalWidget().internalGo();
                                     ^

May 16, 2016 8:18:45 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name InternalWidget in externs has no effect
function InternalWidget(){return [];}Array.prototype.internalGo = function (){this.x = 2};InternalWidget().internalGo();
                                                                                          ^

May 16, 2016 8:18:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s)
May 16, 2016 8:18:45 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name f in externs has no effect
function f() { return 3; } f(); 
                           ^

May 16, 2016 8:18:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 8:18:45 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name Widget in externs has no effect
function f(){return new Widget()}f().go();
                        ^

May 16, 2016 8:18:45 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name f in externs has no effect
function f(){return new Widget()}f().go();
                                 ^

May 16, 2016 8:18:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s)
May 16, 2016 8:18:45 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - accessing name InternalWidget in externs has no effect
function InternalWidget(){this.x = 1;}InternalWidget.prototype.internalGo = function (){this.x = 2};new InternalWidget().internalGo();
                                                                                                        ^

May 16, 2016 8:18:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 8:18:45 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name Widget in externs has no effect
new Widget().go();
    ^

May 16, 2016 8:18:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 8:18:45 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name widgetToken in externs has no effect
widgetToken().go();
^

May 16, 2016 8:18:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 8:18:45 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:18:45 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:18:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s)
May 16, 2016 8:18:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name a in externs has no effect
function f(a) {  if (a) {    return a;  } else {    var b = a;    return b;  }  return a;}
                     ^

May 16, 2016 8:18:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name a in externs has no effect
function f(a) {  if (a) {    return a;  } else {    var b = a;    return b;  }  return a;}
                                    ^

May 16, 2016 8:18:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name a in externs has no effect
function f(a) {  if (a) {    return a;  } else {    var b = a;    return b;  }  return a;}
                                                            ^

May 16, 2016 8:18:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name b in externs has no effect
function f(a) {  if (a) {    return a;  } else {    var b = a;    return b;  }  return a;}
                                                                         ^

May 16, 2016 8:18:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name a in externs has no effect
function f(a) {  if (a) {    return a;  } else {    var b = a;    return b;  }  return a;}
                                                                                       ^

May 16, 2016 8:18:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 5 warning(s)
May 16, 2016 8:18:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name Foo in externs has no effect
/** @constructor */ var Foo = function() {}; Foo.prototype.bar = function() {};(new Foo()).bar();
                                                                                    ^

May 16, 2016 8:18:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 8:18:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:18:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:18:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: in1:1: WARNING - accessing name customExternFn in externs has no effect
customExternFn(1);
^

May 16, 2016 8:18:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 3 warning(s)
May 16, 2016 8:18:47 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - accessing name foo in externs has no effect
function f(foo, bar) { foo = foo + bar + 2; return foo; }
                       ^

May 16, 2016 8:18:47 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - accessing name foo in externs has no effect
function f(foo, bar) { foo = foo + bar + 2; return foo; }
                             ^

May 16, 2016 8:18:47 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - accessing name bar in externs has no effect
function f(foo, bar) { foo = foo + bar + 2; return foo; }
                                   ^

May 16, 2016 8:18:47 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - accessing name foo in externs has no effect
function f(foo, bar) { foo = foo + bar + 2; return foo; }
                                                   ^

May 16, 2016 8:18:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 4 warning(s)
May 16, 2016 8:18:47 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: WARNING - unknown @define variable HI

May 16, 2016 8:18:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 8:18:47 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:5: WARNING - accessing name foo in externs has no effect
foo = foo + bar + foo;
^

May 16, 2016 8:18:47 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:5: WARNING - accessing name foo in externs has no effect
foo = foo + bar + foo;
      ^

May 16, 2016 8:18:47 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:5: WARNING - accessing name bar in externs has no effect
foo = foo + bar + foo;
            ^

May 16, 2016 8:18:47 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:5: WARNING - accessing name foo in externs has no effect
foo = foo + bar + foo;
                  ^

May 16, 2016 8:18:47 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:6: WARNING - accessing name foo in externs has no effect
return foo;
       ^

May 16, 2016 8:18:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 5 warning(s)
May 16, 2016 8:18:47 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: c:\myfile.js:1: WARNING - accessing name foo in externs has no effect
foo;
^

May 16, 2016 8:18:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 8:18:47 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: c:\myfile.js:1: WARNING - accessing name foo in externs has no effect
foo;   boo;   goo;
^

May 16, 2016 8:18:47 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: c:\myfile.js:1: WARNING - accessing name boo in externs has no effect
foo;   boo;   goo;
       ^

May 16, 2016 8:18:47 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: c:\myfile.js:1: WARNING - accessing name goo in externs has no effect
foo;   boo;   goo;
              ^

May 16, 2016 8:18:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 3 warning(s)
May 16, 2016 8:18:47 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: c:\myfile.js:4: WARNING - accessing name a in externs has no effect
var foo=a + 'this is a really long line that will force the mapping to span multiple linesc + d + e;
        ^

May 16, 2016 8:18:47 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: c:\myfile.js:4: WARNING - accessing name c in externs has no effect
var foo=a + 'this is a really long line that will force the mapping to span multiple linesc + d + e;


May 16, 2016 8:18:47 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: c:\myfile.js:4: WARNING - accessing name d in externs has no effect
var foo=a + 'this is a really long line that will force the mapping to span multiple linesc + d + e;


May 16, 2016 8:18:47 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: c:\myfile.js:4: WARNING - accessing name e in externs has no effect
var foo=a + 'this is a really long line that will force the mapping to span multiple linesc + d + e;


May 16, 2016 8:18:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 4 warning(s)
May 16, 2016 8:18:47 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - name RegExp is not undefined in the externs.
/(a)/.test("a");var a = RegExp.$1
                        ^

May 16, 2016 8:18:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 8:18:51 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name x in externs has no effect
var x = x || {}; x.f = function() {}; x.f(3);
        ^

May 16, 2016 8:18:51 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Function x.f: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var x = x || {}; x.f = function() {}; x.f(3);
                                      ^

May 16, 2016 8:18:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s)
May 16, 2016 8:18:51 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name c in externs has no effect
function f(c) {var f = c; arguments[0] = this;    f.apply(this, arguments); return this;}
                       ^

May 16, 2016 8:18:51 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name arguments in externs has no effect
function f(c) {var f = c; arguments[0] = this;    f.apply(this, arguments); return this;}
                          ^

May 16, 2016 8:18:51 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name arguments in externs has no effect
function f(c) {var f = c; arguments[0] = this;    f.apply(this, arguments); return this;}
                                                                ^

May 16, 2016 8:18:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 3 warning(s)
May 16, 2016 8:18:51 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:18:51 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:18:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s)
May 16, 2016 8:18:52 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name e in externs has no effect
var x = null; try { +x.FOO; } catch (e) {}
                                     ^

May 16, 2016 8:18:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 8:18:52 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name f in externs has no effect
/** @return {number} */ function f() { if (f) { return 3; } }
                                           ^

May 16, 2016 8:18:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 8:18:52 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:18:52 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:18:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s)
May 16, 2016 8:18:52 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:5: WARNING - accessing name InternalName in externs has no effect
var InternalName = function(a) {};goog.exportSymbol('ExternalName', InternalName)
                                                                    ^

May 16, 2016 8:18:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 8:18:52 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name x in externs has no effect
function f() { var x = 3; x = 5; return x; }
                          ^

May 16, 2016 8:18:52 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name x in externs has no effect
function f() { var x = 3; x = 5; return x; }
                                        ^

May 16, 2016 8:18:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s)
May 16, 2016 8:18:52 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:3: WARNING - accessing name ab in externs has no effect
    ab += '-';
    ^

May 16, 2016 8:18:52 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:4: WARNING - accessing name alert in externs has no effect
    alert(ab);
    ^

May 16, 2016 8:18:52 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:4: WARNING - accessing name ab in externs has no effect
    alert(ab);
          ^

May 16, 2016 8:18:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 3 warning(s)
May 16, 2016 8:18:53 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: in1:1: WARNING - Parse error. illegal use of unknown JSDoc tag "contstructor"; ignoring it
/** @contstructor */function F() {  this.field1 = 3;}F.prototype.method1 = function() {  this.field1 = 5;};(new F()).method1();
    ^

May 16, 2016 8:18:53 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: in1:1: WARNING - accessing name F in externs has no effect
/** @contstructor */function F() {  this.field1 = 3;}F.prototype.method1 = function() {  this.field1 = 5;};(new F()).method1();
                                                                                                                ^

May 16, 2016 8:18:53 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s)
Closure Compiler (http://code.google.com/closure/compiler)
Version: Unversioned directory
Built on: 2016/05/16 12:22
May 16, 2016 8:18:54 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name x in externs has no effect
function f() {var x = 3; var y = x; var z = y; return z;}
                                 ^

May 16, 2016 8:18:54 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name y in externs has no effect
function f() {var x = 3; var y = x; var z = y; return z;}
                                            ^

May 16, 2016 8:18:54 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name z in externs has no effect
function f() {var x = 3; var y = x; var z = y; return z;}
                                                      ^

May 16, 2016 8:18:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 3 warning(s)
May 16, 2016 8:18:54 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:18:54 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:18:54 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: in1:1: WARNING - accessing name DomHelper in externs has no effect
/** @constructor */ var DomHelper = function(){  /** @type {number} */ this.field = 3;};function f() {   return (new DomHelper()).field + (new DomHelper()).field; };
                                                                                                                     ^

May 16, 2016 8:18:54 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: in1:1: WARNING - accessing name DomHelper in externs has no effect
/** @constructor */ var DomHelper = function(){  /** @type {number} */ this.field = 3;};function f() {   return (new DomHelper()).field + (new DomHelper()).field; };
                                                                                                                                               ^

May 16, 2016 8:18:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 4 warning(s)
May 16, 2016 8:18:55 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:4: WARNING - accessing name InternalName in externs has no effect
 var InternalName = function(a,b,c) {  return 6;};goog.exportSymbol('ExternalName', InternalName)
                                                                                    ^

May 16, 2016 8:18:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 8:18:55 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - name goog is not undefined in the externs.
goog.require('goog.beer');
^

May 16, 2016 8:18:55 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i1:1: WARNING - name goog is not undefined in the externs.
goog.provide('goog.beer');
^

May 16, 2016 8:18:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s)
May 16, 2016 8:18:56 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:18:56 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:18:56 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: in1:2: WARNING - Property dom never defined on goog
goog.dom.DomHelper = function(){};
^

May 16, 2016 8:18:56 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: in1:2: WARNING - name goog is not undefined in the externs.
goog.dom.DomHelper = function(){};
^

May 16, 2016 8:18:56 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: in1:3: WARNING - Property dom never defined on goog
var y = goog.dom.DomHelper;
        ^

May 16, 2016 8:18:56 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: in1:3: WARNING - name goog is not undefined in the externs.
var y = goog.dom.DomHelper;
        ^

May 16, 2016 8:18:56 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: in1:2: ERROR - variable goog is undeclared
goog.dom.DomHelper = function(){};
^

May 16, 2016 8:18:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 6 warning(s)
May 16, 2016 8:18:56 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name FOO in externs has no effect
var FOO = true; FOO = false
                ^

May 16, 2016 8:18:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 8:18:57 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:18:57 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:18:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s)
May 16, 2016 8:18:57 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
var foo = {bar: function(e) }
                            ^

May 16, 2016 8:18:57 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after property list
var foo = {bar: function(e) }
                            ^

May 16, 2016 8:18:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 0 warning(s)
May 16, 2016 8:18:57 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. Unsupported syntax: ERROR
function hi
^

May 16, 2016 8:18:57 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ( before function parameters.
function hi
          ^

May 16, 2016 8:18:57 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ) after formal parameters
function hi
          ^

May 16, 2016 8:18:57 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing formal parameter
function hi
          ^

May 16, 2016 8:18:57 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing { before function body
function hi
          ^

May 16, 2016 8:18:57 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing } after function body
function hi
          ^

May 16, 2016 8:18:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 6 error(s), 0 warning(s)
May 16, 2016 8:18:58 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name START in externs has no effect
START();END()
^

May 16, 2016 8:18:58 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name END in externs has no effect
START();END()
        ^

May 16, 2016 8:18:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s)
May 16, 2016 8:18:58 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:7: WARNING - accessing name internalName in externs has no effect
internalName = function(param1, param2) {return param1 + param2;};goog.exportSymbol('externalName', internalName)
^

May 16, 2016 8:18:58 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:7: WARNING - accessing name param1 in externs has no effect
internalName = function(param1, param2) {return param1 + param2;};goog.exportSymbol('externalName', internalName)
                                                ^

May 16, 2016 8:18:58 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:7: WARNING - accessing name param2 in externs has no effect
internalName = function(param1, param2) {return param1 + param2;};goog.exportSymbol('externalName', internalName)
                                                         ^

May 16, 2016 8:18:58 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:7: WARNING - accessing name internalName in externs has no effect
internalName = function(param1, param2) {return param1 + param2;};goog.exportSymbol('externalName', internalName)
                                                                                                    ^

May 16, 2016 8:18:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 4 warning(s)
May 16, 2016 8:18:58 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - accessing name a in externs has no effect
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = function(p1) {}; a.b.c = function(d, e, f) {};a.b.prototype.c = function(g, h, i) {};goog.exportSymbol('hello', a);goog.exportProperty(a.b, 'c', a.b.c);goog.exportProperty(a.b.prototype, 'c', a.b.prototype.c);
                                                                                                                                                                                                                                   ^

May 16, 2016 8:18:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 8:18:58 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name a in externs has no effect
while(a){a();if(b){b();b()}}
      ^

May 16, 2016 8:18:58 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name a in externs has no effect
while(a){a();if(b){b();b()}}
         ^

May 16, 2016 8:18:58 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name b in externs has no effect
while(a){a();if(b){b();b()}}
                ^

May 16, 2016 8:18:58 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name b in externs has no effect
while(a){a();if(b){b();b()}}
                   ^

May 16, 2016 8:18:58 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name b in externs has no effect
while(a){a();if(b){b();b()}}
                       ^

May 16, 2016 8:18:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 5 warning(s)
May 16, 2016 8:18:59 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name foo in externs has no effect
function foo() {} foo();
                  ^

May 16, 2016 8:18:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 8:18:59 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - name a is not undefined in the externs.
a.b.c = function () {};
^

May 16, 2016 8:18:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 8:18:59 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unnamed function statement
function () {}
^

May 16, 2016 8:18:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 8:19:00 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:19:00 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:19:00 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: in1:1: WARNING - accessing name DomHelper in externs has no effect
/** @constructor */ var DomHelper = function(){};/** method */ DomHelper.method = function() {};function f() { var x = DomHelper; x.method() + x.method(); }
                                                                                                                       ^

May 16, 2016 8:19:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 3 warning(s)
May 16, 2016 8:19:00 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name extern in externs has no effect
var extern; function f() { return extern + extern + extern + extern; }
                                  ^

May 16, 2016 8:19:00 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name extern in externs has no effect
var extern; function f() { return extern + extern + extern + extern; }
                                           ^

May 16, 2016 8:19:00 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name extern in externs has no effect
var extern; function f() { return extern + extern + extern + extern; }
                                                    ^

May 16, 2016 8:19:00 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name extern in externs has no effect
var extern; function f() { return extern + extern + extern + extern; }
                                                             ^

May 16, 2016 8:19:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 4 warning(s)
May 16, 2016 8:19:00 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name a in externs has no effect
var a = function() {};a = function() {};a = function() {};a = function() {};a = function() {};a = function() {};a = function() {};a = function() {};a = function() {};a = function() {};a = function() {};
                      ^

May 16, 2016 8:19:00 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name a in externs has no effect
var a = function() {};a = function() {};a = function() {};a = function() {};a = function() {};a = function() {};a = function() {};a = function() {};a = function() {};a = function() {};a = function() {};
                                        ^

May 16, 2016 8:19:00 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name a in externs has no effect
var a = function() {};a = function() {};a = function() {};a = function() {};a = function() {};a = function() {};a = function() {};a = function() {};a = function() {};a = function() {};a = function() {};
                                                          ^

May 16, 2016 8:19:00 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name a in externs has no effect
var a = function() {};a = function() {};a = function() {};a = function() {};a = function() {};a = function() {};a = function() {};a = function() {};a = function() {};a = function() {};a = function() {};
                                                                            ^

May 16, 2016 8:19:00 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name a in externs has no effect
var a = function() {};a = function() {};a = function() {};a = function() {};a = function() {};a = function() {};a = function() {};a = function() {};a = function() {};a = function() {};a = function() {};
                                                                                              ^

May 16, 2016 8:19:00 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name a in externs has no effect
var a = function() {};a = function() {};a = function() {};a = function() {};a = function() {};a = function() {};a = function() {};a = function() {};a = function() {};a = function() {};a = function() {};
                                                                                                                ^

May 16, 2016 8:19:00 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name a in externs has no effect
var a = function() {};a = function() {};a = function() {};a = function() {};a = function() {};a = function() {};a = function() {};a = function() {};a = function() {};a = function() {};a = function() {};
                                                                                                                                  ^

May 16, 2016 8:19:00 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name a in externs has no effect
var a = function() {};a = function() {};a = function() {};a = function() {};a = function() {};a = function() {};a = function() {};a = function() {};a = function() {};a = function() {};a = function() {};
                                                                                                                                                    ^

May 16, 2016 8:19:00 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name a in externs has no effect
var a = function() {};a = function() {};a = function() {};a = function() {};a = function() {};a = function() {};a = function() {};a = function() {};a = function() {};a = function() {};a = function() {};
                                                                                                                                                                      ^

May 16, 2016 8:19:00 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name a in externs has no effect
var a = function() {};a = function() {};a = function() {};a = function() {};a = function() {};a = function() {};a = function() {};a = function() {};a = function() {};a = function() {};a = function() {};
                                                                                                                                                                                        ^

May 16, 2016 8:19:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 10 warning(s)
May 16, 2016 8:19:01 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:19:01 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:19:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s)
May 16, 2016 8:19:01 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name synStart in externs has no effect
/** @param {number} x */ function f(x) {}function g() { synStart('foo'); var progress = 1; f(progress); synEnd('foo');}
                                                        ^

May 16, 2016 8:19:01 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name f in externs has no effect
/** @param {number} x */ function f(x) {}function g() { synStart('foo'); var progress = 1; f(progress); synEnd('foo');}
                                                                                           ^

May 16, 2016 8:19:01 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name progress in externs has no effect
/** @param {number} x */ function f(x) {}function g() { synStart('foo'); var progress = 1; f(progress); synEnd('foo');}
                                                                                             ^

May 16, 2016 8:19:01 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name synEnd in externs has no effect
/** @param {number} x */ function f(x) {}function g() { synStart('foo'); var progress = 1; f(progress); synEnd('foo');}
                                                                                                        ^

May 16, 2016 8:19:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 4 warning(s)
May 16, 2016 8:19:01 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:6: WARNING - accessing name fn in externs has no effect
var fn = function(a) {};goog.exportSymbol('fn', fn);
                                                ^

May 16, 2016 8:19:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 8:19:01 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:19:01 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:19:01 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: in1:1: WARNING - cannot instantiate non-constructor
function F() {  this.field1 = 3;}F.prototype.method1 = function() {  this.field1 = 5;};(new F()).method1();
                                                                                        ^

May 16, 2016 8:19:01 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: in1:1: WARNING - accessing name F in externs has no effect
function F() {  this.field1 = 3;}F.prototype.method1 = function() {  this.field1 = 5;};(new F()).method1();
                                                                                            ^

May 16, 2016 8:19:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 4 warning(s)
May 16, 2016 8:19:01 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: ERROR - TightenTypes requires type checking. Please use --check_types.

May 16, 2016 8:19:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 8:19:01 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name Foo in externs has no effect
function Foo() { this.bar(); } Foo.prototype.bar = function() { return Foo(); };
                                                                       ^

May 16, 2016 8:19:01 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 8:19:02 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name a in externs has no effect
function f(a) { return a; } f(true);
                       ^

May 16, 2016 8:19:02 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name f in externs has no effect
function f(a) { return a; } f(true);
                            ^

May 16, 2016 8:19:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s)
May 16, 2016 8:19:02 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:7: WARNING - accessing name internalName in externs has no effect
internalName = function(param1, param2) {return param1 + param2;};goog.exportSymbol('externalName', internalName)
^

May 16, 2016 8:19:02 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:7: WARNING - accessing name param1 in externs has no effect
internalName = function(param1, param2) {return param1 + param2;};goog.exportSymbol('externalName', internalName)
                                                ^

May 16, 2016 8:19:02 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:7: WARNING - accessing name param2 in externs has no effect
internalName = function(param1, param2) {return param1 + param2;};goog.exportSymbol('externalName', internalName)
                                                         ^

May 16, 2016 8:19:02 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:7: WARNING - accessing name internalName in externs has no effect
internalName = function(param1, param2) {return param1 + param2;};goog.exportSymbol('externalName', internalName)
                                                                                                    ^

May 16, 2016 8:19:02 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 4 warning(s)
May 16, 2016 8:19:03 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:5: WARNING - accessing name any_expression in externs has no effect
  if (any_expression) {
      ^

May 16, 2016 8:19:03 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:6: WARNING - accessing name fn2 in externs has no effect
    fn2 = external_ref;
    ^

May 16, 2016 8:19:03 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:6: WARNING - accessing name external_ref in externs has no effect
    fn2 = external_ref;
          ^

May 16, 2016 8:19:03 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:7: WARNING - accessing name fn1 in externs has no effect
    fn1 = function (content) {
    ^

May 16, 2016 8:19:03 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - accessing name fn2 in externs has no effect
      return fn2();
             ^

May 16, 2016 8:19:03 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:14: WARNING - accessing name fn1 in externs has no effect
      if (fn1) fn1();
          ^

May 16, 2016 8:19:03 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:14: WARNING - accessing name fn1 in externs has no effect
      if (fn1) fn1();
               ^

May 16, 2016 8:19:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 7 warning(s)
May 16, 2016 8:19:03 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name foo in externs has no effect
var goog = {}; goog.provide('foo'); function f() { foo = {};}
                                                   ^

May 16, 2016 8:19:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 8:19:04 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - name goog is not undefined in the externs.
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                         ^

May 16, 2016 8:19:04 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type c.MyType
/** @const */ var a = {};/** @const */ a.b = {};/** @const */ a.b.c = {};goog.scope(function() {  var b = a.b;  var c = b.c;  /** @typedef {string} */  c.MyType;  /** @param {c.MyType} x The variable. */  c.myFunc = function(x) {};});
                                                                                                                                                                               ^

May 16, 2016 8:19:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s)
May 16, 2016 8:19:05 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - name i is not undefined in the externs.
var goog; goog.provide('i.am.on.a.Horse');i.am.on.a.Horse = function() {};i.am.on.a.Horse.prototype.x = function() {};i.am.on.a.Boat.prototype.y = function() {}
                                          ^

May 16, 2016 8:19:05 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - name i is not undefined in the externs.
var goog; goog.provide('i.am.on.a.Horse');i.am.on.a.Horse = function() {};i.am.on.a.Horse.prototype.x = function() {};i.am.on.a.Boat.prototype.y = function() {}
                                                                          ^

May 16, 2016 8:19:05 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - name i is not undefined in the externs.
var goog; goog.provide('i.am.on.a.Horse');i.am.on.a.Horse = function() {};i.am.on.a.Horse.prototype.x = function() {};i.am.on.a.Boat.prototype.y = function() {}
                                                                                                                      ^

May 16, 2016 8:19:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 3 warning(s)
May 16, 2016 8:19:05 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name x in externs has no effect
x = 3; var x = 5;
^

May 16, 2016 8:19:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
WARNING:unknown:///unknown:1+2 - 3: Will not work in IE
java.lang.Exception
	at com.google.caja.reporting.EchoingMessageQueue$1.add(EchoingMessageQueue.java:52)
	at com.google.caja.reporting.EchoingMessageQueue$1.add(EchoingMessageQueue.java:40)
	at java.util.AbstractList.add(AbstractList.java:108)
	at com.google.caja.reporting.AbstractMessageQueue.addMessage(AbstractMessageQueue.java:25)
	at com.google.caja.parser.js.Parser.parseExpressionAtom(Parser.java:1138)
	at com.google.caja.parser.js.Parser.parseOp(Parser.java:792)
	at com.google.caja.parser.js.Parser.parseExpressionInt(Parser.java:727)
	at com.google.caja.parser.js.Parser.parseExpressionStmt(Parser.java:1281)
	at com.google.caja.parser.js.Parser.parseStatementWithoutLabel(Parser.java:706)
	at com.google.caja.parser.js.Parser.parseStatement(Parser.java:306)
	at com.google.caja.parser.js.Parser.parseTerminatedStatement(Parser.java:1312)
	at com.google.caja.parser.js.Parser.parseProgramOrFunctionBody(Parser.java:325)
	at com.google.caja.parser.js.Parser.parseProgram(Parser.java:314)
	at com.google.caja.parser.js.Parser.parse(Parser.java:272)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:42)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:31)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:26)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:22)
	at com.google.javascript.jscomp.jsonml.JsonMLConversionTest.testConversion(JsonMLConversionTest.java:79)
	at com.google.javascript.jscomp.jsonml.JsonMLConversionTest.testArray1(JsonMLConversionTest.java:102)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestResultRunner.call(JUnitSingleTestResultRunner.java:36)
	at xxl.java.junit.JUnitSingleTestResultRunner.call(JUnitSingleTestResultRunner.java:11)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
May 16, 2016 8:19:05 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - accessing name A in externs has no effect
/** @constructor */function B() {this.a = new A();}
                                              ^

May 16, 2016 8:19:05 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:3: WARNING - accessing name alert in externs has no effect
B.prototype.dostuff = function() {this.a.foo++;alert('hi');}
                                               ^

May 16, 2016 8:19:05 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:4: WARNING - accessing name B in externs has no effect
new B().dostuff();
    ^

May 16, 2016 8:19:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 3 warning(s)
May 16, 2016 8:19:05 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: bar;:1: WARNING - accessing name file2 in externs has no effect
file2
^

May 16, 2016 8:19:05 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: foo;:1: WARNING - accessing name file1 in externs has no effect
file1
^

May 16, 2016 8:19:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s)
May 16, 2016 8:19:05 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: bar;:1: WARNING - accessing name file1 in externs has no effect
file1
^

May 16, 2016 8:19:05 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: foo;:1: WARNING - accessing name file2 in externs has no effect
file2
^

May 16, 2016 8:19:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s)
May 16, 2016 8:19:05 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:19:05 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:19:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s)
May 16, 2016 8:19:06 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name isFunction in externs has no effect
isFunction = function(functionToCheck) {  var getType = {};  return functionToCheck &&       getType.toString.apply(functionToCheck) ===      '[object Function]';};
^

May 16, 2016 8:19:06 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name functionToCheck in externs has no effect
isFunction = function(functionToCheck) {  var getType = {};  return functionToCheck &&       getType.toString.apply(functionToCheck) ===      '[object Function]';};
                                                                    ^

May 16, 2016 8:19:06 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name functionToCheck in externs has no effect
isFunction = function(functionToCheck) {  var getType = {};  return functionToCheck &&       getType.toString.apply(functionToCheck) ===      '[object Function]';};
                                                                                                                    ^

May 16, 2016 8:19:06 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 3 warning(s)
May 16, 2016 8:19:08 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:19:08 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:19:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s)
May 16, 2016 8:19:09 PM com.google.javascript.jscomp.Tracer logCurrentThreadTrace
WARNING: timers:
      09.782 Start        [Compiler] parseInputs
    0 09.782 Done    0 ms [Compiler] parseInputs
    0 09.782 Start        JSCompiler
    0 09.782 Done    0 ms JSCompiler
    0 09.782 Start        JSCompiler
    0 09.782 Done    0 ms JSCompiler
    0 09.782 Start        JSCompiler
    0 09.782 Done    0 ms JSCompiler
    0 09.782 Start        JSCompiler
    0 09.782 Done    0 ms JSCompiler
    0 09.782 Start        JSCompiler
    0 09.782 Done    0 ms JSCompiler
    0 09.782 Start        [Compiler] normalize
    0 09.782 Done    0 ms [Compiler] normalize
    0 09.782 Start        JSCompiler
    0 09.782 Done    0 ms JSCompiler
    0 09.782 Start        JSCompiler
    0 09.782 Done    0 ms JSCompiler
    0 09.782 Start        JSCompiler
    0 09.782 Done    0 ms JSCompiler
    0 09.782 Start        JSCompiler
    0 09.782 Done    0 ms JSCompiler
    0 09.782 Start        JSCompiler
    0 09.782 Done    0 ms JSCompiler
    0 09.782 Start        JSCompiler
    0 09.782 Done    0 ms JSCompiler
    0 09.782 Start        JSCompiler
    0 09.782 Done    0 ms JSCompiler
    0 09.782 Start        JSCompiler
    0 09.782 Done    0 ms JSCompiler
    0 09.782 Start        JSCompiler
    0 09.782 Done    0 ms JSCompiler
    0 09.782 Start        JSCompiler
    0 09.782 Done    0 ms JSCompiler
    0 09.782 Start        JSCompiler
    0 09.782 Done    0 ms JSCompiler
    0 09.782 Start        JSCompiler
    0 09.782 Done    0 ms JSCompiler
    0 09.782 Start        JSCompiler
    0 09.782 Done    0 ms JSCompiler
 TOTAL Compiler 2 (0 ms)

May 16, 2016 8:19:10 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:5: WARNING - accessing name internalName in externs has no effect
internalName = function(a) {  return a;
^

May 16, 2016 8:19:10 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:5: WARNING - accessing name a in externs has no effect
internalName = function(a) {  return a;
                                     ^

May 16, 2016 8:19:10 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:6: WARNING - accessing name internalName in externs has no effect
};goog.exportSymbol('externalName', internalName)
                                    ^

May 16, 2016 8:19:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 3 warning(s)
May 16, 2016 8:19:10 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:5: WARNING - accessing name internalName in externs has no effect
internalName = function(a) {  return 6;
^

May 16, 2016 8:19:10 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:6: WARNING - accessing name internalName in externs has no effect
};goog.exportSymbol('externalName', internalName)
                                    ^

May 16, 2016 8:19:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s)
May 16, 2016 8:19:10 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:5: WARNING - accessing name internalName in externs has no effect
internalName = function(a) {};goog.exportSymbol('externalName', internalName)
^

May 16, 2016 8:19:10 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:5: WARNING - accessing name internalName in externs has no effect
internalName = function(a) {};goog.exportSymbol('externalName', internalName)
                                                                ^

May 16, 2016 8:19:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s)
May 16, 2016 8:19:10 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - accessing name d in externs has no effect
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = {}; var d = {}; a.b.c = d;goog.exportSymbol('foobar', a.b.c)
                                                                                                                                           ^

May 16, 2016 8:19:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 8:19:10 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - initializing variable
found   : string
required: number
/** @type {number} */ var n = window.name;
                              ^

May 16, 2016 8:19:10 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 8:19:11 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:19:11 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:19:11 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s)
May 16, 2016 8:19:12 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:19:12 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:19:12 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s)
May 16, 2016 8:19:13 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:19:13 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:19:13 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: in1:3: WARNING - Bad type annotation. Unknown type Missing
 * @extends {Missing}
             ^

May 16, 2016 8:19:13 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: in1:7: WARNING - accessing name DomHelper in externs has no effect
  return (new DomHelper()).prop;
              ^

May 16, 2016 8:19:13 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 4 warning(s)
May 16, 2016 8:19:14 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:7: WARNING - accessing name internalName in externs has no effect
internalName = function(param1) {return param1;};goog.exportSymbol('externalName', internalName)
^

May 16, 2016 8:19:14 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:7: WARNING - accessing name param1 in externs has no effect
internalName = function(param1) {return param1;};goog.exportSymbol('externalName', internalName)
                                        ^

May 16, 2016 8:19:14 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:7: WARNING - accessing name internalName in externs has no effect
internalName = function(param1) {return param1;};goog.exportSymbol('externalName', internalName)
                                                                                   ^

May 16, 2016 8:19:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 3 warning(s)
May 16, 2016 8:19:14 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name x in externs has no effect
var x; x && alert(1);
       ^

May 16, 2016 8:19:14 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name alert in externs has no effect
var x; x && alert(1);
            ^

May 16, 2016 8:19:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s)
May 16, 2016 8:19:14 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - name FOO is not undefined in the externs.
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('FOO'); FOO.bar = 3;
                                                                                                                    ^

May 16, 2016 8:19:14 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 8:19:15 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:5: WARNING - accessing name data in externs has no effect
  set appData(data) { this.appData_ = data; }
                                      ^

May 16, 2016 8:19:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 8:19:15 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:4: WARNING - accessing name Foo in externs has no effect
 */ Foo = /** @type {function(new:Foo)} */ (AyncTestCase());
    ^

May 16, 2016 8:19:15 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:4: WARNING - Parse error. Cycle detected in inheritance chain of type Foo
 */ Foo = /** @type {function(new:Foo)} */ (AyncTestCase());
                                  ^

May 16, 2016 8:19:15 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:4: WARNING - accessing name AyncTestCase in externs has no effect
 */ Foo = /** @type {function(new:Foo)} */ (AyncTestCase());
                                            ^

May 16, 2016 8:19:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 3 warning(s)
May 16, 2016 8:19:15 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:19:15 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:19:15 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: in1:1: WARNING - accessing name DomHelper in externs has no effect
/** @constructor */ var DomHelper = function(){};/** method */ DomHelper.prototype.method = function() {};function f() {   (new DomHelper()).method(); (new DomHelper()).method(); };
                                                                                                                                ^

May 16, 2016 8:19:15 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: in1:1: WARNING - accessing name DomHelper in externs has no effect
/** @constructor */ var DomHelper = function(){};/** method */ DomHelper.prototype.method = function() {};function f() {   (new DomHelper()).method(); (new DomHelper()).method(); };
                                                                                                                                                            ^

May 16, 2016 8:19:15 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 4 warning(s)
May 16, 2016 8:19:16 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name window in externs has no effect
function f() { return window + window + window + window; }
                      ^

May 16, 2016 8:19:16 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name window in externs has no effect
function f() { return window + window + window + window; }
                               ^

May 16, 2016 8:19:16 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name window in externs has no effect
function f() { return window + window + window + window; }
                                        ^

May 16, 2016 8:19:16 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name window in externs has no effect
function f() { return window + window + window + window; }
                                                 ^

May 16, 2016 8:19:16 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 4 warning(s)
May 16, 2016 8:19:17 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: bar;:1: WARNING - accessing name file2 in externs has no effect
file2
^

May 16, 2016 8:19:17 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: foo;:1: WARNING - accessing name file1 in externs has no effect
file1
^

May 16, 2016 8:19:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s)
May 16, 2016 8:19:17 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: bar;:1: WARNING - accessing name file1 in externs has no effect
file1
^

May 16, 2016 8:19:17 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: foo;:1: WARNING - accessing name file2 in externs has no effect
file2
^

May 16, 2016 8:19:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s)
May 16, 2016 8:19:17 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name y in externs has no effect
var x = {foo: y};
              ^

May 16, 2016 8:19:17 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 8:19:18 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - accessing name d in externs has no effect
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = {}; a.b = {}; var d = null; a.b.c = d;goog.exportSymbol('foobar', a.b.c())
                                                                                                                                             ^

May 16, 2016 8:19:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 8:19:18 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 8:19:18 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 8:19:19 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:19:19 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:19:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s)
May 16, 2016 8:19:19 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name f in externs has no effect
var x = f; function f() { return 3; }
        ^

May 16, 2016 8:19:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 8:19:19 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:19:19 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:19:19 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: in1:1: WARNING - name goog is not undefined in the externs.
/** @constructor */ goog.Foo = function(){};
                    ^

May 16, 2016 8:19:19 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: in1:1: ERROR - variable goog is undeclared
/** @constructor */ goog.Foo = function(){};
                    ^

May 16, 2016 8:19:19 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 3 warning(s)
May 16, 2016 8:19:20 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name noSideEffects in externs has no effect
noSideEffects();
^

May 16, 2016 8:19:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 8:19:20 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:19:20 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:19:20 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s)
May 16, 2016 8:19:26 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:19:26 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:19:26 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: in1:1: WARNING - Function goog.scope: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).
var goog = {};goog.scope = function() {};goog.scope(function() {});
                                         ^

May 16, 2016 8:19:26 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 3 warning(s)
May 16, 2016 8:19:27 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:6: WARNING - accessing name internalName in externs has no effect
internalName = function(a) {  return 6;
^

May 16, 2016 8:19:27 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:7: WARNING - accessing name internalName in externs has no effect
};goog.exportSymbol('externalName', internalName)
                                    ^

May 16, 2016 8:19:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s)
May 16, 2016 8:19:27 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:19:27 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:19:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s)
May 16, 2016 8:19:27 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name window in externs has no effect
var abc = 3; function f() { window['a'] = 5; }
                            ^

May 16, 2016 8:19:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 8:19:27 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name abc in externs has no effect
var abc = 3; function f() { var xyz = 5; return abc + xyz; }
                                                ^

May 16, 2016 8:19:27 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name xyz in externs has no effect
var abc = 3; function f() { var xyz = 5; return abc + xyz; }
                                                      ^

May 16, 2016 8:19:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s)
May 16, 2016 8:19:27 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name f in externs has no effect
function f() {} f('id');
                ^

May 16, 2016 8:19:27 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 8:19:28 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:19:28 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:19:28 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: in1:5: WARNING - accessing name alert in externs has no effect
  alert('hi');
  ^

May 16, 2016 8:19:28 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: in1:12: WARNING - Property inherits never defined on goog
goog.inherits(a.b.DerivedClass, a.b.BaseClass);
^

May 16, 2016 8:19:28 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: in1:12: WARNING - name goog is not undefined in the externs.
goog.inherits(a.b.DerivedClass, a.b.BaseClass);
^

May 16, 2016 8:19:28 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: in1:5: ERROR - variable alert is undeclared
  alert('hi');
  ^

May 16, 2016 8:19:28 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: in1:12: ERROR - variable goog is undeclared
goog.inherits(a.b.DerivedClass, a.b.BaseClass);
^

May 16, 2016 8:19:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 2 error(s), 5 warning(s)
May 16, 2016 8:19:28 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name Foo in externs has no effect
var Foo = function() {}; Foo.prototype.bar = function() {};var x = new Foo();
                                                                       ^

May 16, 2016 8:19:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 8:19:28 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - accessing name a in externs has no effect
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; /** @constructor */ var a = function() {};goog.exportSymbol('foobar', a)
                                                                                                                                                                       ^

May 16, 2016 8:19:28 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 8:19:29 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - inconsistent return type
found   : boolean
required: number
/** @return {number} */ function f() { return true; }
                                              ^

May 16, 2016 8:19:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 8:19:29 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name Foo in externs has no effect
function Foo() {} Foo.prototype.bar = function() { return new Foo(); };
                                                              ^

May 16, 2016 8:19:29 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 8:19:30 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name Foo in externs has no effect
function Foo() {} Foo.prototype.bar = function() { return new Foo(); };function f(x) { x.bar(); }
                                                              ^

May 16, 2016 8:19:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 8:19:30 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name goog in externs has no effect
/** @define {boolean} */ var COMPILED = false;var goog = {}; goog.exportSymbol('b', goog);
                                                                                    ^

May 16, 2016 8:19:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 8:19:30 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: input1:1: WARNING - accessing name foo in externs has no effect
function Bar(){} Bar.prototype.getA=function(x){};var foo;foo.getA(foo);foo.doo=foo;foo.bloo=foo;
                                                                   ^

May 16, 2016 8:19:30 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: input1:1: WARNING - accessing name foo in externs has no effect
function Bar(){} Bar.prototype.getA=function(x){};var foo;foo.getA(foo);foo.doo=foo;foo.bloo=foo;
                                                                                ^

May 16, 2016 8:19:30 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: input1:1: WARNING - accessing name foo in externs has no effect
function Bar(){} Bar.prototype.getA=function(x){};var foo;foo.getA(foo);foo.doo=foo;foo.bloo=foo;
                                                                                             ^

May 16, 2016 8:19:30 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: input2:1: WARNING - accessing name too in externs has no effect
function Far(){} Far.prototype.getB=function(x){};var too;too.getB(too);too.woo=too;too.bloo=too;
                                                                   ^

May 16, 2016 8:19:30 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: input2:1: WARNING - accessing name too in externs has no effect
function Far(){} Far.prototype.getB=function(x){};var too;too.getB(too);too.woo=too;too.bloo=too;
                                                                                ^

May 16, 2016 8:19:30 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: input2:1: WARNING - accessing name too in externs has no effect
function Far(){} Far.prototype.getB=function(x){};var too;too.getB(too);too.woo=too;too.bloo=too;
                                                                                             ^

May 16, 2016 8:19:30 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: input3:1: WARNING - accessing name noo in externs has no effect
function Car(){} Car.prototype.getC=function(x){};var noo;noo.getC(noo);noo.zoo=noo;noo.cloo=noo;
                                                                   ^

May 16, 2016 8:19:30 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: input3:1: WARNING - accessing name noo in externs has no effect
function Car(){} Car.prototype.getC=function(x){};var noo;noo.getC(noo);noo.zoo=noo;noo.cloo=noo;
                                                                                ^

May 16, 2016 8:19:30 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: input3:1: WARNING - accessing name noo in externs has no effect
function Car(){} Car.prototype.getC=function(x){};var noo;noo.getC(noo);noo.zoo=noo;noo.cloo=noo;
                                                                                             ^

May 16, 2016 8:19:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 9 warning(s)
May 16, 2016 8:19:30 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i1:1: WARNING - accessing name x in externs has no effect
x;
^

May 16, 2016 8:19:30 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 8:19:32 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name goog in externs has no effect
var goog = {};goog.asserts.assert(goog);
                                  ^

May 16, 2016 8:19:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 8:19:32 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - accessing name a in externs has no effect
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var a = function(d, e, f) {};goog.exportSymbol('foobar', a)
                                                                                                                                                          ^

May 16, 2016 8:19:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 8:19:32 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:19:32 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:19:32 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: in1:4: WARNING - accessing name A in externs has no effect
/** @type {A} */ var a = new A();
                             ^

May 16, 2016 8:19:32 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: in1:9: WARNING - accessing name x in externs has no effect
  var x; if (x) { x = a.b.b; } else { x = a.b.c; }
             ^

May 16, 2016 8:19:32 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: in1:9: WARNING - accessing name x in externs has no effect
  var x; if (x) { x = a.b.b; } else { x = a.b.c; }
                  ^

May 16, 2016 8:19:32 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: in1:9: WARNING - accessing name x in externs has no effect
  var x; if (x) { x = a.b.b; } else { x = a.b.c; }
                                      ^

May 16, 2016 8:19:32 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: in1:9: WARNING - Property c never defined on A.prototype.b
  var x; if (x) { x = a.b.b; } else { x = a.b.c; }
                                          ^

May 16, 2016 8:19:32 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: in1:10: WARNING - accessing name x in externs has no effect
  return x;
         ^

May 16, 2016 8:19:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 8 warning(s)
May 16, 2016 8:19:32 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i1:1: WARNING - accessing name Foo in externs has no effect
new Foo();
    ^

May 16, 2016 8:19:32 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
LOG:unknown:///unknown:1+17: Semicolon inserted
May 16, 2016 8:19:33 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name f in externs has no effect
var x = f(); function f() { return 3; }
        ^

May 16, 2016 8:19:33 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 8:19:34 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name Foo in externs has no effect
function Foo() {} Foo.prototype.bar = function() { return 3; };var x = new Foo(); x.bar();
                                                                           ^

May 16, 2016 8:19:34 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
Closure Compiler (http://code.google.com/closure/compiler)
Version: Unversioned directory
Built on: 2016/05/16 12:22
May 16, 2016 8:19:36 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name foo in externs has no effect
function foo() {} var x = 3; foo(x); var YYY = 4; foo(YYY);
                             ^

May 16, 2016 8:19:36 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name x in externs has no effect
function foo() {} var x = 3; foo(x); var YYY = 4; foo(YYY);
                                 ^

May 16, 2016 8:19:36 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name foo in externs has no effect
function foo() {} var x = 3; foo(x); var YYY = 4; foo(YYY);
                                                  ^

May 16, 2016 8:19:36 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name YYY in externs has no effect
function foo() {} var x = 3; foo(x); var YYY = 4; foo(YYY);
                                                      ^

May 16, 2016 8:19:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 4 warning(s)
May 16, 2016 8:19:36 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:7: WARNING - accessing name internalName in externs has no effect
internalName = function(param1) {return /** @type {V} */ (param1);};goog.exportSymbol('externalName', internalName)
^

May 16, 2016 8:19:36 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:7: WARNING - Bad type annotation. Unknown type V
internalName = function(param1) {return /** @type {V} */ (param1);};goog.exportSymbol('externalName', internalName)
                                                   ^

May 16, 2016 8:19:36 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:7: WARNING - accessing name param1 in externs has no effect
internalName = function(param1) {return /** @type {V} */ (param1);};goog.exportSymbol('externalName', internalName)
                                                          ^

May 16, 2016 8:19:36 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:7: WARNING - accessing name internalName in externs has no effect
internalName = function(param1) {return /** @type {V} */ (param1);};goog.exportSymbol('externalName', internalName)
                                                                                                      ^

May 16, 2016 8:19:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 4 warning(s)
May 16, 2016 8:19:36 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - name foo is not undefined in the externs.
var goog = {}; goog.provide('foo.bar'); function f() { foo.bar = {};}
                                                       ^

May 16, 2016 8:19:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 8:19:36 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - name foo is not undefined in the externs.
var goog = {}; goog.provide('foo.bar'); goog.provide('foo.bar.baz'); /** @constructor */ foo.bar = function() {};/** @constructor */ foo.bar.baz = function() {};
                                                                                         ^

May 16, 2016 8:19:36 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - name foo is not undefined in the externs.
var goog = {}; goog.provide('foo.bar'); goog.provide('foo.bar.baz'); /** @constructor */ foo.bar = function() {};/** @constructor */ foo.bar.baz = function() {};
                                                                                                                                     ^

May 16, 2016 8:19:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s)
May 16, 2016 8:19:36 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name x in externs has no effect
x = 3;
^

May 16, 2016 8:19:36 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable x is undeclared
x = 3;
^

May 16, 2016 8:19:36 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 1 warning(s)
May 16, 2016 8:19:38 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name foo in externs has no effect
var goog = {}; goog.provide('foo.Bar'); foo = {}; foo.Bar = {};
                                        ^

May 16, 2016 8:19:38 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - name foo is not undefined in the externs.
var goog = {}; goog.provide('foo.Bar'); foo = {}; foo.Bar = {};
                                                  ^

May 16, 2016 8:19:38 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s)
May 16, 2016 8:19:39 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:3: WARNING - name goog is not undefined in the externs.
goog.setCssNameMapping({'foo':'bar'});
^

May 16, 2016 8:19:39 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:5: WARNING - name goog is not undefined in the externs.
  return goog.getCssName('foo');
         ^

May 16, 2016 8:19:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s)
May 16, 2016 8:19:39 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - name goog is not undefined in the externs.
ns.C = goog.defineClass(null, {
       ^

May 16, 2016 8:19:39 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:6: WARNING - accessing name alert in externs has no effect
alert(new ns.C().someProperty + new ns.C().someProperty);
^

May 16, 2016 8:19:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s)
May 16, 2016 8:19:39 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - name goog is not undefined in the externs.
var C = goog.defineClass(null, {
        ^

May 16, 2016 8:19:39 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:5: WARNING - accessing name alert in externs has no effect
alert(new C().someProperty + new C().someProperty);
^

May 16, 2016 8:19:39 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:5: WARNING - accessing name C in externs has no effect
alert(new C().someProperty + new C().someProperty);
          ^

May 16, 2016 8:19:39 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:5: WARNING - accessing name C in externs has no effect
alert(new C().someProperty + new C().someProperty);
                                 ^

May 16, 2016 8:19:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 4 warning(s)
May 16, 2016 8:19:39 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - name goog is not undefined in the externs.
var C = goog.defineClass(null, {
        ^

May 16, 2016 8:19:39 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - accessing name C in externs has no effect
});var x = new C();
               ^

May 16, 2016 8:19:39 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - variable goog is undeclared
var C = goog.defineClass(null, {
        ^

May 16, 2016 8:19:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 2 warning(s)
May 16, 2016 8:19:39 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:5: WARNING - accessing name internalName in externs has no effect
internalName = function() {};goog.exportSymbol('externalName', internalName)
^

May 16, 2016 8:19:39 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:5: WARNING - accessing name internalName in externs has no effect
internalName = function() {};goog.exportSymbol('externalName', internalName)
                                                               ^

May 16, 2016 8:19:39 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s)
May 16, 2016 8:19:40 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:19:40 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:19:40 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: in1:1: WARNING - name x is not undefined in the externs.
/** @constructor */ var DomHelper = function(){};DomHelper.prototype.method = function() {   this.field = 3;  return x.field;}
                                                                                                                     ^

May 16, 2016 8:19:40 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: in1:1: ERROR - variable x is undeclared
/** @constructor */ var DomHelper = function(){};DomHelper.prototype.method = function() {   this.field = 3;  return x.field;}
                                                                                                                     ^

May 16, 2016 8:19:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 3 warning(s)
May 16, 2016 8:19:40 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:19:40 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:19:40 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s)
May 16, 2016 8:19:41 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:19:41 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:19:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s)
May 16, 2016 8:19:41 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:19:41 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:19:41 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s)
May 16, 2016 8:19:42 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:19:42 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:19:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s)
May 16, 2016 8:19:42 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: c:\myfile.js:1: WARNING - accessing name foo in externs has no effect
foo;   boo;   goo;
^

May 16, 2016 8:19:42 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: c:\myfile.js:1: WARNING - accessing name boo in externs has no effect
foo;   boo;   goo;
       ^

May 16, 2016 8:19:42 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: c:\myfile.js:1: WARNING - accessing name goo in externs has no effect
foo;   boo;   goo;
              ^

May 16, 2016 8:19:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 3 warning(s)
May 16, 2016 8:19:42 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: c:\myfile.js:1: WARNING - accessing name foo in externs has no effect
foo;
^

May 16, 2016 8:19:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 8:19:42 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: c:\myfile.js:4: WARNING - accessing name a in externs has no effect
var foo=a + 'this is a really long line that will force the mapping to span multiple linesc + d + e;
        ^

May 16, 2016 8:19:42 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: c:\myfile.js:4: WARNING - accessing name c in externs has no effect
var foo=a + 'this is a really long line that will force the mapping to span multiple linesc + d + e;


May 16, 2016 8:19:42 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: c:\myfile.js:4: WARNING - accessing name d in externs has no effect
var foo=a + 'this is a really long line that will force the mapping to span multiple linesc + d + e;


May 16, 2016 8:19:42 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: c:\myfile.js:4: WARNING - accessing name e in externs has no effect
var foo=a + 'this is a really long line that will force the mapping to span multiple linesc + d + e;


May 16, 2016 8:19:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 4 warning(s)
May 16, 2016 8:19:42 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:5: WARNING - accessing name foo in externs has no effect
foo = foo + bar + foo;
^

May 16, 2016 8:19:42 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:5: WARNING - accessing name foo in externs has no effect
foo = foo + bar + foo;
      ^

May 16, 2016 8:19:42 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:5: WARNING - accessing name bar in externs has no effect
foo = foo + bar + foo;
            ^

May 16, 2016 8:19:42 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:5: WARNING - accessing name foo in externs has no effect
foo = foo + bar + foo;
                  ^

May 16, 2016 8:19:42 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:6: WARNING - accessing name foo in externs has no effect
return foo;
       ^

May 16, 2016 8:19:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 5 warning(s)
May 16, 2016 8:19:42 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - accessing name foo in externs has no effect
function f(foo, bar) { foo = foo + bar + 2; return foo; }
                       ^

May 16, 2016 8:19:42 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - accessing name foo in externs has no effect
function f(foo, bar) { foo = foo + bar + 2; return foo; }
                             ^

May 16, 2016 8:19:42 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - accessing name bar in externs has no effect
function f(foo, bar) { foo = foo + bar + 2; return foo; }
                                   ^

May 16, 2016 8:19:42 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - accessing name foo in externs has no effect
function f(foo, bar) { foo = foo + bar + 2; return foo; }
                                                   ^

May 16, 2016 8:19:42 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 4 warning(s)
May 16, 2016 8:19:43 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. missing ] after element list
var x = [1, 2
            ^

May 16, 2016 8:19:43 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 0 warning(s)
May 16, 2016 8:19:44 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name x in externs has no effect
var x = 3; function f() { return x + z; }
                                 ^

May 16, 2016 8:19:44 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name z in externs has no effect
var x = 3; function f() { return x + z; }
                                     ^

May 16, 2016 8:19:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s)
May 16, 2016 8:19:44 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name e in externs has no effect
function f() { try { } catch(e) { break; } }
                             ^

May 16, 2016 8:19:44 PM com.google.javascript.jscomp.LoggerErrorManager println
SEVERE: i0:1: ERROR - Parse error. unlabelled break must be inside loop or switch
function f() { try { } catch(e) { break; } }
                                  ^

May 16, 2016 8:19:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 1 error(s), 1 warning(s)
May 16, 2016 8:19:44 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - Bad type annotation. Unknown type n
/** @type {n} */ var n = window.name;
           ^

May 16, 2016 8:19:44 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 8:19:45 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: c:\myfile.js:4: WARNING - accessing name a in externs has no effect
var foo=a + 'this is a really long line that will force the mapping to span multiple linesc + d + e;
        ^

May 16, 2016 8:19:45 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: c:\myfile.js:4: WARNING - accessing name c in externs has no effect
var foo=a + 'this is a really long line that will force the mapping to span multiple linesc + d + e;


May 16, 2016 8:19:45 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: c:\myfile.js:4: WARNING - accessing name d in externs has no effect
var foo=a + 'this is a really long line that will force the mapping to span multiple linesc + d + e;


May 16, 2016 8:19:45 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: c:\myfile.js:4: WARNING - accessing name e in externs has no effect
var foo=a + 'this is a really long line that will force the mapping to span multiple linesc + d + e;


May 16, 2016 8:19:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 4 warning(s)
May 16, 2016 8:19:45 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - accessing name foo in externs has no effect
function f(foo, bar) { foo = foo + bar + 2; return foo; }
                       ^

May 16, 2016 8:19:45 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - accessing name foo in externs has no effect
function f(foo, bar) { foo = foo + bar + 2; return foo; }
                             ^

May 16, 2016 8:19:45 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - accessing name bar in externs has no effect
function f(foo, bar) { foo = foo + bar + 2; return foo; }
                                   ^

May 16, 2016 8:19:45 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - accessing name foo in externs has no effect
function f(foo, bar) { foo = foo + bar + 2; return foo; }
                                                   ^

May 16, 2016 8:19:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 4 warning(s)
May 16, 2016 8:19:45 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:5: WARNING - accessing name foo in externs has no effect
foo = foo + bar + foo;
^

May 16, 2016 8:19:45 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:5: WARNING - accessing name foo in externs has no effect
foo = foo + bar + foo;
      ^

May 16, 2016 8:19:45 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:5: WARNING - accessing name bar in externs has no effect
foo = foo + bar + foo;
            ^

May 16, 2016 8:19:45 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:5: WARNING - accessing name foo in externs has no effect
foo = foo + bar + foo;
                  ^

May 16, 2016 8:19:45 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:6: WARNING - accessing name foo in externs has no effect
return foo;
       ^

May 16, 2016 8:19:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 5 warning(s)
May 16, 2016 8:19:45 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: c:\myfile.js:1: WARNING - accessing name foo in externs has no effect
foo;
^

May 16, 2016 8:19:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 8:19:45 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: c:\myfile.js:1: WARNING - accessing name foo in externs has no effect
foo;   boo;   goo;
^

May 16, 2016 8:19:45 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: c:\myfile.js:1: WARNING - accessing name boo in externs has no effect
foo;   boo;   goo;
       ^

May 16, 2016 8:19:45 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: c:\myfile.js:1: WARNING - accessing name goo in externs has no effect
foo;   boo;   goo;
              ^

May 16, 2016 8:19:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 3 warning(s)
LOG:unknown:///unknown:1+13: Semicolon inserted
LOG:unknown:///unknown:1+13: Semicolon inserted
May 16, 2016 8:19:45 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name x in externs has no effect
var x; x = 1; START(); x = 1;END();x()
       ^

May 16, 2016 8:19:45 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name START in externs has no effect
var x; x = 1; START(); x = 1;END();x()
              ^

May 16, 2016 8:19:45 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name x in externs has no effect
var x; x = 1; START(); x = 1;END();x()
                       ^

May 16, 2016 8:19:45 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name END in externs has no effect
var x; x = 1; START(); x = 1;END();x()
                             ^

May 16, 2016 8:19:45 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name x in externs has no effect
var x; x = 1; START(); x = 1;END();x()
                                   ^

May 16, 2016 8:19:45 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 5 warning(s)
May 16, 2016 8:19:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name Foo in externs has no effect
/** @TagA */ var f = new Foo(); /** @TagB */ f.bar();
                         ^

May 16, 2016 8:19:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 8:19:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: bar;:1: WARNING - accessing name file2 in externs has no effect
file2
^

May 16, 2016 8:19:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: foo;:1: WARNING - accessing name file1 in externs has no effect
file1
^

May 16, 2016 8:19:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s)
May 16, 2016 8:19:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: bar;:1: WARNING - accessing name file1 in externs has no effect
file1
^

May 16, 2016 8:19:46 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: foo;:1: WARNING - accessing name file2 in externs has no effect
file2
^

May 16, 2016 8:19:46 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s)
May 16, 2016 8:19:47 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - name FOO is not undefined in the externs.
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('FOO.BAR'); FOO.BAR = 3;
                                                                                                                        ^

May 16, 2016 8:19:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 8:19:47 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:19:47 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:19:47 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: in1:1: WARNING - accessing name x in externs has no effect
function f(x) { return x; }
                       ^

May 16, 2016 8:19:47 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 3 warning(s)
May 16, 2016 8:19:48 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name Foo in externs has no effect
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @constructor */ Foo = function() {};var x = new Foo();
                                                                                                                                        ^

May 16, 2016 8:19:48 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name Foo in externs has no effect
/** @define {boolean} */ var COMPILED = false; var goog = {};goog.exportSymbol = function() {};goog.provide('Foo'); /** @constructor */ Foo = function() {};var x = new Foo();
                                                                                                                                                                        ^

May 16, 2016 8:19:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s)
May 16, 2016 8:19:48 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:19:48 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:19:48 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: in1:1: WARNING - accessing name goog in externs has no effect
/** @const */ var goog = goog || {};
                         ^

May 16, 2016 8:19:48 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 3 warning(s)
May 16, 2016 8:19:49 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name a in externs has no effect
a = 1; b = a; c = b
^

May 16, 2016 8:19:49 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name b in externs has no effect
a = 1; b = a; c = b
       ^

May 16, 2016 8:19:49 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name a in externs has no effect
a = 1; b = a; c = b
           ^

May 16, 2016 8:19:49 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name c in externs has no effect
a = 1; b = a; c = b
              ^

May 16, 2016 8:19:49 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name b in externs has no effect
a = 1; b = a; c = b
                  ^

May 16, 2016 8:19:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 5 warning(s)
May 16, 2016 8:19:49 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name f in externs has no effect
/** @deprecated */ function f() { } function g() { f(); }
                                                   ^

May 16, 2016 8:19:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 8:19:49 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name Foo in externs has no effect
/** @constructor */function Foo() {}/** @type {number} */ Foo.prototype.field;Foo.prototype.getField = function() { return this.field; };/** @constructor */function Bar() {}/** @type {string} */ Bar.prototype.field;Bar.prototype.getField = function() { return this.field; };new Foo().getField();new Bar().getField();
                                                                                                                                                                                                                                                                                      ^

May 16, 2016 8:19:49 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name Bar in externs has no effect
/** @constructor */function Foo() {}/** @type {number} */ Foo.prototype.field;Foo.prototype.getField = function() { return this.field; };/** @constructor */function Bar() {}/** @type {string} */ Bar.prototype.field;Bar.prototype.getField = function() { return this.field; };new Foo().getField();new Bar().getField();
                                                                                                                                                                                                                                                                                                           ^

May 16, 2016 8:19:49 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s)
May 16, 2016 8:19:50 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name x in externs has no effect
x = 3; var x = 5;
^

May 16, 2016 8:19:50 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 8:19:51 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:8: WARNING - accessing name Foo in externs has no effect
goog.exportSymbol('Foo', Foo);
                         ^

May 16, 2016 8:19:51 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 8:19:52 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:19:52 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:19:52 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: in1:3: WARNING - Bad type annotation. Unknown type Missing
 * @extends {Missing}
             ^

May 16, 2016 8:19:52 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: in1:8: WARNING - accessing name DomHelper in externs has no effect
function f() {   (new DomHelper()).method();
                      ^

May 16, 2016 8:19:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 4 warning(s)
May 16, 2016 8:19:52 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i1:1: WARNING - accessing name Foo in externs has no effect
new Foo();
    ^

May 16, 2016 8:19:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 8:19:52 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:19:52 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:19:52 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s)
May 16, 2016 8:19:54 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:3: WARNING - accessing name f in externs has no effect
goog.exportSymbol('foobar', f)
                            ^

May 16, 2016 8:19:54 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 8:19:55 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name url in externs has no effect
var CONST = {}; CONST.bar = null;function f(url) { CONST.bar = url; }
                                                               ^

May 16, 2016 8:19:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 8:19:55 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:3: WARNING - accessing name G_GEO_UNKNOWN_ADDRESS in externs has no effect
  if (G_GEO_UNKNOWN_ADDRESS == localVar) {
      ^

May 16, 2016 8:19:55 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:3: WARNING - accessing name localVar in externs has no effect
  if (G_GEO_UNKNOWN_ADDRESS == localVar) {
                               ^

May 16, 2016 8:19:55 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:4: WARNING - accessing name alert in externs has no effect
    alert("A"); }}
    ^

May 16, 2016 8:19:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 3 warning(s)
May 16, 2016 8:19:55 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name foo in externs has no effect
function foo() {} var x = 3; foo(x);
                             ^

May 16, 2016 8:19:55 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name x in externs has no effect
function foo() {} var x = 3; foo(x);
                                 ^

May 16, 2016 8:19:55 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s)
May 16, 2016 8:19:56 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:4: WARNING - accessing name alert in externs has no effect
alert(new ns.C().someProperty + new ns.C().someProperty);
^

May 16, 2016 8:19:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 8:19:56 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:19:56 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:19:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s)
May 16, 2016 8:19:56 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:19:56 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:19:56 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s)
May 16, 2016 8:19:57 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: WARNING - accessing name x in externs has no effect

May 16, 2016 8:19:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 8:19:57 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - invalid cast - must be a subtype or supertype
from: number
to  : string
function f() { var xyz = /** @type {string} */ (0); }
                                                ^

May 16, 2016 8:19:57 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 8:19:58 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name x in externs has no effect
function f() { var x = 3; 4; x = 5; return x; } f(); 
                             ^

May 16, 2016 8:19:58 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name x in externs has no effect
function f() { var x = 3; 4; x = 5; return x; } f(); 
                                           ^

May 16, 2016 8:19:58 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name f in externs has no effect
function f() { var x = 3; 4; x = 5; return x; } f(); 
                                                ^

May 16, 2016 8:19:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 3 warning(s)
May 16, 2016 8:19:58 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:19:58 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:19:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s)
May 16, 2016 8:19:58 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:19:58 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:19:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s)
May 16, 2016 8:19:58 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:19:58 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:19:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s)
May 16, 2016 8:19:58 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:19:58 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:19:58 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s)
May 16, 2016 8:19:59 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:19:59 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:19:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s)
May 16, 2016 8:19:59 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:19:59 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:19:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s)
May 16, 2016 8:19:59 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:19:59 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:19:59 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: in1:1: WARNING - accessing name goog in externs has no effect
/** @const */ var goog = goog || {};
                         ^

May 16, 2016 8:19:59 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 3 warning(s)
a.js:1: WARNING - accessing name module$b in externs has no effect
require('b');require('c')
^

a.js:1: WARNING - name goog is not undefined in the externs.
require('b');require('c')
^

a.js:1: WARNING - accessing name module$c in externs has no effect
require('b');require('c')
             ^

a.js:1: WARNING - name goog is not undefined in the externs.
require('b');require('c')
             ^

b.js:1: WARNING - accessing name module$d in externs has no effect
require('d')
^

b.js:1: WARNING - name goog is not undefined in the externs.
require('d')
^

c.js:1: WARNING - accessing name module$d in externs has no effect
require('d')
^

c.js:1: WARNING - name goog is not undefined in the externs.
require('d')
^

d.js:1: WARNING - name goog is not undefined in the externs.
1;
^

0 error(s), 9 warning(s)
May 16, 2016 8:20:00 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: input.js:1: WARNING - accessing name alert in externs has no effect
(function (undefined) { alert(undefined); })();
                        ^

May 16, 2016 8:20:00 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: input.js:1: WARNING - accessing name undefined in externs has no effect
(function (undefined) { alert(undefined); })();
                              ^

May 16, 2016 8:20:00 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s)
May 16, 2016 8:20:03 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i1:1: WARNING - accessing name f in externs has no effect
function g() { f(); }
               ^

May 16, 2016 8:20:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 8:20:03 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:20:03 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:20:03 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: in1:1: WARNING - accessing name x in externs has no effect
/** @type {number} */ var x = 5; x = 6;
                                 ^

May 16, 2016 8:20:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 3 warning(s)
May 16, 2016 8:20:03 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:3: WARNING - accessing name foo in externs has no effect
var x = 1; foo(); x = 2;
           ^

May 16, 2016 8:20:03 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:3: WARNING - accessing name x in externs has no effect
var x = 1; foo(); x = 2;
                  ^

May 16, 2016 8:20:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s)
May 16, 2016 8:20:03 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name HI in externs has no effect
/** @define {boolean} */ var HI = true; HI = false;
                                        ^

May 16, 2016 8:20:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 8:20:03 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - accessing name InternalName in externs has no effect
var goog = {};goog.exportSymbol = function(a, b) {}; goog.exportProperty = function(a, b, c) {}; var InternalName = function() {  return 6;};goog.exportSymbol('ExternalName', InternalName)
                                                                                                                                                                               ^

May 16, 2016 8:20:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 8:20:03 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - accessing name goog in externs has no effect
var goog = goog || {};
           ^

May 16, 2016 8:20:03 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:5: WARNING - accessing name ctor in externs has no effect
    return ctor.instance_ || (ctor.instance_ = new ctor());
                                                   ^

May 16, 2016 8:20:03 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - accessing name Foo in externs has no effect
goog.addSingletonGetter(Foo);Foo.prototype.bar = 1;function Bar() {}
                        ^

May 16, 2016 8:20:03 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:9: WARNING - accessing name Bar in externs has no effect
goog.addSingletonGetter(Bar);Bar.prototype.bar = 1;
                        ^

May 16, 2016 8:20:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 4 warning(s)
May 16, 2016 8:20:03 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:2: WARNING - accessing name E in externs has no effect
 @export */ var E = {A:8, B:9};goog.exportSymbol('E', E);
                                                      ^

May 16, 2016 8:20:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 8:20:03 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - name goog is not undefined in the externs.
goog.provide('foo.Bar.Type');
^

May 16, 2016 8:20:03 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - name goog is not undefined in the externs.
goog.provide('foo.Bar');
^

May 16, 2016 8:20:03 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:3: WARNING - name foo is not undefined in the externs.
/** @typedef {number} */ foo.Bar.Type;
                         ^

May 16, 2016 8:20:03 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:4: WARNING - name foo is not undefined in the externs.
foo.Bar = function() {};
^

May 16, 2016 8:20:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 4 warning(s)
May 16, 2016 8:20:03 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - name goog is not undefined in the externs.
goog.provide('foo.Bar.Type');
^

May 16, 2016 8:20:03 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:2: WARNING - name goog is not undefined in the externs.
goog.provide('foo.Bar');
^

May 16, 2016 8:20:03 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:3: WARNING - name foo is not undefined in the externs.
/** @typedef {number} */ foo.Bar.Type;
                         ^

May 16, 2016 8:20:03 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:4: WARNING - name foo is not undefined in the externs.
foo.Bar = function() {};
^

May 16, 2016 8:20:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 4 warning(s)
May 16, 2016 8:20:03 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:1: WARNING - accessing name a in externs has no effect
a;
^

May 16, 2016 8:20:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
WARNING:unknown:///unknown:1+2 - 3: Will not work in IE
java.lang.Exception
	at com.google.caja.reporting.EchoingMessageQueue$1.add(EchoingMessageQueue.java:52)
	at com.google.caja.reporting.EchoingMessageQueue$1.add(EchoingMessageQueue.java:40)
	at java.util.AbstractList.add(AbstractList.java:108)
	at com.google.caja.reporting.AbstractMessageQueue.addMessage(AbstractMessageQueue.java:25)
	at com.google.caja.parser.js.Parser.parseExpressionAtom(Parser.java:1138)
	at com.google.caja.parser.js.Parser.parseOp(Parser.java:792)
	at com.google.caja.parser.js.Parser.parseExpressionInt(Parser.java:727)
	at com.google.caja.parser.js.Parser.parseExpressionStmt(Parser.java:1281)
	at com.google.caja.parser.js.Parser.parseStatementWithoutLabel(Parser.java:706)
	at com.google.caja.parser.js.Parser.parseStatement(Parser.java:306)
	at com.google.caja.parser.js.Parser.parseTerminatedStatement(Parser.java:1312)
	at com.google.caja.parser.js.Parser.parseProgramOrFunctionBody(Parser.java:325)
	at com.google.caja.parser.js.Parser.parseProgram(Parser.java:314)
	at com.google.caja.parser.js.Parser.parse(Parser.java:272)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:42)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:31)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:26)
	at com.google.caja.parser.js.JsonMLParser.parse(JsonMLParser.java:22)
	at com.google.javascript.jscomp.jsonml.JsonMLConversionTest.testConversion(JsonMLConversionTest.java:79)
	at com.google.javascript.jscomp.jsonml.JsonMLConversionTest.testArray(JsonMLConversionTest.java:91)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestResultRunner.call(JUnitSingleTestResultRunner.java:36)
	at xxl.java.junit.JUnitSingleTestResultRunner.call(JUnitSingleTestResultRunner.java:11)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
May 16, 2016 8:20:03 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:20:03 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:20:03 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: in1:1: WARNING - accessing name random in externs has no effect
function random() { return 1; }/** @constructor */ function Foo() {}/** @constructor */ function Bar() {}var x = random() ? new Foo() : new Bar();
                                                                                                                 ^

May 16, 2016 8:20:03 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: in1:1: WARNING - accessing name Foo in externs has no effect
function random() { return 1; }/** @constructor */ function Foo() {}/** @constructor */ function Bar() {}var x = random() ? new Foo() : new Bar();
                                                                                                                                ^

May 16, 2016 8:20:03 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: in1:1: WARNING - accessing name Bar in externs has no effect
function random() { return 1; }/** @constructor */ function Foo() {}/** @constructor */ function Bar() {}var x = random() ? new Foo() : new Bar();
                                                                                                                                            ^

May 16, 2016 8:20:03 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 5 warning(s)
May 16, 2016 8:20:04 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i1:1: WARNING - accessing name Foo in externs has no effect
new Foo();
    ^

May 16, 2016 8:20:04 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 8:20:05 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:20:05 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:20:05 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: in1:6: WARNING - accessing name B in externs has no effect
goog.inherits(B, A);/** method */ B.prototype.method = function() {  B.superClass_.method();};
              ^

May 16, 2016 8:20:05 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: in1:6: WARNING - accessing name A in externs has no effect
goog.inherits(B, A);/** method */ B.prototype.method = function() {  B.superClass_.method();};
                 ^

May 16, 2016 8:20:05 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 4 warning(s)
May 16, 2016 8:20:07 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:5: WARNING - accessing name internalName in externs has no effect
internalName = function() {};goog.exportSymbol('externalName', internalName)
^

May 16, 2016 8:20:07 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: testcode:5: WARNING - accessing name internalName in externs has no effect
internalName = function() {};goog.exportSymbol('externalName', internalName)
                                                               ^

May 16, 2016 8:20:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 2 warning(s)
May 16, 2016 8:20:07 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name x in externs has no effect
if (x < 1 || x > 1 || 1 < x || 1 > x) { alert(x) }
    ^

May 16, 2016 8:20:07 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name x in externs has no effect
if (x < 1 || x > 1 || 1 < x || 1 > x) { alert(x) }
             ^

May 16, 2016 8:20:07 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name x in externs has no effect
if (x < 1 || x > 1 || 1 < x || 1 > x) { alert(x) }
                          ^

May 16, 2016 8:20:07 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name x in externs has no effect
if (x < 1 || x > 1 || 1 < x || 1 > x) { alert(x) }
                                   ^

May 16, 2016 8:20:07 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name alert in externs has no effect
if (x < 1 || x > 1 || 1 < x || 1 > x) { alert(x) }
                                        ^

May 16, 2016 8:20:07 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name x in externs has no effect
if (x < 1 || x > 1 || 1 < x || 1 > x) { alert(x) }
                                              ^

May 16, 2016 8:20:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 6 warning(s)
May 16, 2016 8:20:07 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name g in externs has no effect
(function f(x) {})();var g = function() {}; g();
                                            ^

May 16, 2016 8:20:07 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 8:20:08 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:3: WARNING - attempted re-definition of type Function
found   : function (new:Function, *): ?
expected: function (new:Function, ...[*]): ?
 * @param {*} var_args */ function Function(var_args) {}/** @type {!Function} */ Function.prototype.apply;/** @type {!Function} */ Function.prototype.bind;/** @type {!Function} */ Function.prototype.call;/** @constructor 
                          ^

May 16, 2016 8:20:08 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: externs1:8: WARNING - attempted re-definition of type Array
found   : function (new:Array, *): Array
expected: function (new:Array, ...[*]): Array
 @return {!Array} */function Array(var_args) {}
                    ^

May 16, 2016 8:20:08 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: in1:3: WARNING - accessing name Foo in externs has no effect
/** @constructor */ var FooAlias = Foo;
                                   ^

May 16, 2016 8:20:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 3 warning(s)
May 16, 2016 8:20:08 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name $load in externs has no effect
var impl_0;$load($init());function $load(){  window['f'] = impl_0;}function $init() {  impl_0 = {};}
           ^

May 16, 2016 8:20:08 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name $init in externs has no effect
var impl_0;$load($init());function $load(){  window['f'] = impl_0;}function $init() {  impl_0 = {};}
                 ^

May 16, 2016 8:20:08 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name window in externs has no effect
var impl_0;$load($init());function $load(){  window['f'] = impl_0;}function $init() {  impl_0 = {};}
                                             ^

May 16, 2016 8:20:08 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name impl_0 in externs has no effect
var impl_0;$load($init());function $load(){  window['f'] = impl_0;}function $init() {  impl_0 = {};}
                                                           ^

May 16, 2016 8:20:08 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name impl_0 in externs has no effect
var impl_0;$load($init());function $load(){  window['f'] = impl_0;}function $init() {  impl_0 = {};}
                                                                                       ^

May 16, 2016 8:20:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 5 warning(s)
May 16, 2016 8:20:08 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:1: WARNING - accessing name a in externs has no effect
var a  = 2; delete a;
                   ^

May 16, 2016 8:20:08 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 1 warning(s)
May 16, 2016 8:20:09 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - name goog is not undefined in the externs.
  goog.inherits(Bar, Foo);
  ^

May 16, 2016 8:20:09 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - accessing name Bar in externs has no effect
  goog.inherits(Bar, Foo);
                ^

May 16, 2016 8:20:09 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:8: WARNING - accessing name Foo in externs has no effect
  goog.inherits(Bar, Foo);
                     ^

May 16, 2016 8:20:09 PM com.google.javascript.jscomp.LoggerErrorManager println
WARNING: i0:9: WARNING - accessing name Bar in externs has no effect
  var o = new Bar();
              ^

May 16, 2016 8:20:09 PM com.google.javascript.jscomp.LoggerErrorManager printSummary
WARNING: 0 error(s), 4 warning(s)
## OAR [2016-05-16 22:21:52] Job 991114 KILLED ##
