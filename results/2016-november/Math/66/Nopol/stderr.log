Running ant (compile)...................................................... OK
Running ant (compile.tests)................................................ OK
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8
Please use CMSClassUnloadingEnabled in place of CMSPermGenSweepingEnabled in the future
java.util.concurrent.ExecutionException: java.lang.OutOfMemoryError: Java heap space
	at java.util.concurrent.FutureTask.report(FutureTask.java:122)
	at java.util.concurrent.FutureTask.get(FutureTask.java:202)
	at fr.inria.lille.repair.Main.main(Main.java:98)
Caused by: java.lang.OutOfMemoryError: Java heap space
	at java.util.Arrays.copyOfRange(Arrays.java:2694)
	at java.lang.String.<init>(String.java:203)
	at java.util.zip.ZipCoder.toString(ZipCoder.java:59)
	at java.util.zip.ZipFile.getZipEntry(ZipFile.java:531)
	at java.util.zip.ZipFile.access$900(ZipFile.java:56)
	at java.util.zip.ZipFile$1.nextElement(ZipFile.java:513)
	at java.util.zip.ZipFile$1.nextElement(ZipFile.java:483)
	at org.eclipse.jdt.internal.compiler.batch.ClasspathJar.isPackage(ClasspathJar.java:179)
	at org.eclipse.jdt.internal.compiler.batch.ClasspathJar.findClass(ClasspathJar.java:101)
	at org.eclipse.jdt.internal.compiler.batch.FileSystem.internalFindClass(FileSystem.java:295)
	at org.eclipse.jdt.internal.compiler.batch.FileSystem.findClass(FileSystem.java:266)
	at org.eclipse.jdt.internal.compiler.batch.FileSystem.findType(FileSystem.java:387)
	at org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createPackage(LookupEnvironment.java:790)
	at org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope.buildTypeBindings(CompilationUnitScope.java:110)
	at org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.buildTypeBindings(LookupEnvironment.java:211)
	at org.eclipse.jdt.internal.compiler.Compiler.internalBeginToCompile(Compiler.java:820)
	at org.eclipse.jdt.internal.compiler.Compiler.beginToCompile(Compiler.java:385)
	at spoon.support.compiler.jdt.TreeBuilderCompiler.buildUnits(TreeBuilderCompiler.java:48)
	at spoon.support.compiler.jdt.JDTBatchCompiler.getUnits(JDTBatchCompiler.java:120)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.buildUnits(JDTBasedSpoonCompiler.java:410)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.buildUnitsAndModel(JDTBasedSpoonCompiler.java:372)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.buildSources(JDTBasedSpoonCompiler.java:348)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.build(JDTBasedSpoonCompiler.java:119)
	at spoon.support.compiler.jdt.JDTBasedSpoonCompiler.build(JDTBasedSpoonCompiler.java:102)
	at fr.inria.lille.commons.spoon.util.SpoonModelLibrary.modelFor(SpoonModelLibrary.java:56)
	at fr.inria.lille.commons.spoon.SpoonedFile.<init>(SpoonedFile.java:62)
	at fr.inria.lille.commons.spoon.SpoonedClass.<init>(SpoonedClass.java:14)
	at fr.inria.lille.commons.spoon.SpoonedProject.forked(SpoonedProject.java:47)
	at fr.inria.lille.repair.nopol.NoPol.runOnStatement(NoPol.java:175)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:166)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:133)
	at fr.inria.lille.repair.Main$1.call(Main.java:91)

Usage: java -jar nopol.jar
                          [(-m|--mode) <repair|ranking>] [(-e|--type) <pre_then_cond|loop|condition|precondition|arithmetic>] [(-o|--oracle) <angelic|symbolic>] [(-y|--synthesis) <smt|dynamoth>] [(-l|--solver) <z3|cvc4>] [(-p|--solver-path) <solverPath>] (-s|--source) source1:source2:...:sourceN  (-c|--classpath) <classpath> [(-t|--test) test1:test2:...:testN ] [--complianceLevel <complianceLevel>] [--maxTime <maxTime>] [--maxTimeType <maxTimeType>] [(-z|--flocal) < ochiai|dumb|gzoltar>] [--output <outputFolder>] [--json[:<outputJson>]]

  [(-m|--mode) <repair|ranking>]
        Define the mode of execution. (default: repair)

  [(-e|--type) <pre_then_cond|loop|condition|precondition|arithmetic>]
        The type of statement to analyze (only used with repair mode). (default:
        pre_then_cond)

  [(-o|--oracle) <angelic|symbolic>]
        Define the oracle (only used with repair mode). (default: angelic)

  [(-y|--synthesis) <smt|dynamoth>]
        Define the patch synthesis. (default: smt)

  [(-l|--solver) <z3|cvc4>]
        Define the solver (only used with smt synthesis). (default: z3)

  [(-p|--solver-path) <solverPath>]
        Define the solver binary path (only used with smt synthesis).

  (-s|--source) source1:source2:...:sourceN 
        Define the path to the source code of the project.

  (-c|--classpath) <classpath>
        Define the classpath of the project.

  [(-t|--test) test1:test2:...:testN ]
        Define the tests of the project.

  [--complianceLevel <complianceLevel>]
        The compliance level of the project. (default: 7)

  [--maxTime <maxTime>]
        The maximum time execution in minute for the whole execution of
        Nopol.(default: 10)

  [--maxTimeType <maxTimeType>]
        The maximum time execution in minute for one type of patch. (default: 5)

  [(-z|--flocal) < ochiai|dumb|gzoltar>]
        Define the fault localizer to be used. (default: ochiai)

  [--output <outputFolder>]
        Define the location where the patches will be saved. (default: .)

  [--json[:<outputJson>]]
        Output a json file in the current working directory.

Command exited with non-zero status 255
1400.10user 6.19system 21:22.66elapsed 109%CPU (0avgtext+0avgdata 4477868maxresident)k
32inputs+7288outputs (0major+1470034minor)pagefaults 0swaps
