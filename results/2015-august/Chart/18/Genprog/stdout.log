export PATH="/home/tdurieux/defects4j/framework/bin:$PATH";export JAVA_TOOL_OPTIONS=-Dfile.encoding=UTF8;export PATH="/usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/:$PATH";cp -r /home/tdurieux/projects/chart/chart_18 /tmp/chart_18_Genprog;cd /tmp/chart_18_Genprog;defects4j compile;mkdir lib/;cp -r /home/tdurieux/defects4j/framework/projects/lib/* lib/;cp -r /home/tdurieux/defects4j/framework/projects/Chart/lib/* lib/;find . -type f -name "package-info.java" -delete;
/home/tdurieux/defects4j-repair/src/python/core/../../../results/2015-august/Chart/18/Genprog/result
cd /tmp/chart_18_Genprog;export JAVA_TOOL_OPTIONS=-Dfile.encoding=UTF8;TZ="America/New_York"; export TZexport PATH="/usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/:$PATH";time java  -cp /home/tdurieux/defects4j-repair/src/python/core/../../..//libs/astor.jar fr.inria.main.evolution.MainjGenProg -mode statement -location . -dependencies lib/ -failing org.jfree.data.category.junit.DefaultCategoryDatasetTests:org.jfree.data.junit.DefaultKeyedValues2DTests:org.jfree.data.junit.DefaultKeyedValuesTests:org.jfree.data.junit.DefaultKeyedValuesTests: -package org.jfree -jvm4testexecution /usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/ -javacompliancelevel 4 -maxgen 1000000 -seed 10 -maxtime 60  -scope local  -stopfirst true -flthreshold 0.1 -population 1 -srcjavafolder source/ -srctestfolder tests/ -binjavafolder build/ -bintestfolder build-tests/;echo "

Node: `hostname`
";echo "
Date: `date`
";rm -rf /tmp/chart_18_Genprog;

2015-08-25 00:33:56,172 INFO main - End Repair Loops: NOT Found solution
2015-08-25 00:33:56,172 INFO main - 
Number solutions:0
2015-08-25 00:33:56,172 INFO main - 
All variants:
2015-08-25 00:33:56,172 INFO main - f 6.0, [Variant id: 49611, #gens: 34, #ops: 0, parent:-]
2015-08-25 00:33:56,172 INFO main - --Space: LOCAL
org.jfree.data.DefaultKeyedValues2D=137|,org.jfree.data.DefaultKeyedValues=109|,org.jfree.data.category.DefaultCategoryDataset=64|,
2015-08-25 00:33:56,172 INFO main - 
----stats: 
2015-08-25 00:33:56,172 INFO main - 
spaces navigation: [85]: {(CtInvocationImpl| size: 109| notcompiles| LOCAL| INSERT_AFTER) =527, (CtAssignmentImpl| size: 137| alreadyanalyzed| LOCAL| INSERT_AFTER) =11197, (CtLocalVariableImpl| size: 109| notcompiles| LOCAL| INSERT_AFTER) =190, (CtLocalVariableImpl| size: 109| alreadyanalyzed| LOCAL| INSERT_BEFORE) =228898, (CtInvocationImpl| size: 64| notcompiles| LOCAL| INSERT_AFTER) =62, (CtIfImpl| size: 109| notcompiles| LOCAL| INSERT_BEFORE) =216, (CtAssignmentImpl| size: 137| compiles| LOCAL| INSERT_BEFORE) =69, (CtIfImpl| size: 109| notcompiles| LOCAL| INSERT_AFTER) =216, (CtInvocationImpl| size: 137| compiles| LOCAL| INSERT_BEFORE) =167, (CtLocalVariableImpl| size: 137| alreadyanalyzed| LOCAL| INSERT_AFTER) =247855, (CtForImpl| size: 6| notcompiles| LOCAL| REPLACE) =3, (CtInvocationImpl| size: 109| compiles| LOCAL| INSERT_BEFORE) =515, (CtWhileImpl| size: 137| alreadyanalyzed| LOCAL| INSERT_AFTER) =126195, (CtLocalVariableImpl| size: 21| alreadyanalyzed| LOCAL| REPLACE) =46837, (CtReturnImpl| size: 109| compiles| LOCAL| INSERT_BEFORE) =84, (CtInvocationImpl| size: 109| compiles| LOCAL| INSERT_AFTER) =515, (CtInvocationImpl| size: 24| notcompiles| LOCAL| REPLACE) =35, (CtWhileImpl| size: 1| alreadyanalyzed| LOCAL| REPLACE) =913, (CtReturnImpl| size: 109| notcompiles| LOCAL| INSERT_AFTER) =90, (CtInvocationImpl| size: 109| alreadyanalyzed| LOCAL| INSERT_BEFORE) =755752, (CtInvocationImpl| size: 32| compiles| LOCAL| REPLACE) =105, (CtAssignmentImpl| size: 137| notcompiles| LOCAL| INSERT_AFTER) =47, (CtIfImpl| size: 109| alreadyanalyzed| LOCAL| INSERT_AFTER) =366611, (CtInvocationImpl| size: 137| alreadyanalyzed| LOCAL| INSERT_AFTER) =378312, (CtReturnImpl| size: 16| alreadyanalyzed| LOCAL| REPLACE) =7746, (CtAssignmentImpl| size: 19| alreadyanalyzed| LOCAL| REPLACE) =2593, (CtInvocationImpl| size: 109| notcompiles| LOCAL| INSERT_BEFORE) =527, (CtInvocationImpl| size: 137| alreadyanalyzed| LOCAL| INSERT_BEFORE) =374285, (CtForImpl| size: 109| notcompiles| LOCAL| INSERT_AFTER) =50, (CtForImpl| size: 109| compiles| LOCAL| INSERT_AFTER) =37, (CtForImpl| size: 109| compiles| LOCAL| INSERT_BEFORE) =37, (CtForImpl| size: 109| alreadyanalyzed| LOCAL| INSERT_AFTER) =50765, (CtForImpl| size: 6| alreadyanalyzed| LOCAL| REPLACE) =3189, (CtWhileImpl| size: 137| alreadyanalyzed| LOCAL| INSERT_BEFORE) =121485, (CtReturnImpl| size: 16| compiles| LOCAL| REPLACE) =12, (CtLocalVariableImpl| size: 137| compiles| LOCAL| INSERT_AFTER) =107, (CtInvocationImpl| size: 64| alreadyanalyzed| LOCAL| INSERT_AFTER) =89084, (CtIfImpl| size: 18| notcompiles| LOCAL| REPLACE) =68, (CtAssignmentImpl| size: 19| compiles| LOCAL| REPLACE) =9, (CtInvocationImpl| size: 20| notcompiles| LOCAL| REPLACE) =18, (CtReturnImpl| size: 109| alreadyanalyzed| LOCAL| INSERT_AFTER) =45015, (CtLocalVariableImpl| size: 137| alreadyanalyzed| LOCAL| INSERT_BEFORE) =247009, (CtInvocationImpl| size: 64| alreadyanalyzed| LOCAL| INSERT_BEFORE) =91699, (CtLocalVariableImpl| size: 109| compiles| LOCAL| INSERT_AFTER) =158, (CtLocalVariableImpl| size: 137| notcompiles| LOCAL| INSERT_BEFORE) =124, (CtReturnImpl| size: 109| notcompiles| LOCAL| INSERT_BEFORE) =90, (CtInvocationImpl| size: 32| alreadyanalyzed| LOCAL| REPLACE) =236175, (CtReturnImpl| size: 109| alreadyanalyzed| LOCAL| INSERT_BEFORE) =45621, (CtInvocationImpl| size: 64| notcompiles| LOCAL| INSERT_BEFORE) =62, (CtLocalVariableImpl| size: 109| alreadyanalyzed| LOCAL| INSERT_AFTER) =235730, (CtLocalVariableImpl| size: 25| alreadyanalyzed| LOCAL| REPLACE) =46205, (CtLocalVariableImpl| size: 21| compiles| LOCAL| REPLACE) =64, (CtInvocationImpl| size: 137| notcompiles| LOCAL| INSERT_AFTER) =181, (CtWhileImpl| size: 137| notcompiles| LOCAL| INSERT_BEFORE) =61, (CtIfImpl| size: 109| compiles| LOCAL| INSERT_BEFORE) =219, (CtInvocationImpl| size: 109| alreadyanalyzed| LOCAL| INSERT_AFTER) =749407, (CtWhileImpl| size: 137| notcompiles| LOCAL| INSERT_AFTER) =61, (CtForImpl| size: 109| alreadyanalyzed| LOCAL| INSERT_BEFORE) =56033, (CtIfImpl| size: 18| compiles| LOCAL| REPLACE) =7, (CtInvocationImpl| size: 137| compiles| LOCAL| INSERT_AFTER) =167, (CtInvocationImpl| size: 32| notcompiles| LOCAL| REPLACE) =205, (CtInvocationImpl| size: 137| notcompiles| LOCAL| INSERT_BEFORE) =181, (CtInvocationImpl| size: 64| compiles| LOCAL| INSERT_BEFORE) =40, (CtReturnImpl| size: 109| compiles| LOCAL| INSERT_AFTER) =84, (CtWhileImpl| size: 137| compiles| LOCAL| INSERT_AFTER) =55, (CtLocalVariableImpl| size: 109| notcompiles| LOCAL| INSERT_BEFORE) =190, (CtReturnImpl| size: 16| notcompiles| LOCAL| REPLACE) =8, (CtLocalVariableImpl| size: 137| compiles| LOCAL| INSERT_BEFORE) =107, (CtIfImpl| size: 109| alreadyanalyzed| LOCAL| INSERT_BEFORE) =371234, (CtIfImpl| size: 109| compiles| LOCAL| INSERT_AFTER) =219, (CtInvocationImpl| size: 20| compiles| LOCAL| REPLACE) =6, (CtWhileImpl| size: 137| compiles| LOCAL| INSERT_BEFORE) =55, (CtAssignmentImpl| size: 137| notcompiles| LOCAL| INSERT_BEFORE) =47, (CtForImpl| size: 109| notcompiles| LOCAL| INSERT_BEFORE) =50, (CtIfImpl| size: 18| alreadyanalyzed| LOCAL| REPLACE) =61367, (CtInvocationImpl| size: 24| alreadyanalyzed| LOCAL| REPLACE) =69731, (CtLocalVariableImpl| size: 109| compiles| LOCAL| INSERT_BEFORE) =158, (CtAssignmentImpl| size: 137| alreadyanalyzed| LOCAL| INSERT_BEFORE) =12910, (CtAssignmentImpl| size: 19| notcompiles| LOCAL| REPLACE) =7, (CtAssignmentImpl| size: 137| compiles| LOCAL| INSERT_AFTER) =69, (CtLocalVariableImpl| size: 137| notcompiles| LOCAL| INSERT_AFTER) =124, (CtLocalVariableImpl| size: 25| compiles| LOCAL| REPLACE) =41, (CtInvocationImpl| size: 24| compiles| LOCAL| REPLACE) =26, (CtInvocationImpl| size: 64| compiles| LOCAL| INSERT_AFTER) =40, (CtInvocationImpl| size: 20| alreadyanalyzed| LOCAL| REPLACE) =28083}
#gen: 24805
#patches: 0
#RightCompilation: 26
#WrongCompilation: 24779
#FailingTestCaseExecution: 27
#RegressionTestExecution: 0
#TestcasesExecutedval1: 1647
#TestcasesExecutedval2: 0
#FailingTestCase: 61
#RegressionTestCases: 0
#OfAppliedOp: 24805
#NotAppliedOp: 0
#InmutatedGen: 61622
#unfinishValidation: 0
#ing {CtLocalVariableImpl=16717, CtForImpl=2083, CtAssignmentImpl=616, CtReturnImpl=1972, CtInvocationImpl=47181, CtIfImpl=14072, CtWhileImpl=3786}
#untilcompile {1=617, 2=339, 3=231, 4=164, 5=125, 6=105, 7=54, 8=49, 9=37, 10=33, 11=26, 12=20, 13=20, 14=23, 15=8, 17=17, 16=51, 19=39, 18=237, 21=202, 20=131, 23=10, 22=20, 25=159, 24=211, 27=27, 26=24, 29=16, 28=20, 31=9, 30=13, 34=31, 35=24, 32=500, 33=43, 38=29, 39=24, 36=22, 37=13, 42=26, 43=22, 40=11, 41=15, 46=18, 47=1, 44=10, 45=31, 51=10, 50=50, 49=10, 2216=1, 48=13, 55=2, 54=9, 53=34, 52=26, 59=5, 58=6, 57=30, 56=50, 63=5, 62=3, 61=2, 60=4, 68=11, 69=7, 70=6, 71=8, 64=228, 65=11, 66=19, 67=7, 76=5, 77=11, 78=11, 79=2, 72=2, 73=5, 74=10, 75=7, 85=11, 84=13, 87=2, 86=4, 81=5, 80=5, 83=2, 82=21, 93=6, 92=4, 95=1, 94=4, 89=19, 88=14, 91=4, 102=4, 103=1, 100=2, 101=1, 98=2, 99=4, 96=42, 97=2, 110=65, 111=19, 109=1807, 106=1, 104=1, 2287=1, 119=4, 118=7, 2285=1, 117=9, 116=15, 115=39, 114=16, 113=22, 112=15, 127=150, 126=4, 125=17, 124=2, 123=4, 122=2, 121=5, 120=8, 137=744, 136=2, 139=16, 138=23, 141=321, 140=7, 143=27, 142=20, 2073=1, 129=61, 128=21, 131=13, 130=86, 133=139, 132=3, 135=7, 134=83, 152=17, 153=17, 154=21, 155=71, 156=8, 157=34, 158=52, 159=36, 144=8, 145=15, 146=11, 147=16, 148=14, 149=6, 150=8, 151=19, 171=5, 170=10, 169=139, 168=4, 175=4, 174=8, 173=125, 172=3, 163=5, 162=56, 161=62, 160=3, 2104=1, 167=6, 166=31, 165=47, 164=2, 186=15, 187=28, 184=4, 185=6, 190=16, 191=24, 188=6, 189=14, 178=8, 179=9, 176=11, 177=10, 182=10, 183=14, 180=13, 181=5, 205=45, 204=6, 207=9, 206=5, 2129=1, 201=63, 200=4, 203=5, 202=3, 197=25, 196=3, 199=1, 198=19, 193=22, 192=4, 195=4, 2138=1, 194=21, 220=6, 221=11, 222=12, 223=14, 2112=1, 216=3, 217=6, 218=541, 219=30, 212=5, 213=4, 2126=1, 214=2, 215=4, 208=4, 209=3, 210=9, 211=4, 239=51, 238=31, 237=15, 236=52, 235=1, 234=6, 233=15, 232=1, 231=2, 230=6, 229=6, 228=3, 227=4, 226=6, 225=11, 224=14, 254=14, 255=5, 252=16, 253=5, 250=163, 251=9, 248=12, 249=6, 246=509, 247=23, 244=2, 245=3, 242=67, 243=47, 240=8, 241=3, 275=24, 274=103, 273=4, 272=5, 279=10, 278=125, 277=4, 276=5, 283=9, 282=79, 281=2, 280=7, 287=8, 286=12, 285=9, 284=7, 258=9, 259=10, 256=12, 257=13, 262=17, 263=7, 260=16, 261=9, 266=43, 2451=1, 267=56, 264=67, 265=6, 270=57, 271=53, 268=30, 269=9, 304=1, 307=20, 306=43, 309=2, 308=7, 311=7, 310=77, 313=3, 312=5, 315=7, 314=27, 317=10, 316=9, 319=3, 318=7, 288=10, 289=14, 290=11, 291=21, 292=13, 293=8, 294=8, 295=16, 296=28, 297=5, 298=20, 299=32, 300=20, 301=1, 302=21, 303=29, 343=2, 342=18, 341=5, 340=6, 339=8, 338=30, 337=3, 336=6, 351=32, 350=1, 349=7, 348=26, 347=11, 346=16, 345=23, 344=3, 326=9, 327=198, 324=6, 325=8, 322=4, 323=3, 320=8, 321=8, 334=13, 335=9, 332=6, 333=7, 330=11, 331=14, 328=38, 329=4, 373=47, 372=8, 375=27, 374=13, 369=3, 368=7, 371=13, 370=10, 381=9, 380=35, 383=109, 382=1, 377=14, 376=42, 379=44, 378=6, 356=15, 357=6, 358=5, 359=55, 352=22, 353=5, 354=3, 355=270, 364=3, 365=5, 366=9, 367=7, 360=9, 361=7, 362=6, 363=9, 410=3, 411=32, 408=12, 409=11, 414=3, 415=46, 412=21, 413=4, 402=7, 403=13, 400=6, 401=20, 406=6, 407=17, 404=8, 405=12, 395=5, 394=15, 393=10, 392=2, 399=8, 398=9, 397=7, 396=9, 387=91, 386=6, 2329=1, 385=5, 384=18, 391=35, 390=3, 389=5, 2332=1, 388=14, 440=17, 441=6, 442=2, 443=18, 444=8, 445=4, 446=2, 447=31, 432=11, 433=10, 434=2, 435=12, 436=51, 437=20, 438=3, 439=11, 425=14, 424=8, 427=6, 426=6, 429=10, 428=6, 431=6, 430=5, 417=4, 416=8, 419=59, 418=5, 2365=1, 421=4, 2364=1, 420=13, 423=15, 422=6, 478=9, 479=11, 476=9, 477=3, 474=2, 475=8, 472=8, 473=2, 470=4, 471=10, 468=26, 469=13, 466=4, 467=3, 464=103, 465=12, 463=2, 462=6, 461=16, 460=17, 459=2, 458=6, 457=11, 456=7, 455=5, 454=19, 453=3, 452=4, 451=22, 450=2, 448=7, 508=8, 509=5, 510=14, 511=6, 504=5, 505=3, 506=7, 507=7, 500=21, 501=8, 502=10, 503=14, 496=47, 497=7, 498=5, 499=6, 493=12, 492=65, 495=2, 494=1, 489=18, 488=26, 491=3, 490=5, 485=15, 484=7, 487=3, 2430=1, 486=8, 481=8, 480=5, 483=11, 482=23, 550=5, 551=1, 548=11, 549=11, 546=13, 547=6, 544=4, 545=25, 558=3, 559=3, 556=23, 557=4, 554=4, 555=2, 552=15, 553=11, 567=4, 566=10, 565=5, 564=7, 563=4, 562=5, 561=9, 560=18, 575=4, 574=13, 573=34, 571=3, 570=8, 569=12, 568=1, 516=15, 517=14, 518=5, 519=2, 512=13, 513=20, 514=13, 515=6, 524=31, 525=7, 526=3, 527=1, 520=27, 521=13, 522=4, 523=2, 533=7, 532=9, 535=5, 534=11, 529=14, 528=40, 531=5, 530=5, 541=16, 540=2, 543=3, 542=14, 537=4, 536=2, 539=2, 538=11, 610=3, 611=4, 608=3, 609=18, 614=1, 615=4, 612=7, 613=1, 618=4, 619=4, 616=9, 617=5, 622=17, 623=3, 620=8, 621=6, 627=8, 626=13, 625=14, 624=7, 631=3, 630=7, 629=14, 628=2, 635=1, 634=10, 633=18, 632=3, 639=5, 638=6, 637=19, 636=1, 576=4, 577=9, 578=8, 579=3, 580=9, 581=5, 582=1, 583=4, 584=15, 585=5, 586=4, 587=3, 588=7, 589=6, 591=11, 593=8, 592=6, 595=6, 594=11, 597=14, 599=8, 598=15, 601=47, 603=4, 602=10, 605=23, 607=6, 606=6, 686=10, 685=1, 684=4, 683=9, 682=20, 681=3, 680=4, 679=7, 678=9, 677=1, 676=3, 675=4, 674=5, 673=9, 672=4, 702=2, 703=1, 700=7, 701=10, 698=2, 699=5, 696=1, 697=6, 694=3, 695=1, 692=1, 693=8, 690=3, 691=6, 688=1, 689=4, 653=8, 652=4, 655=6, 654=9, 649=4, 648=1, 651=5, 650=6, 645=4, 644=6, 647=9, 646=2, 641=11, 640=10, 643=4, 642=4, 668=2, 669=13, 670=4, 671=5, 664=3, 665=17, 666=6, 667=3, 661=19, 662=6, 663=4, 2568=1, 656=8, 657=5, 658=3, 659=4, 747=1, 746=8, 745=3, 744=3, 751=2, 750=8, 749=3, 748=2, 739=2, 738=16, 737=1, 736=1, 743=4, 742=8, 741=1, 740=3, 762=5, 763=3, 760=4, 766=5, 767=5, 764=5, 765=4, 754=2, 755=2, 752=4, 758=4, 759=5, 756=6, 757=6, 713=7, 712=2, 715=2, 714=8, 717=2, 716=2, 719=2, 718=11, 705=2, 704=3, 707=2, 706=11, 709=2, 708=3, 711=6, 710=19, 728=6, 729=8, 730=3, 731=5, 732=5, 733=3, 734=11, 735=5, 720=2, 721=8, 722=5, 723=2, 724=4, 725=4, 726=2, 727=3, 821=2, 820=5, 823=9, 822=4, 816=4, 819=10, 818=2, 829=1, 828=4, 831=1, 830=4, 825=1, 824=10, 827=1, 826=4, 804=1, 805=3, 806=4, 807=4, 800=2, 801=1, 802=7, 803=1, 812=5, 813=3, 815=6, 808=3, 809=5, 810=2, 811=2, 791=9, 790=2, 789=1, 788=12, 787=3, 786=4, 785=4, 784=6, 799=4, 798=8, 797=1, 796=2, 795=4, 794=4, 793=2, 792=11, 774=15, 775=1, 772=1, 770=9, 771=6, 768=3, 769=1, 782=3, 783=3, 781=1, 778=5, 779=4, 776=2, 777=1, 881=2, 880=3, 883=2, 882=1, 884=2, 887=1, 886=1, 889=4, 888=2, 891=1, 890=4, 893=1, 892=2, 864=2, 865=5, 866=4, 867=1, 868=1, 869=5, 870=2, 871=5, 872=3, 873=5, 874=3, 875=2, 876=5, 877=3, 878=2, 879=6, 851=9, 849=3, 848=3, 855=4, 854=4, 852=1, 859=2, 858=2, 857=1, 856=2, 863=1, 862=2, 861=3, 834=3, 835=1, 832=4, 833=1, 838=3, 839=3, 836=5, 837=4, 842=2, 843=10, 840=3, 841=1, 847=11, 844=1, 956=6, 957=1, 958=2, 959=1, 953=1, 954=3, 955=2, 948=1, 949=3, 950=3, 951=1, 944=3, 946=6, 947=3, 941=3, 940=1, 943=4, 942=1, 937=4, 936=2, 939=2, 938=2, 933=1, 932=5, 935=2, 929=2, 928=1, 931=2, 930=3, 926=3, 924=4, 925=2, 2821=1, 922=1, 923=1, 920=2, 921=3, 918=3, 919=2, 916=3, 915=5, 912=3, 913=2, 911=7, 910=2, 908=7, 907=2, 906=2, 905=1, 904=3, 903=3, 902=1, 901=2, 900=6, 899=5, 898=2, 897=3, 896=3, 1016=5, 1017=3, 1019=1, 1020=4, 1022=2, 1023=1, 1008=3, 1009=1, 1010=2, 1011=1, 1012=3, 1013=1, 1014=2, 1001=1, 1000=3, 1003=1, 1002=2, 1004=1, 1007=3, 993=3, 992=5, 995=1, 994=3, 996=2, 999=4, 998=2, 986=1, 987=2, 984=2, 985=2, 990=1, 991=1, 988=1, 989=1, 978=2, 979=3, 976=1, 977=3, 982=3, 983=3, 980=2, 981=3, 971=3, 970=2, 969=1, 968=3, 974=5, 973=3, 972=4, 963=2, 962=3, 961=1, 960=1, 967=3, 966=2, 965=3, 964=2, 1100=1, 1101=2, 1102=4, 1096=1, 1097=2, 1099=1, 1092=1, 1093=1, 1094=1, 1088=4, 1089=3, 1090=1, 1091=1, 1117=1, 1119=1, 1118=3, 1113=2, 1112=2, 1115=2, 1114=2, 1109=1, 1108=3, 1111=4, 1110=1, 1105=3, 1104=1, 1106=1, 1134=3, 1130=3, 1131=1, 1129=5, 1126=2, 1127=1, 1125=3, 1122=2, 1123=1, 1121=2, 1151=2, 1150=2, 1149=1, 1148=1, 1147=2, 1146=3, 1144=3, 1143=1, 1142=1, 1141=1, 1136=1, 1032=1, 1033=2, 1035=1, 1037=1, 1038=2, 1039=2, 1024=4, 1026=1, 1029=1, 1030=1, 1031=1, 1049=1, 1048=4, 1050=1, 1053=4, 1052=1, 1055=2, 1054=1, 1041=2, 1040=1, 1042=2, 1045=1, 1044=1, 1066=3, 1064=2, 1065=1, 1070=2, 1071=1, 1068=2, 1069=1, 1058=1, 1059=2, 1056=1, 1057=3, 1062=2, 1063=1, 1060=1, 1083=1, 1081=1, 1080=2, 1087=3, 1086=1, 1085=2, 1074=1, 1073=6, 1072=1, 1076=2, 1221=1, 1220=1, 1222=1, 1216=1, 1219=2, 1218=1, 1231=1, 1230=1, 1225=1, 1224=2, 1227=1, 1236=1, 1237=1, 1238=1, 1232=2, 1234=2, 1235=1, 1244=1, 1246=1, 1247=2, 1241=2, 1255=1, 1253=1, 1252=1, 1251=1, 1250=1, 1248=2, 1262=3, 1260=1, 1258=2, 1256=1, 1271=1, 1268=1, 1266=4, 1267=1, 1265=1, 1278=2, 1279=1, 1277=1, 1274=2, 1275=2, 1273=2, 1153=3, 1155=2, 1154=2, 1157=1, 1158=1, 1161=1, 1163=3, 1165=2, 1167=2, 1168=1, 1169=1, 1170=1, 1171=3, 1172=1, 1174=3, 1175=1, 1176=2, 1180=1, 1181=2, 1186=1, 1185=1, 1184=1, 1191=2, 1190=1, 1188=1, 1193=1, 1199=1, 1198=1, 1196=3, 1200=1, 1201=2, 1204=1, 1205=1, 1211=3, 1208=1, 1214=1, 1213=1, 1373=1, 1371=1, 1361=1, 1357=1, 1354=1, 1350=2, 1351=1, 1348=1, 1349=1, 1344=1, 1345=3, 1404=1, 1401=1, 1399=1, 1398=2, 1395=3, 1390=1, 1384=1, 1381=2, 1383=1, 1376=4, 1379=1, 1309=2, 1299=2, 1298=2, 1296=3, 1303=1, 1302=2, 1301=1, 1288=1, 1289=1, 1295=2, 1293=1, 1283=2, 1280=1, 1286=1, 1285=1, 1339=2, 1338=1, 1329=2, 1328=1, 1335=3, 1323=1, 1325=1, 1326=1, 1327=2, 1314=1, 1315=1, 1316=1, 1490=1, 1491=1, 1488=2, 1489=1, 1502=1, 1476=1, 1475=1, 1487=1, 1520=1, 1521=1, 1522=1, 1532=1, 1535=1, 1506=1, 1513=1, 1512=1, 1430=1, 1431=1, 1432=2, 1410=1, 1408=1, 1413=1, 1423=1, 1457=1, 1458=1, 1460=1, 1462=2, 1464=1, 1467=1, 1471=1, 1441=1, 1447=2, 1453=3, 1455=1, 1643=1, 1646=2, 1644=1, 1645=1, 1637=1, 1657=1, 1651=1, 1655=1, 1653=1, 1600=1, 1602=1, 1603=1, 1627=1, 1619=1, 1580=1, 1581=1, 1578=1, 1569=1, 1596=1, 1539=1, 1567=1, 1566=1, 1561=1, 1562=2, 1559=1, 1555=1, 1779=1, 1776=1, 1783=1, 1786=1, 1728=1, 1730=1, 1732=1, 1748=2, 1749=1, 1750=1, 1753=2, 1759=1, 1703=1, 1700=1, 1698=2, 1696=1, 1711=2, 1709=1, 1719=1, 1714=1, 1712=1, 1713=1, 1724=1, 1664=2, 1678=1, 1687=1, 1683=1, 1694=1, 1889=1, 1885=1, 1853=1, 1848=1, 1847=1, 1846=1, 1841=1, 1836=1, 1820=1, 1819=1, 1810=1, 1801=1, 2025=1, 2002=1, 2011=2, 2008=1, 1980=1, 1978=1, 1944=1, 1920=1, 1935=1}
2015-08-25 00:33:56,173 INFO main - Time Evolution(ms): 3660066
2015-08-25 00:33:56,173 INFO fr.inria.main.AbstractMain - Time Total(ms): 3695701


Node: graphene-40.nancy.grid5000.fr


Date: Tue Aug 25 02:33:56 CEST 2015


