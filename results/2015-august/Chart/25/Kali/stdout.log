export PATH="/home/tdurieux/defects4j/framework/bin:$PATH";export JAVA_TOOL_OPTIONS=-Dfile.encoding=UTF8;export PATH="/usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/:$PATH";cp -r /home/tdurieux/projects/chart/chart_25 /tmp/chart_25_Kali;cd /tmp/chart_25_Kali;defects4j compile;mkdir lib/;cp -r /home/tdurieux/defects4j/framework/projects/lib/* lib/;cp -r /home/tdurieux/defects4j/framework/projects/Chart/lib/* lib/;find . -type f -name "package-info.java" -delete;
/home/tdurieux/defects4j-repair/src/python/core/../../../results/2015-august/Chart/25/Kali/result
cd /tmp/chart_25_Kali;export JAVA_TOOL_OPTIONS=-Dfile.encoding=UTF8;TZ="America/New_York"; export TZexport PATH="/usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/:$PATH";time java  -cp /home/tdurieux/defects4j-repair/src/python/core/../../..//libs/astor.jar fr.inria.main.evolution.MainjGenProg -mode statement-remove -location . -dependencies lib/ -failing org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests:org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests:org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests:org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests: -package org.jfree -jvm4testexecution /usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/ -javacompliancelevel 4 -maxgen 1000000 -seed 10 -maxtime 60  -scope local  -stopfirst false -flthreshold 0 -population 1 -srcjavafolder source/ -srctestfolder tests/ -binjavafolder build/ -bintestfolder build-tests/;echo "

Node: `hostname`
";echo "
Date: `date`
";rm -rf /tmp/chart_25_Kali;

2015-08-25 19:40:04,382 INFO main - End Repair Loops: Found solution
2015-08-25 19:40:04,382 INFO main - Solution stored at: ./outputMutation//MainjGenProg-.//src/
2015-08-25 19:40:04,382 INFO main - 
Number solutions:113
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 5 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 9 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 11 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 12 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 13 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 17 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 19 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 20 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 21 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 23 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 24 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 25 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 27 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 29 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 47 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 49 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 51 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 238 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 307 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 443 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 445 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 446 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 447 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 449 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 451 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 452 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 453 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 455 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 456 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 457 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 459 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 475 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 477 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 579 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 602 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 603 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 605 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 606 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 607 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 609 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 610 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 611 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 624 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 625 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 626 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 627 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 630 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 631 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 632 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 633 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 665 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 667 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 669 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 670 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 671 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 683 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 685 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 687 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 689 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 691 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 692 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 693 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 694 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 695 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 982 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 984 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 986 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 989 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 990 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 1015 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 1283 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 1285 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 1287 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 1288 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 1291 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 1295 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 1297 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 1299 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 1301 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 1303 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 1305 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 1307 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 1309 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 1313 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 1315 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 1317 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 1319 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 1321 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 1323 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 1325 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 1329 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 1333 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 1335 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 1337 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 1339 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 1341 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 1343 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 1345 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 1347 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,382 INFO main - f (sol): 0.0, [Variant id: 1349 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,383 INFO main - f (sol): 0.0, [Variant id: 1350 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,383 INFO main - f (sol): 0.0, [Variant id: 1351 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,383 INFO main - f (sol): 0.0, [Variant id: 1355 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,383 INFO main - f (sol): 0.0, [Variant id: 1357 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,383 INFO main - f (sol): 0.0, [Variant id: 1359 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,383 INFO main - f (sol): 0.0, [Variant id: 1361 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,383 INFO main - f (sol): 0.0, [Variant id: 1365 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,383 INFO main - f (sol): 0.0, [Variant id: 1367 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,383 INFO main - f (sol): 0.0, [Variant id: 1369 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,383 INFO main - f (sol): 0.0, [Variant id: 1370 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,383 INFO main - f (sol): 0.0, [Variant id: 1371 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,383 INFO main - f (sol): 0.0, [Variant id: 1372 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,383 INFO main - f (sol): 0.0, [Variant id: 1373 (SOL) , #gens: 993, #ops: 1, parent:1]
2015-08-25 19:40:04,383 INFO main - 
All variants:
2015-08-25 19:40:04,383 INFO main - f 16.0, [Variant id: 1, #gens: 993, #ops: 0, parent:-]
2015-08-25 19:40:04,383 INFO main - 
Solution details
2015-08-25 19:40:04,383 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,383 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,383 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,383 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,383 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,383 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,383 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,383 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,383 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,383 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,383 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
2015-08-25 19:40:04,383 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,383 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,383 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
2015-08-25 19:40:04,383 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,383 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,383 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
2015-08-25 19:40:04,383 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,384 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,384 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,384 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
2015-08-25 19:40:04,384 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,384 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,384 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
2015-08-25 19:40:04,384 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,384 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,384 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
2015-08-25 19:40:04,384 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,384 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,384 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
2015-08-25 19:40:04,384 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,384 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,384 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
2015-08-25 19:40:04,384 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,384 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,384 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
2015-08-25 19:40:04,384 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,384 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,384 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,384 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,384 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
2015-08-25 19:40:04,385 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,385 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,385 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
2015-08-25 19:40:04,385 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,385 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,385 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
2015-08-25 19:40:04,385 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,385 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,385 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,385 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
2015-08-25 19:40:04,385 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,385 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,385 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
2015-08-25 19:40:04,385 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,386 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,386 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,386 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
2015-08-25 19:40:04,386 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,386 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,386 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
2015-08-25 19:40:04,386 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,386 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,386 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
2015-08-25 19:40:04,386 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,386 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,386 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
2015-08-25 19:40:04,387 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,387 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,387 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
2015-08-25 19:40:04,387 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,387 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,387 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,387 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,387 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,387 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,388 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,388 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,388 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,388 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,388 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,388 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
2015-08-25 19:40:04,389 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,389 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,389 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
2015-08-25 19:40:04,389 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,389 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,389 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
2015-08-25 19:40:04,390 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,390 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,390 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
2015-08-25 19:40:04,390 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,390 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,390 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
2015-08-25 19:40:04,390 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,390 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,390 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
2015-08-25 19:40:04,391 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,391 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,391 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
2015-08-25 19:40:04,391 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,391 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,391 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
2015-08-25 19:40:04,392 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,392 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,392 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
2015-08-25 19:40:04,392 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,392 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,392 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
2015-08-25 19:40:04,392 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,392 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,392 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
2015-08-25 19:40:04,392 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,392 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,392 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
2015-08-25 19:40:04,393 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,393 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,393 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
2015-08-25 19:40:04,394 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,394 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,394 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
2015-08-25 19:40:04,394 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,394 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,394 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtReturnImpl != RootElement)null
2015-08-25 19:40:04,396 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,397 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,397 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,397 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,397 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,397 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,397 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,398 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,398 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,398 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,399 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,399 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,399 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,399 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,399 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,399 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,400 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,400 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,400 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,400 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,401 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,401 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,401 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,401 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,401 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,401 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,402 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,402 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,402 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,402 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,403 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,403 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,403 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,403 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,404 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,404 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,404 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,404 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,404 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,404 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,405 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,405 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,405 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,405 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,406 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,406 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,406 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,406 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,406 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,406 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,407 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,407 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,407 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,407 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,408 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,408 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,408 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,408 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,409 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,409 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,409 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,409 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,410 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,410 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,411 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,411 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,411 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,411 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,412 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,412 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,412 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,412 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,413 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,413 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,413 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,414 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,414 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,414 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,415 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,415 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,416 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,416 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 19:40:04,417 INFO main - 
 --SOLUTIONS DESCRIPTION--

 ----
ProgramVariant 5
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.category.StatisticalBarRenderer
line= 200
original statement= if (!(data instanceof org.jfree.data.statistics.StatisticalCategoryDataset)) {
	throw new java.lang.IllegalArgumentException("Requires StatisticalCategoryDataset.");
} 
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 9
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.category.StatisticalBarRenderer
line= 204
original statement= org.jfree.data.statistics.StatisticalCategoryDataset statData = ((org.jfree.data.statistics.StatisticalCategoryDataset)(data))
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 11
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.category.StatisticalBarRenderer
line= 206
original statement= org.jfree.chart.plot.PlotOrientation orientation = plot.getOrientation()
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 12
 
operation: DELETE
location= org.jfree.chart.renderer.category.StatisticalBarRenderer
line= 207
original statement= if (orientation == (org.jfree.chart.plot.PlotOrientation.HORIZONTAL)) {
	drawHorizontalItem(g2, state, dataArea, plot, domainAxis, rangeAxis, statData, row, column);
} else if (orientation == (org.jfree.chart.plot.PlotOrientation.VERTICAL)) {
	drawVerticalItem(g2, state, dataArea, plot, domainAxis, rangeAxis, statData, row, column);
} 
fixed statement= if (orientation == (org.jfree.chart.plot.PlotOrientation.HORIZONTAL)) {
	drawHorizontalItem(g2, state, dataArea, plot, domainAxis, rangeAxis, statData, row, column);
} else if (orientation == (org.jfree.chart.plot.PlotOrientation.VERTICAL)) {
	drawVerticalItem(g2, state, dataArea, plot, domainAxis, rangeAxis, statData, row, column);
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 13
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.category.StatisticalBarRenderer
line= 207
original statement= if (orientation == (org.jfree.chart.plot.PlotOrientation.HORIZONTAL)) {
	drawHorizontalItem(g2, state, dataArea, plot, domainAxis, rangeAxis, statData, row, column);
} else if (orientation == (org.jfree.chart.plot.PlotOrientation.VERTICAL)) {
	drawVerticalItem(g2, state, dataArea, plot, domainAxis, rangeAxis, statData, row, column);
} 
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 17
 
operation: INSERT_BEFORE
location= org.jfree.data.statistics.DefaultStatisticalCategoryDataset
line= 107
original statement= java.lang.Number result = null
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 19
 
operation: INSERT_BEFORE
location= org.jfree.data.statistics.DefaultStatisticalCategoryDataset
line= 108
original statement= org.jfree.data.statistics.MeanAndStandardDeviation masd = ((org.jfree.data.statistics.MeanAndStandardDeviation)(this.data.getObject(row, column)))
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 20
 
operation: DELETE
location= org.jfree.data.statistics.DefaultStatisticalCategoryDataset
line= 110
original statement= if (masd != null) {
	result = masd.getMean();
} 
fixed statement= if (masd != null) {
	result = masd.getMean();
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 21
 
operation: INSERT_BEFORE
location= org.jfree.data.statistics.DefaultStatisticalCategoryDataset
line= 110
original statement= if (masd != null) {
	result = masd.getMean();
} 
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 23
 
operation: REPLACE
location= org.jfree.data.statistics.DefaultStatisticalCategoryDataset
line= 110
original statement= if (masd != null) {
	result = masd.getMean();
} 
fixed statement= if (false) {
	result = masd.getMean();
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 24
 
operation: DELETE
location= org.jfree.data.statistics.DefaultStatisticalCategoryDataset
line= 111
original statement= result = masd.getMean()
fixed statement= result = masd.getMean()
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 25
 
operation: INSERT_BEFORE
location= org.jfree.data.statistics.DefaultStatisticalCategoryDataset
line= 111
original statement= result = masd.getMean()
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 27
 
operation: INSERT_BEFORE
location= org.jfree.data.statistics.DefaultStatisticalCategoryDataset
line= 113
original statement= return result
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 29
 
operation: INSERT_BEFORE
location= org.jfree.data.statistics.DefaultStatisticalCategoryDataset
line= 126
original statement= return getMeanValue(row, column)
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 47
 
operation: INSERT_BEFORE
location= org.jfree.data.statistics.DefaultStatisticalCategoryDataset
line= 264
original statement= return this.data.getRowCount()
fixed statement= if (true)
	return 0;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 49
 
operation: INSERT_BEFORE
location= org.jfree.data.statistics.DefaultStatisticalCategoryDataset
line= 273
original statement= return this.data.getColumnCount()
fixed statement= if (true)
	return 0;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 51
 
operation: INSERT_BEFORE
location= org.jfree.data.statistics.MeanAndStandardDeviation
line= 95
original statement= return this.mean
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 238
 
operation: DELETE
location= org.jfree.data.statistics.DefaultStatisticalCategoryDataset
line= 301
original statement= this.data.addObject(item, rowKey, columnKey)
fixed statement= this.data.addObject(item, rowKey, columnKey)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 307
 
operation: INSERT_BEFORE
location= org.jfree.data.KeyedObjects2D
line= 229
original statement= row = ((org.jfree.data.KeyedObjects)(this.rows.get(rowIndex)))
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 443
 
operation: INSERT_BEFORE
location= org.jfree.data.KeyedObjects2D
line= 108
original statement= java.lang.Object result = null
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 445
 
operation: INSERT_BEFORE
location= org.jfree.data.KeyedObjects2D
line= 109
original statement= org.jfree.data.KeyedObjects rowData = ((org.jfree.data.KeyedObjects)(this.rows.get(row)))
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 446
 
operation: DELETE
location= org.jfree.data.KeyedObjects2D
line= 110
original statement= if (rowData != null) {
	java.lang.Comparable columnKey = ((java.lang.Comparable)(this.columnKeys.get(column)));
	if (columnKey != null) {
		result = rowData.getObject(columnKey);
	} 
} 
fixed statement= if (rowData != null) {
	java.lang.Comparable columnKey = ((java.lang.Comparable)(this.columnKeys.get(column)));
	if (columnKey != null) {
		result = rowData.getObject(columnKey);
	} 
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 447
 
operation: INSERT_BEFORE
location= org.jfree.data.KeyedObjects2D
line= 110
original statement= if (rowData != null) {
	java.lang.Comparable columnKey = ((java.lang.Comparable)(this.columnKeys.get(column)));
	if (columnKey != null) {
		result = rowData.getObject(columnKey);
	} 
} 
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 449
 
operation: REPLACE
location= org.jfree.data.KeyedObjects2D
line= 110
original statement= if (rowData != null) {
	java.lang.Comparable columnKey = ((java.lang.Comparable)(this.columnKeys.get(column)));
	if (columnKey != null) {
		result = rowData.getObject(columnKey);
	} 
} 
fixed statement= if (false) {
	java.lang.Comparable columnKey = ((java.lang.Comparable)(this.columnKeys.get(column)));
	if (columnKey != null) {
		result = rowData.getObject(columnKey);
	} 
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 451
 
operation: INSERT_BEFORE
location= org.jfree.data.KeyedObjects2D
line= 111
original statement= java.lang.Comparable columnKey = ((java.lang.Comparable)(this.columnKeys.get(column)))
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 452
 
operation: DELETE
location= org.jfree.data.KeyedObjects2D
line= 112
original statement= if (columnKey != null) {
	result = rowData.getObject(columnKey);
} 
fixed statement= if (columnKey != null) {
	result = rowData.getObject(columnKey);
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 453
 
operation: INSERT_BEFORE
location= org.jfree.data.KeyedObjects2D
line= 112
original statement= if (columnKey != null) {
	result = rowData.getObject(columnKey);
} 
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 455
 
operation: REPLACE
location= org.jfree.data.KeyedObjects2D
line= 112
original statement= if (columnKey != null) {
	result = rowData.getObject(columnKey);
} 
fixed statement= if (false) {
	result = rowData.getObject(columnKey);
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 456
 
operation: DELETE
location= org.jfree.data.KeyedObjects2D
line= 113
original statement= result = rowData.getObject(columnKey)
fixed statement= result = rowData.getObject(columnKey)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 457
 
operation: INSERT_BEFORE
location= org.jfree.data.KeyedObjects2D
line= 113
original statement= result = rowData.getObject(columnKey)
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 459
 
operation: INSERT_BEFORE
location= org.jfree.data.KeyedObjects2D
line= 116
original statement= return result
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 475
 
operation: INSERT_BEFORE
location= org.jfree.data.KeyedObjects2D
line= 86
original statement= return this.rowKeys.size()
fixed statement= if (true)
	return 0;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 477
 
operation: INSERT_BEFORE
location= org.jfree.data.KeyedObjects2D
line= 95
original statement= return this.columnKeys.size()
fixed statement= if (true)
	return 0;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 579
 
operation: INSERT_BEFORE
location= org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
line= 248
original statement= return 1
fixed statement= if (true)
	return 0;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 602
 
operation: DELETE
location= org.jfree.data.KeyedObjects2D
line= 236
original statement= row.setObject(columnKey, object)
fixed statement= row.setObject(columnKey, object)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 603
 
operation: INSERT_BEFORE
location= org.jfree.data.KeyedObjects2D
line= 236
original statement= row.setObject(columnKey, object)
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 605
 
operation: INSERT_BEFORE
location= org.jfree.data.KeyedObjects2D
line= 237
original statement= int columnIndex = this.columnKeys.indexOf(columnKey)
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 606
 
operation: DELETE
location= org.jfree.data.KeyedObjects2D
line= 238
original statement= if (columnIndex < 0) {
	this.columnKeys.add(columnKey);
} 
fixed statement= if (columnIndex < 0) {
	this.columnKeys.add(columnKey);
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 607
 
operation: INSERT_BEFORE
location= org.jfree.data.KeyedObjects2D
line= 238
original statement= if (columnIndex < 0) {
	this.columnKeys.add(columnKey);
} 
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 609
 
operation: REPLACE
location= org.jfree.data.KeyedObjects2D
line= 238
original statement= if (columnIndex < 0) {
	this.columnKeys.add(columnKey);
} 
fixed statement= if (false) {
	this.columnKeys.add(columnKey);
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 610
 
operation: DELETE
location= org.jfree.data.KeyedObjects2D
line= 239
original statement= this.columnKeys.add(columnKey)
fixed statement= this.columnKeys.add(columnKey)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 611
 
operation: INSERT_BEFORE
location= org.jfree.data.KeyedObjects2D
line= 239
original statement= this.columnKeys.add(columnKey)
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 624
 
operation: DELETE
location= org.jfree.chart.plot.CategoryPlot
line= 2865
original statement= for (int column = 0 ; column < columnCount ; column++) {
	if ((this.rowRenderingOrder) == (org.jfree.chart.util.SortOrder.ASCENDING)) {
		for (int row = 0 ; row < rowCount ; row++) {
			renderer.drawItem(g2, state, dataArea, this, domainAxis, rangeAxis, currentDataset, row, column, pass);
		}
	} else {
		for (int row = rowCount - 1 ; row >= 0 ; row--) {
			renderer.drawItem(g2, state, dataArea, this, domainAxis, rangeAxis, currentDataset, row, column, pass);
		}
	}
}
fixed statement= for (int column = 0 ; column < columnCount ; column++) {
	if ((this.rowRenderingOrder) == (org.jfree.chart.util.SortOrder.ASCENDING)) {
		for (int row = 0 ; row < rowCount ; row++) {
			renderer.drawItem(g2, state, dataArea, this, domainAxis, rangeAxis, currentDataset, row, column, pass);
		}
	} else {
		for (int row = rowCount - 1 ; row >= 0 ; row--) {
			renderer.drawItem(g2, state, dataArea, this, domainAxis, rangeAxis, currentDataset, row, column, pass);
		}
	}
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 625
 
operation: INSERT_BEFORE
location= org.jfree.chart.plot.CategoryPlot
line= 2865
original statement= for (int column = 0 ; column < columnCount ; column++) {
	if ((this.rowRenderingOrder) == (org.jfree.chart.util.SortOrder.ASCENDING)) {
		for (int row = 0 ; row < rowCount ; row++) {
			renderer.drawItem(g2, state, dataArea, this, domainAxis, rangeAxis, currentDataset, row, column, pass);
		}
	} else {
		for (int row = rowCount - 1 ; row >= 0 ; row--) {
			renderer.drawItem(g2, state, dataArea, this, domainAxis, rangeAxis, currentDataset, row, column, pass);
		}
	}
}
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 626
 
operation: DELETE
location= org.jfree.chart.plot.CategoryPlot
line= 2866
original statement= if ((this.rowRenderingOrder) == (org.jfree.chart.util.SortOrder.ASCENDING)) {
	for (int row = 0 ; row < rowCount ; row++) {
		renderer.drawItem(g2, state, dataArea, this, domainAxis, rangeAxis, currentDataset, row, column, pass);
	}
} else {
	for (int row = rowCount - 1 ; row >= 0 ; row--) {
		renderer.drawItem(g2, state, dataArea, this, domainAxis, rangeAxis, currentDataset, row, column, pass);
	}
}
fixed statement= if ((this.rowRenderingOrder) == (org.jfree.chart.util.SortOrder.ASCENDING)) {
	for (int row = 0 ; row < rowCount ; row++) {
		renderer.drawItem(g2, state, dataArea, this, domainAxis, rangeAxis, currentDataset, row, column, pass);
	}
} else {
	for (int row = rowCount - 1 ; row >= 0 ; row--) {
		renderer.drawItem(g2, state, dataArea, this, domainAxis, rangeAxis, currentDataset, row, column, pass);
	}
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 627
 
operation: INSERT_BEFORE
location= org.jfree.chart.plot.CategoryPlot
line= 2866
original statement= if ((this.rowRenderingOrder) == (org.jfree.chart.util.SortOrder.ASCENDING)) {
	for (int row = 0 ; row < rowCount ; row++) {
		renderer.drawItem(g2, state, dataArea, this, domainAxis, rangeAxis, currentDataset, row, column, pass);
	}
} else {
	for (int row = rowCount - 1 ; row >= 0 ; row--) {
		renderer.drawItem(g2, state, dataArea, this, domainAxis, rangeAxis, currentDataset, row, column, pass);
	}
}
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 630
 
operation: DELETE
location= org.jfree.chart.plot.CategoryPlot
line= 2867
original statement= for (int row = 0 ; row < rowCount ; row++) {
	renderer.drawItem(g2, state, dataArea, this, domainAxis, rangeAxis, currentDataset, row, column, pass);
}
fixed statement= for (int row = 0 ; row < rowCount ; row++) {
	renderer.drawItem(g2, state, dataArea, this, domainAxis, rangeAxis, currentDataset, row, column, pass);
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 631
 
operation: INSERT_BEFORE
location= org.jfree.chart.plot.CategoryPlot
line= 2867
original statement= for (int row = 0 ; row < rowCount ; row++) {
	renderer.drawItem(g2, state, dataArea, this, domainAxis, rangeAxis, currentDataset, row, column, pass);
}
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 632
 
operation: DELETE
location= org.jfree.chart.plot.CategoryPlot
line= 2868
original statement= renderer.drawItem(g2, state, dataArea, this, domainAxis, rangeAxis, currentDataset, row, column, pass)
fixed statement= renderer.drawItem(g2, state, dataArea, this, domainAxis, rangeAxis, currentDataset, row, column, pass)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 633
 
operation: INSERT_BEFORE
location= org.jfree.chart.plot.CategoryPlot
line= 2868
original statement= renderer.drawItem(g2, state, dataArea, this, domainAxis, rangeAxis, currentDataset, row, column, pass)
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 665
 
operation: INSERT_BEFORE
location= org.jfree.chart.JFreeChart
line= 1373
original statement= return createBufferedImage(width, height, java.awt.image.BufferedImage.TYPE_INT_RGB, info)
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 667
 
operation: INSERT_BEFORE
location= org.jfree.chart.JFreeChart
line= 1391
original statement= java.awt.image.BufferedImage image = new java.awt.image.BufferedImage(width , height , imageType)
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 669
 
operation: INSERT_BEFORE
location= org.jfree.chart.JFreeChart
line= 1392
original statement= java.awt.Graphics2D g2 = image.createGraphics()
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 670
 
operation: DELETE
location= org.jfree.chart.JFreeChart
line= 1393
original statement= draw(g2, new java.awt.geom.Rectangle2D.Double(0 , 0 , width , height), null, info)
fixed statement= draw(g2, new java.awt.geom.Rectangle2D.Double(0 , 0 , width , height), null, info)
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 671
 
operation: INSERT_BEFORE
location= org.jfree.chart.JFreeChart
line= 1393
original statement= draw(g2, new java.awt.geom.Rectangle2D.Double(0 , 0 , width , height), null, info)
fixed statement= if (true)
	return null;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 683
 
operation: INSERT_BEFORE
location= org.jfree.chart.plot.CategoryPlot
line= 2857
original statement= foundData = true
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 685
 
operation: INSERT_BEFORE
location= org.jfree.chart.plot.CategoryPlot
line= 2858
original statement= org.jfree.chart.renderer.category.CategoryItemRendererState state = renderer.initialise(g2, dataArea, this, index, info)
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 687
 
operation: INSERT_BEFORE
location= org.jfree.chart.plot.CategoryPlot
line= 2860
original statement= int columnCount = currentDataset.getColumnCount()
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 689
 
operation: INSERT_BEFORE
location= org.jfree.chart.plot.CategoryPlot
line= 2861
original statement= int rowCount = currentDataset.getRowCount()
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 691
 
operation: INSERT_BEFORE
location= org.jfree.chart.plot.CategoryPlot
line= 2862
original statement= int passCount = renderer.getPassCount()
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 692
 
operation: DELETE
location= org.jfree.chart.plot.CategoryPlot
line= 2863
original statement= for (int pass = 0 ; pass < passCount ; pass++) {
	if ((this.columnRenderingOrder) == (org.jfree.chart.util.SortOrder.ASCENDING)) {
		for (int column = 0 ; column < columnCount ; column++) {
			if ((this.rowRenderingOrder) == (org.jfree.chart.util.SortOrder.ASCENDING)) {
				for (int row = 0 ; row < rowCount ; row++) {
					renderer.drawItem(g2, state, dataArea, this, domainAxis, rangeAxis, currentDataset, row, column, pass);
				}
			} else {
				for (int row = rowCount - 1 ; row >= 0 ; row--) {
					renderer.drawItem(g2, state, dataArea, this, domainAxis, rangeAxis, currentDataset, row, column, pass);
				}
			}
		}
	} else {
		for (int column = columnCount - 1 ; column >= 0 ; column--) {
			if ((this.rowRenderingOrder) == (org.jfree.chart.util.SortOrder.ASCENDING)) {
				for (int row = 0 ; row < rowCount ; row++) {
					renderer.drawItem(g2, state, dataArea, this, domainAxis, rangeAxis, currentDataset, row, column, pass);
				}
			} else {
				for (int row = rowCount - 1 ; row >= 0 ; row--) {
					renderer.drawItem(g2, state, dataArea, this, domainAxis, rangeAxis, currentDataset, row, column, pass);
				}
			}
		}
	}
}
fixed statement= for (int pass = 0 ; pass < passCount ; pass++) {
	if ((this.columnRenderingOrder) == (org.jfree.chart.util.SortOrder.ASCENDING)) {
		for (int column = 0 ; column < columnCount ; column++) {
			if ((this.rowRenderingOrder) == (org.jfree.chart.util.SortOrder.ASCENDING)) {
				for (int row = 0 ; row < rowCount ; row++) {
					renderer.drawItem(g2, state, dataArea, this, domainAxis, rangeAxis, currentDataset, row, column, pass);
				}
			} else {
				for (int row = rowCount - 1 ; row >= 0 ; row--) {
					renderer.drawItem(g2, state, dataArea, this, domainAxis, rangeAxis, currentDataset, row, column, pass);
				}
			}
		}
	} else {
		for (int column = columnCount - 1 ; column >= 0 ; column--) {
			if ((this.rowRenderingOrder) == (org.jfree.chart.util.SortOrder.ASCENDING)) {
				for (int row = 0 ; row < rowCount ; row++) {
					renderer.drawItem(g2, state, dataArea, this, domainAxis, rangeAxis, currentDataset, row, column, pass);
				}
			} else {
				for (int row = rowCount - 1 ; row >= 0 ; row--) {
					renderer.drawItem(g2, state, dataArea, this, domainAxis, rangeAxis, currentDataset, row, column, pass);
				}
			}
		}
	}
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 693
 
operation: INSERT_BEFORE
location= org.jfree.chart.plot.CategoryPlot
line= 2863
original statement= for (int pass = 0 ; pass < passCount ; pass++) {
	if ((this.columnRenderingOrder) == (org.jfree.chart.util.SortOrder.ASCENDING)) {
		for (int column = 0 ; column < columnCount ; column++) {
			if ((this.rowRenderingOrder) == (org.jfree.chart.util.SortOrder.ASCENDING)) {
				for (int row = 0 ; row < rowCount ; row++) {
					renderer.drawItem(g2, state, dataArea, this, domainAxis, rangeAxis, currentDataset, row, column, pass);
				}
			} else {
				for (int row = rowCount - 1 ; row >= 0 ; row--) {
					renderer.drawItem(g2, state, dataArea, this, domainAxis, rangeAxis, currentDataset, row, column, pass);
				}
			}
		}
	} else {
		for (int column = columnCount - 1 ; column >= 0 ; column--) {
			if ((this.rowRenderingOrder) == (org.jfree.chart.util.SortOrder.ASCENDING)) {
				for (int row = 0 ; row < rowCount ; row++) {
					renderer.drawItem(g2, state, dataArea, this, domainAxis, rangeAxis, currentDataset, row, column, pass);
				}
			} else {
				for (int row = rowCount - 1 ; row >= 0 ; row--) {
					renderer.drawItem(g2, state, dataArea, this, domainAxis, rangeAxis, currentDataset, row, column, pass);
				}
			}
		}
	}
}
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 694
 
operation: DELETE
location= org.jfree.chart.plot.CategoryPlot
line= 2864
original statement= if ((this.columnRenderingOrder) == (org.jfree.chart.util.SortOrder.ASCENDING)) {
	for (int column = 0 ; column < columnCount ; column++) {
		if ((this.rowRenderingOrder) == (org.jfree.chart.util.SortOrder.ASCENDING)) {
			for (int row = 0 ; row < rowCount ; row++) {
				renderer.drawItem(g2, state, dataArea, this, domainAxis, rangeAxis, currentDataset, row, column, pass);
			}
		} else {
			for (int row = rowCount - 1 ; row >= 0 ; row--) {
				renderer.drawItem(g2, state, dataArea, this, domainAxis, rangeAxis, currentDataset, row, column, pass);
			}
		}
	}
} else {
	for (int column = columnCount - 1 ; column >= 0 ; column--) {
		if ((this.rowRenderingOrder) == (org.jfree.chart.util.SortOrder.ASCENDING)) {
			for (int row = 0 ; row < rowCount ; row++) {
				renderer.drawItem(g2, state, dataArea, this, domainAxis, rangeAxis, currentDataset, row, column, pass);
			}
		} else {
			for (int row = rowCount - 1 ; row >= 0 ; row--) {
				renderer.drawItem(g2, state, dataArea, this, domainAxis, rangeAxis, currentDataset, row, column, pass);
			}
		}
	}
}
fixed statement= if ((this.columnRenderingOrder) == (org.jfree.chart.util.SortOrder.ASCENDING)) {
	for (int column = 0 ; column < columnCount ; column++) {
		if ((this.rowRenderingOrder) == (org.jfree.chart.util.SortOrder.ASCENDING)) {
			for (int row = 0 ; row < rowCount ; row++) {
				renderer.drawItem(g2, state, dataArea, this, domainAxis, rangeAxis, currentDataset, row, column, pass);
			}
		} else {
			for (int row = rowCount - 1 ; row >= 0 ; row--) {
				renderer.drawItem(g2, state, dataArea, this, domainAxis, rangeAxis, currentDataset, row, column, pass);
			}
		}
	}
} else {
	for (int column = columnCount - 1 ; column >= 0 ; column--) {
		if ((this.rowRenderingOrder) == (org.jfree.chart.util.SortOrder.ASCENDING)) {
			for (int row = 0 ; row < rowCount ; row++) {
				renderer.drawItem(g2, state, dataArea, this, domainAxis, rangeAxis, currentDataset, row, column, pass);
			}
		} else {
			for (int row = rowCount - 1 ; row >= 0 ; row--) {
				renderer.drawItem(g2, state, dataArea, this, domainAxis, rangeAxis, currentDataset, row, column, pass);
			}
		}
	}
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 695
 
operation: INSERT_BEFORE
location= org.jfree.chart.plot.CategoryPlot
line= 2864
original statement= if ((this.columnRenderingOrder) == (org.jfree.chart.util.SortOrder.ASCENDING)) {
	for (int column = 0 ; column < columnCount ; column++) {
		if ((this.rowRenderingOrder) == (org.jfree.chart.util.SortOrder.ASCENDING)) {
			for (int row = 0 ; row < rowCount ; row++) {
				renderer.drawItem(g2, state, dataArea, this, domainAxis, rangeAxis, currentDataset, row, column, pass);
			}
		} else {
			for (int row = rowCount - 1 ; row >= 0 ; row--) {
				renderer.drawItem(g2, state, dataArea, this, domainAxis, rangeAxis, currentDataset, row, column, pass);
			}
		}
	}
} else {
	for (int column = columnCount - 1 ; column >= 0 ; column--) {
		if ((this.rowRenderingOrder) == (org.jfree.chart.util.SortOrder.ASCENDING)) {
			for (int row = 0 ; row < rowCount ; row++) {
				renderer.drawItem(g2, state, dataArea, this, domainAxis, rangeAxis, currentDataset, row, column, pass);
			}
		} else {
			for (int row = rowCount - 1 ; row >= 0 ; row--) {
				renderer.drawItem(g2, state, dataArea, this, domainAxis, rangeAxis, currentDataset, row, column, pass);
			}
		}
	}
}
fixed statement= if (true)
	return false;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 982
 
operation: DELETE
location= org.jfree.data.general.DatasetUtilities
line= 574
original statement= for (int r = 0 ; r < rowCount ; r++) {
	for (int c = 0 ; c < columnCount ; c++) {
		if ((dataset.getValue(r, c)) != null) {
			return false;
		} 
	}
}
fixed statement= for (int r = 0 ; r < rowCount ; r++) {
	for (int c = 0 ; c < columnCount ; c++) {
		if ((dataset.getValue(r, c)) != null) {
			return false;
		} 
	}
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 984
 
operation: DELETE
location= org.jfree.data.general.DatasetUtilities
line= 575
original statement= for (int c = 0 ; c < columnCount ; c++) {
	if ((dataset.getValue(r, c)) != null) {
		return false;
	} 
}
fixed statement= for (int c = 0 ; c < columnCount ; c++) {
	if ((dataset.getValue(r, c)) != null) {
		return false;
	} 
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 986
 
operation: DELETE
location= org.jfree.data.general.DatasetUtilities
line= 576
original statement= if ((dataset.getValue(r, c)) != null) {
	return false;
} 
fixed statement= if ((dataset.getValue(r, c)) != null) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 989
 
operation: REPLACE
location= org.jfree.data.general.DatasetUtilities
line= 576
original statement= if ((dataset.getValue(r, c)) != null) {
	return false;
} 
fixed statement= if (false) {
	return false;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 990
 
operation: DELETE
location= org.jfree.data.general.DatasetUtilities
line= 577
original statement= return false
fixed statement= return false
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1015
 
operation: INSERT_BEFORE
location= org.jfree.chart.plot.CategoryPlot
line= 2569
original statement= state = new org.jfree.chart.plot.PlotRenderingInfo(null)
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1283
 
operation: INSERT_BEFORE
location= org.jfree.chart.plot.CategoryPlot
line= 2558
original statement= boolean b1 = (area.getWidth()) <= (org.jfree.chart.plot.Plot.MINIMUM_WIDTH_TO_DRAW)
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1285
 
operation: INSERT_BEFORE
location= org.jfree.chart.plot.CategoryPlot
line= 2559
original statement= boolean b2 = (area.getHeight()) <= (org.jfree.chart.plot.Plot.MINIMUM_HEIGHT_TO_DRAW)
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1287
 
operation: INSERT_BEFORE
location= org.jfree.chart.plot.CategoryPlot
line= 2560
original statement= if (b1 || b2) {
	return ;
} 
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1288
 
operation: REPLACE
location= org.jfree.chart.plot.CategoryPlot
line= 2560
original statement= if (b1 || b2) {
	return ;
} 
fixed statement= if (true) {
	return ;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1291
 
operation: INSERT_BEFORE
location= org.jfree.chart.plot.CategoryPlot
line= 2565
original statement= if (state == null) {
	state = new org.jfree.chart.plot.PlotRenderingInfo(null);
} 
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1295
 
operation: INSERT_BEFORE
location= org.jfree.chart.plot.CategoryPlot
line= 2571
original statement= state.setPlotArea(area)
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1297
 
operation: INSERT_BEFORE
location= org.jfree.chart.plot.CategoryPlot
line= 2574
original statement= org.jfree.chart.util.RectangleInsets insets = getInsets()
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1299
 
operation: INSERT_BEFORE
location= org.jfree.chart.plot.CategoryPlot
line= 2575
original statement= insets.trim(area)
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1301
 
operation: INSERT_BEFORE
location= org.jfree.chart.plot.CategoryPlot
line= 2578
original statement= org.jfree.chart.axis.AxisSpace space = calculateAxisSpace(g2, area)
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1303
 
operation: INSERT_BEFORE
location= org.jfree.chart.plot.CategoryPlot
line= 2579
original statement= java.awt.geom.Rectangle2D dataArea = space.shrink(area, null)
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1305
 
operation: INSERT_BEFORE
location= org.jfree.chart.plot.CategoryPlot
line= 2580
original statement= this.axisOffset.trim(dataArea)
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1307
 
operation: INSERT_BEFORE
location= org.jfree.chart.plot.CategoryPlot
line= 2582
original statement= state.setDataArea(dataArea)
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1309
 
operation: INSERT_BEFORE
location= org.jfree.chart.plot.CategoryPlot
line= 2586
original statement= if ((getRenderer()) != null) {
	getRenderer().drawBackground(g2, this, dataArea);
} else {
	drawBackground(g2, dataArea);
}
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1313
 
operation: INSERT_BEFORE
location= org.jfree.chart.plot.CategoryPlot
line= 2587
original statement= getRenderer().drawBackground(g2, this, dataArea)
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1315
 
operation: INSERT_BEFORE
location= org.jfree.chart.plot.CategoryPlot
line= 2593
original statement= java.util.Map axisStateMap = drawAxes(g2, area, dataArea, state)
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1317
 
operation: INSERT_BEFORE
location= org.jfree.chart.plot.CategoryPlot
line= 2596
original statement= java.awt.Shape savedClip = g2.getClip()
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1319
 
operation: INSERT_BEFORE
location= org.jfree.chart.plot.CategoryPlot
line= 2597
original statement= g2.clip(dataArea)
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1321
 
operation: INSERT_BEFORE
location= org.jfree.chart.plot.CategoryPlot
line= 2599
original statement= drawDomainGridlines(g2, dataArea)
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1323
 
operation: INSERT_BEFORE
location= org.jfree.chart.plot.CategoryPlot
line= 2601
original statement= org.jfree.chart.axis.AxisState rangeAxisState = ((org.jfree.chart.axis.AxisState)(axisStateMap.get(getRangeAxis())))
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1325
 
operation: INSERT_BEFORE
location= org.jfree.chart.plot.CategoryPlot
line= 2602
original statement= if (rangeAxisState == null) {
	if (parentState != null) {
		rangeAxisState = ((org.jfree.chart.axis.AxisState)(parentState.getSharedAxisStates().get(getRangeAxis())));
	} 
} 
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1329
 
operation: INSERT_BEFORE
location= org.jfree.chart.plot.CategoryPlot
line= 2608
original statement= if (rangeAxisState != null) {
	drawRangeGridlines(g2, dataArea, rangeAxisState.getTicks());
} 
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1333
 
operation: INSERT_BEFORE
location= org.jfree.chart.plot.CategoryPlot
line= 2609
original statement= drawRangeGridlines(g2, dataArea, rangeAxisState.getTicks())
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1335
 
operation: INSERT_BEFORE
location= org.jfree.chart.plot.CategoryPlot
line= 2613
original statement= for (int i = 0 ; i < (this.renderers.size()) ; i++) {
	drawDomainMarkers(g2, dataArea, i, org.jfree.chart.util.Layer.BACKGROUND);
}
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1337
 
operation: INSERT_BEFORE
location= org.jfree.chart.plot.CategoryPlot
line= 2614
original statement= drawDomainMarkers(g2, dataArea, i, org.jfree.chart.util.Layer.BACKGROUND)
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1339
 
operation: INSERT_BEFORE
location= org.jfree.chart.plot.CategoryPlot
line= 2616
original statement= for (int i = 0 ; i < (this.renderers.size()) ; i++) {
	drawRangeMarkers(g2, dataArea, i, org.jfree.chart.util.Layer.BACKGROUND);
}
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1341
 
operation: INSERT_BEFORE
location= org.jfree.chart.plot.CategoryPlot
line= 2617
original statement= drawRangeMarkers(g2, dataArea, i, org.jfree.chart.util.Layer.BACKGROUND)
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1343
 
operation: INSERT_BEFORE
location= org.jfree.chart.plot.CategoryPlot
line= 2621
original statement= boolean foundData = false
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1345
 
operation: INSERT_BEFORE
location= org.jfree.chart.plot.CategoryPlot
line= 2624
original statement= java.awt.Composite originalComposite = g2.getComposite()
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1347
 
operation: INSERT_BEFORE
location= org.jfree.chart.plot.CategoryPlot
line= 2625
original statement= g2.setComposite(java.awt.AlphaComposite.getInstance(java.awt.AlphaComposite.SRC_OVER, getForegroundAlpha()))
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1349
 
operation: INSERT_BEFORE
location= org.jfree.chart.plot.CategoryPlot
line= 2628
original statement= org.jfree.chart.plot.DatasetRenderingOrder order = getDatasetRenderingOrder()
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1350
 
operation: DELETE
location= org.jfree.chart.plot.CategoryPlot
line= 2629
original statement= if (order == (org.jfree.chart.plot.DatasetRenderingOrder.FORWARD)) {
	int datasetCount = this.datasets.size();
	for (int i = 0 ; i < datasetCount ; i++) {
		org.jfree.chart.renderer.category.CategoryItemRenderer r = getRenderer(i);
		if (r != null) {
			org.jfree.chart.axis.CategoryAxis domainAxis = getDomainAxisForDataset(i);
			org.jfree.chart.axis.ValueAxis rangeAxis = getRangeAxisForDataset(i);
			r.drawAnnotations(g2, dataArea, domainAxis, rangeAxis, org.jfree.chart.util.Layer.BACKGROUND, state);
		} 
	}
	for (int i = 0 ; i < datasetCount ; i++) {
		foundData = (render(g2, dataArea, i, state)) || foundData;
	}
	for (int i = 0 ; i < datasetCount ; i++) {
		org.jfree.chart.renderer.category.CategoryItemRenderer r = getRenderer(i);
		if (r != null) {
			org.jfree.chart.axis.CategoryAxis domainAxis = getDomainAxisForDataset(i);
			org.jfree.chart.axis.ValueAxis rangeAxis = getRangeAxisForDataset(i);
			r.drawAnnotations(g2, dataArea, domainAxis, rangeAxis, org.jfree.chart.util.Layer.FOREGROUND, state);
		} 
	}
} else {
	int datasetCount = this.datasets.size();
	for (int i = datasetCount - 1 ; i >= 0 ; i--) {
		org.jfree.chart.renderer.category.CategoryItemRenderer r = getRenderer(i);
		if (r != null) {
			org.jfree.chart.axis.CategoryAxis domainAxis = getDomainAxisForDataset(i);
			org.jfree.chart.axis.ValueAxis rangeAxis = getRangeAxisForDataset(i);
			r.drawAnnotations(g2, dataArea, domainAxis, rangeAxis, org.jfree.chart.util.Layer.BACKGROUND, state);
		} 
	}
	for (int i = (this.datasets.size()) - 1 ; i >= 0 ; i--) {
		foundData = (render(g2, dataArea, i, state)) || foundData;
	}
	for (int i = datasetCount - 1 ; i >= 0 ; i--) {
		org.jfree.chart.renderer.category.CategoryItemRenderer r = getRenderer(i);
		if (r != null) {
			org.jfree.chart.axis.CategoryAxis domainAxis = getDomainAxisForDataset(i);
			org.jfree.chart.axis.ValueAxis rangeAxis = getRangeAxisForDataset(i);
			r.drawAnnotations(g2, dataArea, domainAxis, rangeAxis, org.jfree.chart.util.Layer.FOREGROUND, state);
		} 
	}
}
fixed statement= if (order == (org.jfree.chart.plot.DatasetRenderingOrder.FORWARD)) {
	int datasetCount = this.datasets.size();
	for (int i = 0 ; i < datasetCount ; i++) {
		org.jfree.chart.renderer.category.CategoryItemRenderer r = getRenderer(i);
		if (r != null) {
			org.jfree.chart.axis.CategoryAxis domainAxis = getDomainAxisForDataset(i);
			org.jfree.chart.axis.ValueAxis rangeAxis = getRangeAxisForDataset(i);
			r.drawAnnotations(g2, dataArea, domainAxis, rangeAxis, org.jfree.chart.util.Layer.BACKGROUND, state);
		} 
	}
	for (int i = 0 ; i < datasetCount ; i++) {
		foundData = (render(g2, dataArea, i, state)) || foundData;
	}
	for (int i = 0 ; i < datasetCount ; i++) {
		org.jfree.chart.renderer.category.CategoryItemRenderer r = getRenderer(i);
		if (r != null) {
			org.jfree.chart.axis.CategoryAxis domainAxis = getDomainAxisForDataset(i);
			org.jfree.chart.axis.ValueAxis rangeAxis = getRangeAxisForDataset(i);
			r.drawAnnotations(g2, dataArea, domainAxis, rangeAxis, org.jfree.chart.util.Layer.FOREGROUND, state);
		} 
	}
} else {
	int datasetCount = this.datasets.size();
	for (int i = datasetCount - 1 ; i >= 0 ; i--) {
		org.jfree.chart.renderer.category.CategoryItemRenderer r = getRenderer(i);
		if (r != null) {
			org.jfree.chart.axis.CategoryAxis domainAxis = getDomainAxisForDataset(i);
			org.jfree.chart.axis.ValueAxis rangeAxis = getRangeAxisForDataset(i);
			r.drawAnnotations(g2, dataArea, domainAxis, rangeAxis, org.jfree.chart.util.Layer.BACKGROUND, state);
		} 
	}
	for (int i = (this.datasets.size()) - 1 ; i >= 0 ; i--) {
		foundData = (render(g2, dataArea, i, state)) || foundData;
	}
	for (int i = datasetCount - 1 ; i >= 0 ; i--) {
		org.jfree.chart.renderer.category.CategoryItemRenderer r = getRenderer(i);
		if (r != null) {
			org.jfree.chart.axis.CategoryAxis domainAxis = getDomainAxisForDataset(i);
			org.jfree.chart.axis.ValueAxis rangeAxis = getRangeAxisForDataset(i);
			r.drawAnnotations(g2, dataArea, domainAxis, rangeAxis, org.jfree.chart.util.Layer.FOREGROUND, state);
		} 
	}
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1351
 
operation: INSERT_BEFORE
location= org.jfree.chart.plot.CategoryPlot
line= 2629
original statement= if (order == (org.jfree.chart.plot.DatasetRenderingOrder.FORWARD)) {
	int datasetCount = this.datasets.size();
	for (int i = 0 ; i < datasetCount ; i++) {
		org.jfree.chart.renderer.category.CategoryItemRenderer r = getRenderer(i);
		if (r != null) {
			org.jfree.chart.axis.CategoryAxis domainAxis = getDomainAxisForDataset(i);
			org.jfree.chart.axis.ValueAxis rangeAxis = getRangeAxisForDataset(i);
			r.drawAnnotations(g2, dataArea, domainAxis, rangeAxis, org.jfree.chart.util.Layer.BACKGROUND, state);
		} 
	}
	for (int i = 0 ; i < datasetCount ; i++) {
		foundData = (render(g2, dataArea, i, state)) || foundData;
	}
	for (int i = 0 ; i < datasetCount ; i++) {
		org.jfree.chart.renderer.category.CategoryItemRenderer r = getRenderer(i);
		if (r != null) {
			org.jfree.chart.axis.CategoryAxis domainAxis = getDomainAxisForDataset(i);
			org.jfree.chart.axis.ValueAxis rangeAxis = getRangeAxisForDataset(i);
			r.drawAnnotations(g2, dataArea, domainAxis, rangeAxis, org.jfree.chart.util.Layer.FOREGROUND, state);
		} 
	}
} else {
	int datasetCount = this.datasets.size();
	for (int i = datasetCount - 1 ; i >= 0 ; i--) {
		org.jfree.chart.renderer.category.CategoryItemRenderer r = getRenderer(i);
		if (r != null) {
			org.jfree.chart.axis.CategoryAxis domainAxis = getDomainAxisForDataset(i);
			org.jfree.chart.axis.ValueAxis rangeAxis = getRangeAxisForDataset(i);
			r.drawAnnotations(g2, dataArea, domainAxis, rangeAxis, org.jfree.chart.util.Layer.BACKGROUND, state);
		} 
	}
	for (int i = (this.datasets.size()) - 1 ; i >= 0 ; i--) {
		foundData = (render(g2, dataArea, i, state)) || foundData;
	}
	for (int i = datasetCount - 1 ; i >= 0 ; i--) {
		org.jfree.chart.renderer.category.CategoryItemRenderer r = getRenderer(i);
		if (r != null) {
			org.jfree.chart.axis.CategoryAxis domainAxis = getDomainAxisForDataset(i);
			org.jfree.chart.axis.ValueAxis rangeAxis = getRangeAxisForDataset(i);
			r.drawAnnotations(g2, dataArea, domainAxis, rangeAxis, org.jfree.chart.util.Layer.FOREGROUND, state);
		} 
	}
}
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1355
 
operation: INSERT_BEFORE
location= org.jfree.chart.plot.CategoryPlot
line= 2661
original statement= int datasetCount = this.datasets.size()
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1357
 
operation: INSERT_BEFORE
location= org.jfree.chart.plot.CategoryPlot
line= 2662
original statement= for (int i = datasetCount - 1 ; i >= 0 ; i--) {
	org.jfree.chart.renderer.category.CategoryItemRenderer r = getRenderer(i);
	if (r != null) {
		org.jfree.chart.axis.CategoryAxis domainAxis = getDomainAxisForDataset(i);
		org.jfree.chart.axis.ValueAxis rangeAxis = getRangeAxisForDataset(i);
		r.drawAnnotations(g2, dataArea, domainAxis, rangeAxis, org.jfree.chart.util.Layer.BACKGROUND, state);
	} 
}
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1359
 
operation: INSERT_BEFORE
location= org.jfree.chart.plot.CategoryPlot
line= 2663
original statement= org.jfree.chart.renderer.category.CategoryItemRenderer r = getRenderer(i)
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1361
 
operation: INSERT_BEFORE
location= org.jfree.chart.plot.CategoryPlot
line= 2664
original statement= if (r != null) {
	org.jfree.chart.axis.CategoryAxis domainAxis = getDomainAxisForDataset(i);
	org.jfree.chart.axis.ValueAxis rangeAxis = getRangeAxisForDataset(i);
	r.drawAnnotations(g2, dataArea, domainAxis, rangeAxis, org.jfree.chart.util.Layer.BACKGROUND, state);
} 
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1365
 
operation: INSERT_BEFORE
location= org.jfree.chart.plot.CategoryPlot
line= 2665
original statement= org.jfree.chart.axis.CategoryAxis domainAxis = getDomainAxisForDataset(i)
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1367
 
operation: INSERT_BEFORE
location= org.jfree.chart.plot.CategoryPlot
line= 2666
original statement= org.jfree.chart.axis.ValueAxis rangeAxis = getRangeAxisForDataset(i)
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1369
 
operation: INSERT_BEFORE
location= org.jfree.chart.plot.CategoryPlot
line= 2667
original statement= r.drawAnnotations(g2, dataArea, domainAxis, rangeAxis, org.jfree.chart.util.Layer.BACKGROUND, state)
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1370
 
operation: DELETE
location= org.jfree.chart.plot.CategoryPlot
line= 2672
original statement= for (int i = (this.datasets.size()) - 1 ; i >= 0 ; i--) {
	foundData = (render(g2, dataArea, i, state)) || foundData;
}
fixed statement= for (int i = (this.datasets.size()) - 1 ; i >= 0 ; i--) {
	foundData = (render(g2, dataArea, i, state)) || foundData;
}
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1371
 
operation: INSERT_BEFORE
location= org.jfree.chart.plot.CategoryPlot
line= 2672
original statement= for (int i = (this.datasets.size()) - 1 ; i >= 0 ; i--) {
	foundData = (render(g2, dataArea, i, state)) || foundData;
}
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1372
 
operation: DELETE
location= org.jfree.chart.plot.CategoryPlot
line= 2673
original statement= foundData = (render(g2, dataArea, i, state)) || foundData
fixed statement= foundData = (render(g2, dataArea, i, state)) || foundData
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 1373
 
operation: INSERT_BEFORE
location= org.jfree.chart.plot.CategoryPlot
line= 2673
original statement= foundData = (render(g2, dataArea, i, state)) || foundData
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
2015-08-25 19:40:04,417 INFO main - 
----stats: 
2015-08-25 19:40:04,417 INFO main - 
spaces navigation: [0]: {}
#gen: 0
#patches: 113
#RightCompilation: 1967
#WrongCompilation: 471
#FailingTestCaseExecution: 1968
#RegressionTestExecution: 146
#TestcasesExecutedval1: 70848
#TestcasesExecutedval2: 237250
#FailingTestCase: 36
#RegressionTestCases: 1625
#OfAppliedOp: 0
#NotAppliedOp: 0
#InmutatedGen: 0
#unfinishValidation: 0
#ing {}
#untilcompile {}
2015-08-25 19:40:04,417 INFO fr.inria.main.AbstractMain - Time Total(ms): 2730042


Node: graphene-21.nancy.grid5000.fr


Date: Tue Aug 25 21:40:04 CEST 2015


