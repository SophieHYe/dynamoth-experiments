export PATH="/home/tdurieux/defects4j/framework/bin:$PATH";export JAVA_TOOL_OPTIONS=-Dfile.encoding=UTF8;export PATH="/usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/:$PATH";cp -r /home/tdurieux/projects/math/math_101 /tmp/math_101_Genprog;cd /tmp/math_101_Genprog;defects4j compile;mkdir lib/;cp -r /home/tdurieux/defects4j/framework/projects/lib/* lib/;cp -r /home/tdurieux/defects4j/framework/projects/Math/lib/* lib/;find . -type f -name "package-info.java" -delete;
/home/tdurieux/defects4j-repair/src/python/core/../../../results/2015-august/Math/101/Genprog/result
cd /tmp/math_101_Genprog;export JAVA_TOOL_OPTIONS=-Dfile.encoding=UTF8;export PATH="/usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/:$PATH";time java  -cp /home/tdurieux/defects4j-repair/src/python/core/../../..//libs/astor.jar fr.inria.main.evolution.MainjGenProg -mode statement -location . -dependencies lib/ -failing org.apache.commons.math.complex.ComplexFormatTest:org.apache.commons.math.complex.FrenchComplexFormatTest: -package org.apache.commons -jvm4testexecution /usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/ -javacompliancelevel 3 -maxgen 1000000 -seed 10 -maxtime 60  -scope local  -stopfirst true -flthreshold 0.1 -population 1 -srcjavafolder src/java/ -srctestfolder src/test/ -binjavafolder target/classes/ -bintestfolder target/test-classes/;echo "

Node: `hostname`
";echo "
Date: `date`
";rm -rf /tmp/math_101_Genprog;

2015-08-24 21:14:34,355 INFO main - End Repair Loops: NOT Found solution
2015-08-24 21:14:34,355 INFO main - 
Number solutions:0
2015-08-24 21:14:34,355 INFO main - 
All variants:
2015-08-24 21:14:34,355 INFO main - f 2.0, [Variant id: 54213, #gens: 47, #ops: 0, parent:-]
2015-08-24 21:14:34,355 INFO main - --Space: LOCAL
org.apache.commons.math.complex.ComplexFormat=131|,
2015-08-24 21:14:34,355 INFO main - 
----stats: 
2015-08-24 21:14:34,355 INFO main - 
spaces navigation: [58]: {(CtInvocationImpl| size: 131| compiles| LOCAL| INSERT_AFTER) =275, (CtBreakImpl| size: 131| alreadyanalyzed| LOCAL| INSERT_BEFORE) =85611, (CtLocalVariableImpl| size: 131| alreadyanalyzed| LOCAL| INSERT_AFTER) =885504, (CtInvocationImpl| size: 131| notcompiles| LOCAL| INSERT_BEFORE) =284, (CtReturnImpl| size: 131| notcompiles| LOCAL| INSERT_AFTER) =410, (CtSwitchImpl| size: 1| alreadyanalyzed| LOCAL| REPLACE) =468, (CtAssignmentImpl| size: 12| notcompiles| LOCAL| REPLACE) =53, (CtBreakImpl| size: 131| notcompiles| LOCAL| INSERT_AFTER) =51, (CtSwitchImpl| size: 131| compiles| LOCAL| INSERT_BEFORE) =61, (CtBreakImpl| size: 131| compiles| LOCAL| INSERT_AFTER) =61, (CtReturnImpl| size: 23| compiles| LOCAL| REPLACE) =48, (CtInvocationImpl| size: 131| alreadyanalyzed| LOCAL| INSERT_AFTER) =317001, (CtBreakImpl| size: 131| compiles| LOCAL| INSERT_BEFORE) =61, (CtInvocationImpl| size: 39| compiles| LOCAL| REPLACE) =48, (CtLocalVariableImpl| size: 28| compiles| LOCAL| REPLACE) =349, (CtAssignmentImpl| size: 131| notcompiles| LOCAL| INSERT_AFTER) =390, (CtIfImpl| size: 18| notcompiles| LOCAL| REPLACE) =119, (CtInvocationImpl| size: 131| notcompiles| LOCAL| INSERT_AFTER) =285, (CtReturnImpl| size: 131| alreadyanalyzed| LOCAL| INSERT_AFTER) =329901, (CtAssignmentImpl| size: 12| compiles| LOCAL| REPLACE) =24, (CtIfImpl| size: 131| compiles| LOCAL| INSERT_BEFORE) =518, (CtInvocationImpl| size: 39| notcompiles| LOCAL| REPLACE) =110, (CtIfImpl| size: 131| notcompiles| LOCAL| INSERT_BEFORE) =490, (CtAssignmentImpl| size: 131| notcompiles| LOCAL| INSERT_BEFORE) =389, (CtAssignmentImpl| size: 131| alreadyanalyzed| LOCAL| INSERT_BEFORE) =357662, (CtReturnImpl| size: 131| notcompiles| LOCAL| INSERT_BEFORE) =410, (CtIfImpl| size: 131| alreadyanalyzed| LOCAL| INSERT_BEFORE) =456627, (CtLocalVariableImpl| size: 131| alreadyanalyzed| LOCAL| INSERT_BEFORE) =886078, (CtReturnImpl| size: 131| compiles| LOCAL| INSERT_BEFORE) =375, (CtLocalVariableImpl| size: 131| notcompiles| LOCAL| INSERT_BEFORE) =825, (CtAssignmentImpl| size: 131| compiles| LOCAL| INSERT_BEFORE) =395, (CtIfImpl| size: 131| alreadyanalyzed| LOCAL| INSERT_AFTER) =452092, (CtAssignmentImpl| size: 131| compiles| LOCAL| INSERT_AFTER) =394, (CtSwitchImpl| size: 131| notcompiles| LOCAL| INSERT_AFTER) =51, (CtIfImpl| size: 131| notcompiles| LOCAL| INSERT_AFTER) =490, (CtLocalVariableImpl| size: 131| notcompiles| LOCAL| INSERT_AFTER) =825, (CtReturnImpl| size: 23| notcompiles| LOCAL| REPLACE) =65, (CtLocalVariableImpl| size: 28| alreadyanalyzed| LOCAL| REPLACE) =205384, (CtAssignmentImpl| size: 12| alreadyanalyzed| LOCAL| REPLACE) =37274, (CtIfImpl| size: 131| compiles| LOCAL| INSERT_AFTER) =518, (CtInvocationImpl| size: 131| compiles| LOCAL| INSERT_BEFORE) =276, (CtAssignmentImpl| size: 131| alreadyanalyzed| LOCAL| INSERT_AFTER) =346261, (CtIfImpl| size: 18| compiles| LOCAL| REPLACE) =34, (CtInvocationImpl| size: 131| alreadyanalyzed| LOCAL| INSERT_BEFORE) =329462, (CtReturnImpl| size: 131| compiles| LOCAL| INSERT_AFTER) =375, (CtInvocationImpl| size: 39| alreadyanalyzed| LOCAL| REPLACE) =109149, (CtLocalVariableImpl| size: 131| compiles| LOCAL| INSERT_BEFORE) =844, (CtLocalVariableImpl| size: 131| compiles| LOCAL| INSERT_AFTER) =844, (CtSwitchImpl| size: 131| alreadyanalyzed| LOCAL| INSERT_AFTER) =54891, (CtSwitchImpl| size: 131| notcompiles| LOCAL| INSERT_BEFORE) =51, (CtReturnImpl| size: 131| alreadyanalyzed| LOCAL| INSERT_BEFORE) =329271, (CtBreakImpl| size: 131| alreadyanalyzed| LOCAL| INSERT_AFTER) =82673, (CtSwitchImpl| size: 131| alreadyanalyzed| LOCAL| INSERT_BEFORE) =57528, (CtReturnImpl| size: 23| alreadyanalyzed| LOCAL| REPLACE) =67622, (CtSwitchImpl| size: 131| compiles| LOCAL| INSERT_AFTER) =61, (CtBreakImpl| size: 131| notcompiles| LOCAL| INSERT_BEFORE) =51, (CtBreakImpl| size: 3| alreadyanalyzed| LOCAL| REPLACE) =1821, (CtIfImpl| size: 18| alreadyanalyzed| LOCAL| REPLACE) =70544}
#gen: 27106
#patches: 0
#RightCompilation: 63
#WrongCompilation: 27043
#FailingTestCaseExecution: 64
#RegressionTestExecution: 0
#TestcasesExecutedval1: 4480
#TestcasesExecutedval2: 0
#FailingTestCase: 70
#RegressionTestCases: 0
#OfAppliedOp: 27106
#NotAppliedOp: 0
#InmutatedGen: 58811
#unfinishValidation: 0
#ing {CtLocalVariableImpl=30342, CtSwitchImpl=1916, CtAssignmentImpl=12345, CtReturnImpl=11639, CtInvocationImpl=11091, CtBreakImpl=2686, CtIfImpl=15898}
#untilcompile {1=1210, 2=724, 2203=1, 3=551, 4=341, 5=238, 6=171, 2207=1, 7=161, 8=112, 9=75, 10=67, 11=54, 12=267, 13=86, 14=58, 15=36, 17=36, 16=39, 19=72, 18=331, 21=51, 20=51, 23=228, 22=41, 25=35, 24=67, 27=25, 26=37, 29=45, 28=580, 31=46, 30=59, 34=23, 35=37, 32=38, 33=16, 38=15, 2239=1, 39=222, 36=27, 37=17, 42=25, 43=23, 40=70, 41=49, 2230=1, 46=82, 2231=1, 47=20, 44=21, 45=16, 51=62, 50=10, 49=17, 48=15, 2223=1, 55=9, 54=9, 53=12, 52=11, 2220=1, 59=10, 58=15, 57=38, 2208=1, 56=51, 63=14, 62=25, 61=2, 60=10, 2268=1, 68=13, 69=13, 70=9, 2270=1, 71=7, 64=7, 65=5, 66=3, 67=43, 76=2, 77=2, 78=10, 79=14, 72=2, 73=4, 74=16, 75=3, 85=4, 84=8, 87=5, 86=4, 81=2, 80=7, 83=4, 82=3, 93=3, 92=5, 95=3, 94=3, 89=2, 88=3, 90=4, 102=2, 103=3, 100=1, 101=2, 98=1, 99=4, 96=6, 110=2, 111=2, 108=3, 109=1, 2290=1, 106=7, 2291=1, 107=2, 104=4, 105=1, 119=1, 2286=1, 117=3, 116=3, 115=2, 113=5, 112=2, 127=3, 125=1, 120=1, 137=14, 136=5, 2067=1, 139=11, 138=5, 141=7, 140=10, 143=185, 142=2, 129=2, 128=2, 131=2480, 2077=1, 133=19, 132=55, 135=12, 134=55, 152=11, 2049=1, 153=5, 154=196, 155=15, 156=4, 157=8, 158=4, 159=458, 144=11, 145=6, 146=10, 147=1, 148=6, 149=219, 150=12, 151=4, 171=57, 170=175, 169=3, 168=2, 2103=1, 175=3, 174=5, 173=10, 172=21, 163=5, 2106=1, 162=17, 161=34, 160=13, 167=15, 166=14, 2109=1, 165=5, 164=7, 186=2, 187=69, 184=5, 185=6, 190=8, 2086=1, 191=2, 188=35, 189=14, 178=4, 179=4, 176=3, 177=76, 182=61, 2094=1, 183=10, 2092=1, 180=3, 2133=1, 205=13, 204=2, 207=4, 206=2, 2129=1, 201=3, 200=15, 202=1, 197=2, 196=4, 199=10, 198=33, 193=20, 192=3, 195=4, 194=6, 220=1, 221=13, 222=3, 223=3, 216=7, 217=9, 218=2, 212=1, 2124=1, 213=2, 215=4, 208=3, 209=8, 210=16, 211=7, 239=2, 238=4, 237=2, 2165=1, 236=1, 2163=1, 233=5, 232=1, 230=1, 2174=1, 229=1, 228=9, 227=8, 226=12, 225=1, 224=1, 250=2, 251=1, 248=1, 249=3, 247=2, 244=3, 245=2, 242=3, 243=2, 275=6, 274=137, 272=2, 279=2, 278=3, 277=3, 276=1, 283=6, 281=5, 280=169, 287=1, 286=12, 285=108, 259=1, 262=1132, 263=25, 260=1, 261=1, 266=4, 267=1, 264=1, 265=25, 271=1, 269=4, 305=4, 304=4, 2474=1, 306=5, 309=3, 308=59, 311=4, 310=7, 313=66, 312=1, 315=1, 2467=1, 314=15, 317=1, 316=6, 319=24, 318=63, 288=3, 289=3, 290=314, 291=10, 292=22, 293=5, 294=1, 295=2, 2495=1, 2480=1, 297=20, 298=18, 299=2, 300=1, 301=115, 302=51, 303=20, 343=3, 342=9, 341=24, 340=6, 338=6, 337=2, 336=29, 349=1, 348=4, 347=14, 346=10, 344=2, 326=15, 327=2, 324=14, 325=14, 322=6, 323=2, 320=13, 321=6, 334=2, 335=1, 332=4, 333=4, 330=11, 331=13, 328=2, 329=58, 372=1, 375=6, 374=1, 369=3, 368=3, 371=2, 370=1, 381=1, 380=1, 383=1, 382=2, 377=2, 376=1, 357=12, 358=4, 359=8, 352=10, 353=4, 354=3, 364=7, 365=3, 366=2, 367=1, 360=4, 361=2, 362=2, 363=3, 411=117, 408=2, 414=3, 415=2, 412=3, 402=2, 403=2, 400=1, 401=2, 405=88, 395=2, 394=13, 393=574, 392=2, 398=2, 397=1, 396=16, 386=5, 385=2, 384=1, 391=2, 388=1, 440=1, 441=5, 442=3, 443=1, 444=47, 445=7, 446=3, 447=2, 432=58, 433=38, 434=17, 435=4, 436=3, 437=2, 439=59, 425=1, 424=13, 426=2, 429=15, 428=19, 431=2, 417=9, 416=76, 419=6, 418=2, 421=210, 423=14, 422=8, 478=13, 479=3, 476=1, 2373=1, 477=13, 474=5, 475=1, 472=21, 473=7, 470=2, 471=6, 468=7, 466=1, 467=17, 464=1, 463=1, 462=17, 461=12, 460=38, 459=2, 458=2, 457=10, 456=5, 455=15, 454=3, 453=3, 452=6, 451=11, 450=20, 449=36, 448=1, 509=2, 2407=1, 511=1, 505=2, 506=1, 507=5, 500=5, 501=6, 502=1, 503=2, 496=3, 497=2, 492=1, 495=8, 494=1, 489=4, 488=7, 491=2, 490=11, 485=2, 484=3, 487=1, 486=1, 481=2, 480=1, 483=12, 482=2, 550=1, 551=2, 548=6, 547=56, 544=1, 545=3, 558=2, 559=10, 556=3, 557=2, 554=10, 555=7, 552=133, 553=4, 567=1, 566=3, 565=14, 564=36, 563=52, 561=2, 2728=1, 560=13, 575=30, 573=1, 572=5, 571=5, 570=50, 569=1, 516=1, 517=3, 518=5, 519=3, 512=1, 513=1, 514=1, 524=278, 525=9, 526=1, 527=13, 522=1, 523=1, 535=2, 534=1, 529=1, 528=1, 531=2, 2692=1, 543=2, 542=79, 537=3, 536=49, 539=5, 610=5, 611=5, 608=10, 609=11, 614=3, 615=3, 612=4, 619=7, 616=5, 622=1, 620=5, 621=7, 627=6, 626=6, 624=1, 631=3, 630=4, 628=2, 635=1, 633=4, 632=5, 639=1, 638=1, 637=5, 576=5, 577=1, 578=5, 579=1, 580=45, 581=13, 582=13, 583=3, 585=2, 586=19, 587=11, 588=1, 590=2, 591=23, 593=11, 592=4, 595=2, 594=2, 599=3, 598=18, 601=1, 600=1, 603=16, 602=4, 605=8, 604=7, 606=2, 687=1, 686=7, 685=17, 684=1, 683=54, 682=1, 681=1, 680=1, 679=3, 678=30, 676=5, 674=2, 673=39, 672=1, 703=1, 700=1, 701=24, 698=1, 699=1, 696=15, 697=2, 694=23, 695=23, 693=1, 690=7, 691=7, 688=1, 653=3, 655=135, 654=2, 649=2, 651=2, 650=1, 645=2, 644=2, 647=5, 640=1, 642=2, 668=2, 670=2, 671=1, 2560=1, 665=2, 667=32, 660=1, 663=1, 656=12, 657=2, 658=9, 659=1, 747=4, 746=3, 745=7, 751=6, 750=10, 749=1, 748=1, 739=2, 737=3, 736=4, 743=2, 742=3, 741=4, 740=12, 762=3, 763=3, 767=3, 764=1, 752=3, 753=1, 758=1, 756=1, 757=4, 713=8, 712=14, 714=4, 717=10, 716=2, 719=3, 718=8, 705=1, 704=1, 707=6, 706=33, 2650=1, 709=2, 708=3, 711=30, 729=6, 730=3, 732=3, 733=5, 734=16, 735=2, 720=1, 722=24, 723=9, 724=7, 725=3, 726=1, 727=1, 821=3, 822=8, 816=7, 819=3, 829=1, 831=1, 825=19, 827=7, 826=19, 804=18, 805=1, 807=2, 802=1, 803=1, 813=1, 814=31, 815=4, 808=2, 809=22, 810=4, 791=1, 790=1, 789=3, 788=1, 787=5, 786=82, 785=1, 799=4, 798=25, 797=2, 796=4, 794=1, 793=1, 792=1, 774=2, 775=4, 773=6, 770=2, 771=2, 768=4, 769=2, 780=6, 778=1, 779=2, 777=1, 881=5, 880=1, 883=6, 882=2, 885=1, 884=3, 887=2, 888=1, 890=1, 893=2, 892=2, 864=1, 865=11, 866=6, 867=2, 868=2, 869=1, 870=5, 871=5, 872=5, 873=3, 876=4, 877=1, 878=5, 879=1, 850=4, 849=6, 848=11, 855=8, 854=7, 853=10, 852=2, 858=3, 857=2, 856=2, 862=3, 861=1, 860=13, 834=1, 835=2, 832=17, 833=2, 838=3, 839=5, 837=16, 842=14, 843=1, 840=3, 841=1, 846=2, 847=2, 844=6, 845=1, 956=8, 957=1, 958=6, 959=2, 952=3, 953=1, 954=1, 955=1, 950=2, 951=1, 945=36, 946=4, 947=3, 941=2, 940=14, 943=2, 936=1, 939=2, 938=1, 932=2, 935=13, 929=7, 928=1, 931=1, 927=1, 925=1, 922=1, 923=2, 920=3, 918=2, 2831=1, 916=4, 917=36, 912=1, 911=2, 909=2, 907=1, 906=2, 905=3, 904=4, 2847=1, 903=2, 902=2, 901=1, 900=1, 899=2, 897=1, 896=1, 1016=1, 1019=2, 1020=1, 1022=2, 1008=1, 1009=2, 1010=2, 1011=3, 1012=7, 1014=4, 1001=2, 1000=1, 1003=5, 1002=4, 1005=1, 1004=1, 1007=3, 992=3, 994=1, 997=3, 996=7, 999=1, 986=5, 987=4, 984=8, 985=3, 991=3, 979=6, 976=3, 977=2, 982=1, 983=4, 980=5, 981=2, 971=3, 970=1, 969=1, 968=10, 975=8, 974=3, 973=12, 963=16, 967=1, 966=1, 964=2, 1100=2, 1101=1, 1102=2, 1096=1, 1099=6, 1094=12, 1095=1, 1088=2, 1089=2, 1091=1, 1117=1, 1116=2, 1119=2, 1113=2, 1115=3, 1108=1, 1111=3, 1110=3, 1105=1, 1104=4, 1106=4, 1134=2, 1135=3, 1132=4, 1133=8, 1130=1, 1128=2, 1127=5, 3324=1, 1122=10, 1123=2, 1151=2, 1150=1, 1149=2, 1147=2, 1146=1, 1145=4, 1144=1, 1143=3, 1141=3, 1140=1, 1139=2, 1138=3, 1136=1, 1032=1, 1034=1, 1035=3, 1036=2, 1038=1, 1024=2, 1025=4, 1026=2, 1030=4, 1031=1, 1049=4, 1048=20, 1051=3, 1054=2, 1041=1, 1043=2, 1042=2, 1045=1, 1044=1, 1046=1, 3214=1, 1066=7, 1064=1, 1065=1, 1070=1, 1071=10, 1069=1, 1058=2, 1059=2, 1060=5, 1061=1, 1083=5, 1081=1, 1087=3, 1084=4, 1072=1, 1079=1, 1078=4, 1077=1, 1076=14, 1220=1, 1222=2, 1219=3, 1218=3, 1230=3, 1225=7, 1226=1, 1236=1, 1237=3, 1233=1, 1234=1, 1235=3, 1244=1, 1246=1, 1247=1, 1241=1, 1242=4, 1243=3, 1254=2, 1253=3, 1252=1, 1249=1, 1248=1, 1263=1, 1260=2, 1259=5, 1258=6, 1257=1, 1256=1, 1270=1, 1271=3, 1269=2, 1264=2, 1265=2, 1277=1, 1274=1, 1275=3, 1153=1, 1155=2, 1156=2, 1159=1, 1158=1, 1161=1, 1163=1, 1162=2, 1168=2, 1171=1, 1173=4, 1177=1, 1179=9, 1180=1, 1182=2, 1183=2, 1187=1, 1186=1, 1184=1, 1191=5, 1194=2, 1198=2, 3125=1, 1197=4, 1202=4, 1203=3, 1201=2, 1207=7, 1211=1, 1208=1, 1209=5, 1215=1, 1212=1, 1213=1, 1374=2, 1372=2, 1369=1, 1368=2, 1367=1, 1366=1, 1362=1, 1361=3, 1360=1, 1356=2, 1357=1, 1353=1, 1350=2, 1351=1, 1349=1, 1347=2, 1405=3, 1406=3, 1403=1, 1402=1, 1395=2, 1394=2, 1389=1, 1384=1, 1385=2, 1380=1, 1383=2, 1376=1, 1378=4, 1379=1, 1304=2, 1311=1, 1310=8, 1308=1, 1298=3, 1300=1, 1290=2, 1288=2, 1289=3, 1292=1, 1293=1, 1283=1, 1281=2, 1286=1, 1287=1, 1284=2, 1285=2, 1336=1, 1339=2, 1338=6, 1341=1, 1340=3, 1328=4, 1333=2, 1320=1, 1322=4, 1324=1, 1327=1, 1314=2, 1494=2, 1492=2, 1500=1, 1498=1, 1496=3, 1477=1, 3420=1, 1474=2, 1487=1, 1485=1, 1484=1, 1481=2, 1526=1, 1527=2, 1520=3, 1521=2, 1533=1, 1534=1, 1535=1, 1528=1, 1531=1, 1509=1, 1511=1, 1504=2, 1516=1, 1519=1, 1512=1, 1515=2, 1425=1, 1430=2, 1431=1, 1429=1, 1438=1, 1436=1, 1409=1, 1415=1, 1414=1, 1412=2, 1418=1, 1423=1, 1459=2, 1463=1, 1464=3, 1465=1, 3362=1, 1467=2, 1469=2, 1441=3, 1442=1, 1446=1, 1451=1, 1450=1, 1642=1, 1641=1, 1646=1, 1635=1, 1636=1, 1663=1, 1660=1, 1648=1, 1654=1, 1653=1, 1609=1, 1613=1, 1629=2, 1618=1, 1621=1, 1623=1, 1582=1, 1579=1, 1575=1, 1572=4, 1573=3, 1597=1, 1594=1, 1593=1, 1584=1, 1548=2, 1550=1, 1544=2, 1546=1, 1547=1, 1540=1, 1543=1, 1536=3, 1537=1, 1567=1, 1561=2, 1563=1, 1553=1, 1554=1, 1766=1, 1770=1, 1772=3, 1782=1, 1784=1, 1790=1, 1731=2, 1732=1, 1739=1, 1743=1, 1744=1, 1745=1, 1749=1, 1752=1, 1754=1, 1757=1, 1759=1, 1702=1, 1698=1, 1707=1, 1713=1, 1669=1, 1679=1, 1675=2, 1687=1, 1693=1, 1897=1, 1885=1, 1867=1, 1864=1, 1868=1, 1859=1, 1862=1, 1852=1, 1851=1, 1844=1, 1841=1, 1826=1, 3978=1, 1808=1, 1806=1, 1800=1, 1801=1, 1798=1, 1799=1, 1795=1, 1793=1, 2032=1, 2041=1, 2020=1, 2022=1, 2024=1, 2004=1, 2005=1, 2010=1, 1989=2, 1988=1, 1974=1, 1978=1, 1959=1, 1943=1, 1936=1, 1947=1, 1921=1, 1933=1, 1931=1, 1928=1}
2015-08-24 21:14:34,356 INFO main - Time Evolution(ms): 3660033
2015-08-24 21:14:34,356 INFO fr.inria.main.AbstractMain - Time Total(ms): 3679589


Node: graphene-26.nancy.grid5000.fr


Date: Mon Aug 24 23:14:34 CEST 2015


