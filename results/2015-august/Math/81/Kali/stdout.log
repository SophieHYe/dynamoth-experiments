export PATH="/home/tdurieux/defects4j/framework/bin:$PATH";export JAVA_TOOL_OPTIONS=-Dfile.encoding=UTF8;export PATH="/usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/:$PATH";cp -r /home/tdurieux/projects/math/math_81 /tmp/math_81_Kali;cd /tmp/math_81_Kali;defects4j compile;mkdir lib/;cp -r /home/tdurieux/defects4j/framework/projects/lib/* lib/;cp -r /home/tdurieux/defects4j/framework/projects/Math/lib/* lib/;find . -type f -name "package-info.java" -delete;
/home/tdurieux/defects4j-repair/src/python/core/../../../results/2015-august/Math/81/Kali/result
cd /tmp/math_81_Kali;export JAVA_TOOL_OPTIONS=-Dfile.encoding=UTF8;TZ="America/New_York"; export TZexport PATH="/usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/:$PATH";time java  -cp /home/tdurieux/defects4j-repair/src/python/core/../../..//libs/astor.jar fr.inria.main.evolution.MainjGenProg -mode statement-remove -location . -dependencies lib/ -failing org.apache.commons.math.linear.EigenDecompositionImplTest: -package org.apache.commons -jvm4testexecution /usr/lib/jvm/java-1.7.0-openjdk-amd64/bin/ -javacompliancelevel 5 -maxgen 1000000 -seed 10 -maxtime 60  -scope local  -stopfirst false -flthreshold 0 -population 1 -srcjavafolder src/main/java/ -srctestfolder src/test/java/ -binjavafolder target/classes/ -bintestfolder target/test-classes/;echo "

Node: `hostname`
";echo "
Date: `date`
";rm -rf /tmp/math_81_Kali;

2015-08-25 18:21:15,549 INFO main - End Repair Loops: Found solution
2015-08-25 18:21:15,549 INFO main - Solution stored at: ./outputMutation//MainjGenProg-.//src/
2015-08-25 18:21:15,549 INFO main - 
Number solutions:18
2015-08-25 18:21:15,549 INFO main - f (sol): 0.0, [Variant id: 5 (SOL) , #gens: 944, #ops: 1, parent:1]
2015-08-25 18:21:15,549 INFO main - f (sol): 0.0, [Variant id: 7 (SOL) , #gens: 944, #ops: 1, parent:1]
2015-08-25 18:21:15,549 INFO main - f (sol): 0.0, [Variant id: 11 (SOL) , #gens: 944, #ops: 1, parent:1]
2015-08-25 18:21:15,549 INFO main - f (sol): 0.0, [Variant id: 13 (SOL) , #gens: 944, #ops: 1, parent:1]
2015-08-25 18:21:15,549 INFO main - f (sol): 0.0, [Variant id: 15 (SOL) , #gens: 944, #ops: 1, parent:1]
2015-08-25 18:21:15,549 INFO main - f (sol): 0.0, [Variant id: 17 (SOL) , #gens: 944, #ops: 1, parent:1]
2015-08-25 18:21:15,549 INFO main - f (sol): 0.0, [Variant id: 18 (SOL) , #gens: 944, #ops: 1, parent:1]
2015-08-25 18:21:15,549 INFO main - f (sol): 0.0, [Variant id: 21 (SOL) , #gens: 944, #ops: 1, parent:1]
2015-08-25 18:21:15,549 INFO main - f (sol): 0.0, [Variant id: 22 (SOL) , #gens: 944, #ops: 1, parent:1]
2015-08-25 18:21:15,549 INFO main - f (sol): 0.0, [Variant id: 23 (SOL) , #gens: 944, #ops: 1, parent:1]
2015-08-25 18:21:15,549 INFO main - f (sol): 0.0, [Variant id: 25 (SOL) , #gens: 944, #ops: 1, parent:1]
2015-08-25 18:21:15,549 INFO main - f (sol): 0.0, [Variant id: 26 (SOL) , #gens: 944, #ops: 1, parent:1]
2015-08-25 18:21:15,550 INFO main - f (sol): 0.0, [Variant id: 27 (SOL) , #gens: 944, #ops: 1, parent:1]
2015-08-25 18:21:15,550 INFO main - f (sol): 0.0, [Variant id: 40 (SOL) , #gens: 944, #ops: 1, parent:1]
2015-08-25 18:21:15,550 INFO main - f (sol): 0.0, [Variant id: 46 (SOL) , #gens: 944, #ops: 1, parent:1]
2015-08-25 18:21:15,550 INFO main - f (sol): 0.0, [Variant id: 106 (SOL) , #gens: 944, #ops: 1, parent:1]
2015-08-25 18:21:15,550 INFO main - f (sol): 0.0, [Variant id: 109 (SOL) , #gens: 944, #ops: 1, parent:1]
2015-08-25 18:21:15,550 INFO main - f (sol): 0.0, [Variant id: 110 (SOL) , #gens: 944, #ops: 1, parent:1]
2015-08-25 18:21:15,550 INFO main - 
All variants:
2015-08-25 18:21:15,550 INFO main - f 1.0, [Variant id: 1, #gens: 944, #ops: 0, parent:-]
2015-08-25 18:21:15,550 INFO main - 
Solution details
2015-08-25 18:21:15,550 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 18:21:15,550 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 18:21:15,550 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 18:21:15,550 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 18:21:15,550 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 18:21:15,550 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 18:21:15,550 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 18:21:15,550 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 18:21:15,550 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 18:21:15,550 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 18:21:15,550 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 18:21:15,550 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 18:21:15,550 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 18:21:15,550 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 18:21:15,550 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 18:21:15,551 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 18:21:15,551 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 18:21:15,551 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 18:21:15,551 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 18:21:15,551 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtReturnImpl (CtIfImpl != RootElement)null
2015-08-25 18:21:15,551 WARN spoon.support.StandardEnvironment - warning: ignoring inconsistent parent for CtCodeSnippetExpressionImpl (CtIfImpl != RootElement)null
2015-08-25 18:21:15,551 INFO main - 
 --SOLUTIONS DESCRIPTION--

 ----
ProgramVariant 5
 
operation: INSERT_BEFORE
location= org.apache.commons.math.linear.EigenDecompositionImpl
line= 1526
original statement= tType = -5
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 7
 
operation: INSERT_BEFORE
location= org.apache.commons.math.linear.EigenDecompositionImpl
line= 1527
original statement= double s = 0.25 * (dMin)
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 11
 
operation: INSERT_BEFORE
location= org.apache.commons.math.linear.EigenDecompositionImpl
line= 1531
original statement= double b1 = work[(np - 2)]
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 13
 
operation: INSERT_BEFORE
location= org.apache.commons.math.linear.EigenDecompositionImpl
line= 1532
original statement= double b2 = work[(np - 6)]
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 15
 
operation: INSERT_BEFORE
location= org.apache.commons.math.linear.EigenDecompositionImpl
line= 1533
original statement= final double gam = dN2
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 17
 
operation: INSERT_BEFORE
location= org.apache.commons.math.linear.EigenDecompositionImpl
line= 1534
original statement= if (((work[(np - 8)]) > b2) || ((work[(np - 4)]) > b1)) {
	return ;
} 
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 18
 
operation: REPLACE
location= org.apache.commons.math.linear.EigenDecompositionImpl
line= 1534
original statement= if (((work[(np - 8)]) > b2) || ((work[(np - 4)]) > b1)) {
	return ;
} 
fixed statement= if (true) {
	return ;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 21
 
operation: INSERT_BEFORE
location= org.apache.commons.math.linear.EigenDecompositionImpl
line= 1537
original statement= double a2 = ((work[(np - 8)]) / b2) * (1 + ((work[(np - 4)]) / b1))
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 22
 
operation: DELETE
location= org.apache.commons.math.linear.EigenDecompositionImpl
line= 1540
original statement= if ((end - start) > 2) {
	b2 = (work[(nn - 13)]) / (work[(nn - 15)]);
	a2 = a2 + b2;
	for (int i4 = nn - 17 ; i4 >= (((4 * start) + 2) + (pingPong)) ; i4 -= 4) {
		if (b2 == 0.0) {
			break;
		} 
		b1 = b2;
		if ((work[i4]) > (work[(i4 - 2)])) {
			return ;
		} 
		b2 = b2 * ((work[i4]) / (work[(i4 - 2)]));
		a2 = a2 + b2;
		if (((100 * (java.lang.Math.max(b2, b1))) < a2) || (cnst1 < a2)) {
			break;
		} 
	}
	a2 = cnst3 * a2;
} 
fixed statement= if ((end - start) > 2) {
	b2 = (work[(nn - 13)]) / (work[(nn - 15)]);
	a2 = a2 + b2;
	for (int i4 = nn - 17 ; i4 >= (((4 * start) + 2) + (pingPong)) ; i4 -= 4) {
		if (b2 == 0.0) {
			break;
		} 
		b1 = b2;
		if ((work[i4]) > (work[(i4 - 2)])) {
			return ;
		} 
		b2 = b2 * ((work[i4]) / (work[(i4 - 2)]));
		a2 = a2 + b2;
		if (((100 * (java.lang.Math.max(b2, b1))) < a2) || (cnst1 < a2)) {
			break;
		} 
	}
	a2 = cnst3 * a2;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 23
 
operation: INSERT_BEFORE
location= org.apache.commons.math.linear.EigenDecompositionImpl
line= 1540
original statement= if ((end - start) > 2) {
	b2 = (work[(nn - 13)]) / (work[(nn - 15)]);
	a2 = a2 + b2;
	for (int i4 = nn - 17 ; i4 >= (((4 * start) + 2) + (pingPong)) ; i4 -= 4) {
		if (b2 == 0.0) {
			break;
		} 
		b1 = b2;
		if ((work[i4]) > (work[(i4 - 2)])) {
			return ;
		} 
		b2 = b2 * ((work[i4]) / (work[(i4 - 2)]));
		a2 = a2 + b2;
		if (((100 * (java.lang.Math.max(b2, b1))) < a2) || (cnst1 < a2)) {
			break;
		} 
	}
	a2 = cnst3 * a2;
} 
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 25
 
operation: REPLACE
location= org.apache.commons.math.linear.EigenDecompositionImpl
line= 1540
original statement= if ((end - start) > 2) {
	b2 = (work[(nn - 13)]) / (work[(nn - 15)]);
	a2 = a2 + b2;
	for (int i4 = nn - 17 ; i4 >= (((4 * start) + 2) + (pingPong)) ; i4 -= 4) {
		if (b2 == 0.0) {
			break;
		} 
		b1 = b2;
		if ((work[i4]) > (work[(i4 - 2)])) {
			return ;
		} 
		b2 = b2 * ((work[i4]) / (work[(i4 - 2)]));
		a2 = a2 + b2;
		if (((100 * (java.lang.Math.max(b2, b1))) < a2) || (cnst1 < a2)) {
			break;
		} 
	}
	a2 = cnst3 * a2;
} 
fixed statement= if (false) {
	b2 = (work[(nn - 13)]) / (work[(nn - 15)]);
	a2 = a2 + b2;
	for (int i4 = nn - 17 ; i4 >= (((4 * start) + 2) + (pingPong)) ; i4 -= 4) {
		if (b2 == 0.0) {
			break;
		} 
		b1 = b2;
		if ((work[i4]) > (work[(i4 - 2)])) {
			return ;
		} 
		b2 = b2 * ((work[i4]) / (work[(i4 - 2)]));
		a2 = a2 + b2;
		if (((100 * (java.lang.Math.max(b2, b1))) < a2) || (cnst1 < a2)) {
			break;
		} 
	}
	a2 = cnst3 * a2;
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 26
 
operation: DELETE
location= org.apache.commons.math.linear.EigenDecompositionImpl
line= 1541
original statement= b2 = (work[(nn - 13)]) / (work[(nn - 15)])
fixed statement= b2 = (work[(nn - 13)]) / (work[(nn - 15)])
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 27
 
operation: INSERT_BEFORE
location= org.apache.commons.math.linear.EigenDecompositionImpl
line= 1541
original statement= b2 = (work[(nn - 13)]) / (work[(nn - 15)])
fixed statement= if (true)
	return ;

generation= 1
ingredientScope= -
 
 ----
ProgramVariant 40
 
operation: DELETE
location= org.apache.commons.math.linear.EigenDecompositionImpl
line= 1477
original statement= a2 = 0.0
fixed statement= a2 = 0.0
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 46
 
operation: DELETE
location= org.apache.commons.math.linear.EigenDecompositionImpl
line= 1481
original statement= b2 = (work[(nn - 5)]) / (work[(nn - 7)])
fixed statement= b2 = (work[(nn - 5)]) / (work[(nn - 7)])
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 106
 
operation: DELETE
location= org.apache.commons.math.linear.EigenDecompositionImpl
line= 1517
original statement= if (a2 < cnst1) {
	s = (gam * (1 - (java.lang.Math.sqrt(a2)))) / (1 + a2);
} 
fixed statement= if (a2 < cnst1) {
	s = (gam * (1 - (java.lang.Math.sqrt(a2)))) / (1 + a2);
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 109
 
operation: REPLACE
location= org.apache.commons.math.linear.EigenDecompositionImpl
line= 1517
original statement= if (a2 < cnst1) {
	s = (gam * (1 - (java.lang.Math.sqrt(a2)))) / (1 + a2);
} 
fixed statement= if (false) {
	s = (gam * (1 - (java.lang.Math.sqrt(a2)))) / (1 + a2);
} 
generation= 1
ingredientScope= -
 
 ----
ProgramVariant 110
 
operation: DELETE
location= org.apache.commons.math.linear.EigenDecompositionImpl
line= 1518
original statement= s = (gam * (1 - (java.lang.Math.sqrt(a2)))) / (1 + a2)
fixed statement= s = (gam * (1 - (java.lang.Math.sqrt(a2)))) / (1 + a2)
generation= 1
ingredientScope= -
 
2015-08-25 18:21:15,551 INFO main - 
----stats: 
2015-08-25 18:21:15,551 INFO main - 
spaces navigation: [0]: {}
#gen: 0
#patches: 18
#RightCompilation: 1824
#WrongCompilation: 356
#FailingTestCaseExecution: 1825
#RegressionTestExecution: 19
#TestcasesExecutedval1: 30464
#TestcasesExecutedval2: 37867
#FailingTestCase: 17
#RegressionTestCases: 1993
#OfAppliedOp: 0
#NotAppliedOp: 0
#InmutatedGen: 0
#unfinishValidation: 0
#ing {}
#untilcompile {}
2015-08-25 18:21:15,551 INFO fr.inria.main.AbstractMain - Time Total(ms): 3120245


Node: graphene-90.nancy.grid5000.fr


Date: Tue Aug 25 20:21:15 CEST 2015


